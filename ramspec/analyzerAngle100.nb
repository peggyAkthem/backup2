(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1544881,      29455]
NotebookOptionsPosition[   1535066,      29288]
NotebookOutlinePosition[   1535412,      29303]
CellTagsIndexPosition[   1535369,      29300]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lor", "=", 
    RowBox[{
     RowBox[{"d", "/", 
      RowBox[{"(", "     ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "a"}], ")"}], "/", "b"}], ")"}], "^", "2"}], 
        "  ", "+", " ", "1"}], "    ", ")"}]}], " ", "+", " ", "c"}]}], ";"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga", "=", 
   RowBox[{
    RowBox[{"b", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "x"}], ")"}], "2"]}], "  ", "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "*", 
         RowBox[{"s", "^", "2"}]}], ")"}]}], "]"}]}], " ", "+", "c"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.772349561181714*^9, 3.772349562476942*^9}, {
   3.7723496218973465`*^9, 3.7723496358911877`*^9}, {3.772349979066841*^9, 
   3.7723499812421994`*^9}, {3.7723500733107967`*^9, 
   3.7723500951810045`*^9}, {3.7723501405628366`*^9, 
   3.7723501426439753`*^9}, {3.772350187572418*^9, 3.772350209723091*^9}, {
   3.7723503085065517`*^9, 3.7723504024486775`*^9}, {3.772350434728794*^9, 
   3.7723504885645657`*^9}, {3.772350669826623*^9, 3.77235072960037*^9}, {
   3.7723507897937083`*^9, 3.772350819506598*^9}, {3.7723508637859564`*^9, 
   3.7723508684622726`*^9}, {3.7723509504701405`*^9, 
   3.7723509572663093`*^9}, {3.7723510321331697`*^9, 3.7723510623601894`*^9}, 
   3.7723512988413053`*^9, {3.772354164027684*^9, 3.772354176033609*^9}, {
   3.7723542106525965`*^9, 3.772354217867166*^9}, {3.772354329700035*^9, 
   3.772354353121649*^9}, {3.772354384161752*^9, 3.772354388847926*^9}, {
   3.77235450451677*^9, 3.7723545049599466`*^9}, {3.7723548133954167`*^9, 
   3.772354814033592*^9}, {3.772358285488211*^9, 3.77235839834379*^9}, {
   3.7723601217029552`*^9, 3.7723601459157534`*^9}, {3.7730044762830772`*^9, 
   3.7730044772070775`*^9}, 3.77300547513018*^9, {3.773128335088519*^9, 
   3.7731283436344056`*^9}, {3.7798115496455564`*^9, 3.779811631355651*^9}, {
   3.7798121144286003`*^9, 3.7798121425452347`*^9}, {3.779817509748109*^9, 
   3.7798175518678975`*^9}, {3.779820847807061*^9, 3.779820886354988*^9}, {
   3.7798209292641525`*^9, 3.7798210267677727`*^9}, {3.779821076053481*^9, 
   3.7798211956819077`*^9}, 3.77982156581312*^9, {3.7798234338543587`*^9, 
   3.779823442326983*^9}, {3.7798235374638896`*^9, 3.779823537729703*^9}, {
   3.779823571198545*^9, 3.779823573514*^9}, {3.7798236290645895`*^9, 
   3.7798236536659107`*^9}, {3.779824043590654*^9, 3.779824043924759*^9}, {
   3.779824611616588*^9, 3.779824622985345*^9}, {3.7798267738503237`*^9, 
   3.7798267739971237`*^9}, {3.779826984799157*^9, 3.77982699075834*^9}, {
   3.7798272874390745`*^9, 3.7798272879338226`*^9}, 3.7798978994424157`*^9, {
   3.7798984289526777`*^9, 3.7798984311356363`*^9}, {3.7798987307367463`*^9, 
   3.779898752088526*^9}, {3.7798995463670087`*^9, 3.779899556323369*^9}, {
   3.779900681495144*^9, 3.7799006839169793`*^9}, {3.779900715333373*^9, 
   3.7799007187494802`*^9}, {3.781217060734081*^9, 3.7812170762043734`*^9}, {
   3.781217145627821*^9, 3.7812171988510303`*^9}, {3.7812176091554413`*^9, 
   3.781217615302548*^9}, 3.78121781453771*^9, {3.781218256236085*^9, 
   3.7812182567458878`*^9}, 3.7812187188821173`*^9, {3.7821271190991135`*^9, 
   3.782127147914853*^9}, {3.782127229420454*^9, 3.782127432974704*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"cee2bac7-e74d-43b7-bb8d-320fa5429f83"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.781218721564987*^9, 
  3.7812187238376055`*^9}},ExpressionUUID->"96e364e5-e2b1-4f82-84f5-\
1db016c38680"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FindFit", "[", 
   RowBox[{"a10", ",", " ", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"v", "*", "g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], "+", "x"}], ")"}]}], 
      RowBox[{"\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["g", "2"], "4"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "x"}], ")"}], "2"]}], ")"}], "2"]}]]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"-", "3200"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", 
        RowBox[{"-", "3000"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "150"}], "}"}]}], "}"}], ",", "x"}], "]"}], "\n", 
  "\n", "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{"a1ten", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"a10", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"v", "*", "g", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "x"}], ")"}]}], 
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["g", "2"], "4"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "x"}], ")"}], "2"]}], ")"}], 
          "2"]}]]}], ",", 
      RowBox[{"150", "<", "g", "<", "160"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "1500"}], "<", "v", "<", 
       RowBox[{"-", "300"}]}], ",", " ", 
      RowBox[{
       RowBox[{"-", "3200"}], "<", "a", "<", 
       RowBox[{"-", "3000"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "v", ",", "g"}], " ", "}"}], " ", ",", "x"}], " ", 
   "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.772349561181714*^9, 3.772349562476942*^9}, {
   3.7723496218973465`*^9, 3.7723496358911877`*^9}, {3.772349979066841*^9, 
   3.7723499812421994`*^9}, {3.7723500733107967`*^9, 
   3.7723500951810045`*^9}, {3.7723501405628366`*^9, 
   3.7723501426439753`*^9}, {3.772350187572418*^9, 3.772350209723091*^9}, {
   3.7723503085065517`*^9, 3.7723504024486775`*^9}, {3.772350434728794*^9, 
   3.7723504885645657`*^9}, {3.772350669826623*^9, 3.77235072960037*^9}, {
   3.7723507897937083`*^9, 3.772350819506598*^9}, {3.7723508637859564`*^9, 
   3.7723508684622726`*^9}, {3.7723509504701405`*^9, 
   3.7723509572663093`*^9}, {3.7723510321331697`*^9, 3.7723510623601894`*^9}, 
   3.7723512988413053`*^9, {3.772354164027684*^9, 3.772354176033609*^9}, {
   3.7723542106525965`*^9, 3.772354217867166*^9}, {3.772354329700035*^9, 
   3.772354353121649*^9}, {3.772354384161752*^9, 3.772354388847926*^9}, {
   3.77235450451677*^9, 3.7723545049599466`*^9}, {3.7723548133954167`*^9, 
   3.772354814033592*^9}, {3.772358285488211*^9, 3.77235839834379*^9}, {
   3.7723601217029552`*^9, 3.7723601459157534`*^9}, {3.7730044762830772`*^9, 
   3.7730044772070775`*^9}, 3.77300547513018*^9, {3.773128335088519*^9, 
   3.7731283436344056`*^9}, {3.7798115496455564`*^9, 3.779811631355651*^9}, {
   3.7798121144286003`*^9, 3.7798121425452347`*^9}, {3.779817509748109*^9, 
   3.7798175518678975`*^9}, {3.779820847807061*^9, 3.779820886354988*^9}, {
   3.7798209292641525`*^9, 3.7798210267677727`*^9}, {3.779821076053481*^9, 
   3.7798211956819077`*^9}, 3.77982156581312*^9, {3.7798234338543587`*^9, 
   3.779823442326983*^9}, {3.7798235374638896`*^9, 3.779823537729703*^9}, {
   3.779823571198545*^9, 3.779823573514*^9}, {3.7798236290645895`*^9, 
   3.7798236536659107`*^9}, {3.779824043590654*^9, 3.779824043924759*^9}, {
   3.779824611616588*^9, 3.779824622985345*^9}, {3.7798267738503237`*^9, 
   3.7798267739971237`*^9}, {3.779826984799157*^9, 3.77982699075834*^9}, {
   3.7798272874390745`*^9, 3.7798272879338226`*^9}, 3.7798978994424157`*^9, {
   3.7798984289526777`*^9, 3.7798984311356363`*^9}, {3.7798987307367463`*^9, 
   3.779898752088526*^9}, {3.7798995463670087`*^9, 3.779899556323369*^9}, {
   3.779900681495144*^9, 3.7799006839169793`*^9}, {3.779900715333373*^9, 
   3.7799007187494802`*^9}, {3.781217060734081*^9, 3.7812170762043734`*^9}, {
   3.781217145627821*^9, 3.7812171831604433`*^9}, {3.781217222178791*^9, 
   3.7812172342272205`*^9}, {3.7812173551864743`*^9, 3.781217420376609*^9}, {
   3.7812188277027197`*^9, 3.7812188324005685`*^9}, 
   3.7821318024174185`*^9},ExpressionUUID->"684788ba-b513-4283-871c-\
ac5dd03a14cc"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7812189067399406`*^9, 3.7812189082516317`*^9}, {
   3.7821245461993694`*^9, 3.7821245653346767`*^9}, {3.782124706238265*^9, 
   3.782124796030595*^9}, 3.7821271105089893`*^9, {3.782127440627759*^9, 
   3.782127443226643*^9}},ExpressionUUID->"6f8da060-29cb-4688-92ee-\
7b9ef3766f9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"azer", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0000.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a0", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"azer", ",", " ", 
       RowBox[{"{", 
        RowBox[{"290", ",", "410"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa0", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a0", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", "   ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Red", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{"{", "\"\<\[Theta]=0\[SmallCircle]\>\"", "}"}], "]"}]}], ",", 
      " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.772349561181714*^9, 3.772349562476942*^9}, {
   3.7723496218973465`*^9, 3.7723496358911877`*^9}, {3.772349979066841*^9, 
   3.7723499812421994`*^9}, {3.7723500733107967`*^9, 
   3.7723500951810045`*^9}, {3.7723501405628366`*^9, 
   3.7723501426439753`*^9}, {3.772350187572418*^9, 3.772350209723091*^9}, {
   3.7723503085065517`*^9, 3.7723504024486775`*^9}, {3.772350434728794*^9, 
   3.7723504885645657`*^9}, {3.772350669826623*^9, 3.77235072960037*^9}, {
   3.7723507897937083`*^9, 3.772350819506598*^9}, {3.7723508637859564`*^9, 
   3.7723508684622726`*^9}, {3.7723509504701405`*^9, 
   3.7723509572663093`*^9}, {3.7723510321331697`*^9, 3.7723510623601894`*^9}, 
   3.7723512988413053`*^9, {3.772354164027684*^9, 3.772354176033609*^9}, {
   3.7723542106525965`*^9, 3.772354217867166*^9}, {3.772354329700035*^9, 
   3.772354353121649*^9}, {3.772354384161752*^9, 3.772354388847926*^9}, {
   3.77235450451677*^9, 3.7723545049599466`*^9}, {3.7723548133954167`*^9, 
   3.772354814033592*^9}, {3.772358285488211*^9, 3.77235839834379*^9}, {
   3.7723601217029552`*^9, 3.7723601459157534`*^9}, {3.7730044762830772`*^9, 
   3.7730044772070775`*^9}, 3.77300547513018*^9, {3.773128335088519*^9, 
   3.7731283436344056`*^9}, {3.7798115496455564`*^9, 3.779811631355651*^9}, {
   3.7798121144286003`*^9, 3.7798121425452347`*^9}, {3.779817509748109*^9, 
   3.7798175518678975`*^9}, {3.779820847807061*^9, 3.779820886354988*^9}, {
   3.7798209292641525`*^9, 3.7798210267677727`*^9}, {3.779821076053481*^9, 
   3.7798211956819077`*^9}, 3.77982156581312*^9, {3.7798234338543587`*^9, 
   3.779823442326983*^9}, {3.7798235374638896`*^9, 3.779823537729703*^9}, {
   3.779823571198545*^9, 3.779823573514*^9}, {3.7798236290645895`*^9, 
   3.7798236536659107`*^9}, {3.779824043590654*^9, 3.779824043924759*^9}, {
   3.779824611616588*^9, 3.779824622985345*^9}, {3.7798267738503237`*^9, 
   3.7798267739971237`*^9}, {3.779826984799157*^9, 3.77982699075834*^9}, {
   3.7798272874390745`*^9, 3.7798272879338226`*^9}, 3.7798978994424157`*^9, {
   3.7798984289526777`*^9, 3.7798984311356363`*^9}, {3.7798987307367463`*^9, 
   3.779898752088526*^9}, {3.7798995463670087`*^9, 3.779899556323369*^9}, {
   3.779900681495144*^9, 3.7799006839169793`*^9}, {3.779900715333373*^9, 
   3.7799007187494802`*^9}, {3.781217060734081*^9, 3.7812170762043734`*^9}, {
   3.781217145627821*^9, 3.7812171831604433`*^9}, {3.781217222178791*^9, 
   3.7812172342272205`*^9}, {3.7812173551864743`*^9, 3.781217420376609*^9}, {
   3.781217497621749*^9, 3.7812175039533777`*^9}, {3.7812175460767765`*^9, 
   3.7812175652588263`*^9}, {3.781217637248722*^9, 3.781217644727745*^9}, {
   3.7812176801340847`*^9, 3.7812176860084767`*^9}, {3.7812177222074413`*^9, 
   3.7812177429520583`*^9}, {3.7812181114662805`*^9, 3.781218115784236*^9}, {
   3.7812184083417845`*^9, 3.7812184087672215`*^9}, {3.781218507515337*^9, 
   3.781218545937358*^9}, {3.781218744596709*^9, 3.7812187511763105`*^9}, 
   3.78121885231316*^9, {3.781218965097355*^9, 3.7812190433740063`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"dc386805-457a-44d5-ac6b-ad1c98fe4116"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 
           Rational[1, 3]], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxF1Q9MlGUcB/AbXYwYY4waIrGCJmVaklJpCfljAU1QWMgIGTa6iBiSXXSR
VFDAijUxcUrOiyi557173peLHXDcGHPUGLPLltlVmpKrBtZYmf8o5kLX+/j7
vuPdbrfP7nnf9/n9eX6X7ni59IUom83WbH7Ud+jq9R923/I22dQ1bFDU6s6k
M3FwmUHFjoSKx5LgxAEqj39w+OO74WMGnT95z/S1lfDDA7Q2xp9auQ5OMahl
0yPPjm+Eew36qmnik5R8+AGD7hh86rc3iuG0ARLOnNjTz8CNBl3yHSta/xx8
3KCNv5TsPVQP5xn09ZH80NVXrefrtOzMiYVtLXBQJ+9HU2mB9+BSg65EtjoS
umGnQW09T+5pOAx7dTKjDYb7l+7/NCXz3Ao/nK2Tqei2UXhQJzOazHMTcKVO
sac9zpwwHJbkPmxe38ERSS/98Z9++Swco9OifjmydRauk7SnwVxwAZ6SdKd6
4QJs1+nH3XP3rrW9wz4l+f12uFRStAroNnhWcv7i4RU6rX8/t/p8ItwnKT3Q
WLd/GXxDUt3+C29tSoWDkkrH7nr3zzS4S3L+M+CzkjLUC1fBLsS3Bm6S3C9Z
cJok1Q6bN8CXJN1ftW/yn2zYLymx44vjR3LhCsn5KYCrJZndeWKhEK6X9IrZ
Lp4S+ENJlTXmDsvggM79WQFXGfTtwrYZbQds9pMK72kHvMZPeaoAtfDiZ2Tu
/qJvJxwT4PVO+PkAr3fBHUO8vhl2j/D6VnhihNe3W/kK8n464aJR3n8XnBTi
/Xdb+QtxvD3w9lHOjxteHuL89Fn1HuV8euB9Qc6/hFtG+Pz4rX4a5noNwQ1D
pG7PD8HtAVI/XxyHHxrkfvjcyq+f+2cKHjNo3hwvc+Gl+t3st2/gGsnzJQJ/
4CN1fGdOwZM+7udpeN5LWer61eofL1WrBM3Cj/po76FdiR1zcNhL45vjolb/
Df+skWr/k1fgAi/dnH8L1nqNZjRzYCzCvV6eB7Y2tl8jFe6uW+FajeLUwIyF
gxpNX2utPxoP52mkxmHN7bBLIzUeYpNh0siuEp4Kzwv63hxPFenw7xr1m+W5
ngHfEFz/VfBfguuZCVdpfP6y4DKN67MB7tV4PuXAbkFvqgGcC0dpVKgCKoBr
BC1XGyyCn9BIPT5SAm/ROH9l8OMa3af+ALbDY4L+XWke8B1wgqBadTngYkFq
+3Evwv2C5/VO+CdBrx1Itpc7Ya/g8+CC12ncr81L+f2yyJxwrXC5xvOuHT4o
uJ864UJBr6sB2gU3Co6vG54UpMrf1ANHC6o/6jqQ7LbyIbjeffCUh7aoF3qs
eghSy+0SXhR83v1WPB6u3xCcLeh/wAFxew==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=0\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "72"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.781218970266438*^9, 3.781219044768139*^9}, 
   3.782127480444002*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"454cf25f-3511-4063-8ba3-9971d92a4f2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"a0", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"d", "/", 
       RowBox[{"(", "     ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", "a"}], ")"}], "/", "b"}], ")"}], "^", "2"}], 
         "  ", "+", " ", "1"}], "    ", ")"}]}], " ", "+", " ", "c"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], " ", ",", "x"}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.772349561181714*^9, 3.772349562476942*^9}, {
   3.7723496218973465`*^9, 3.7723496358911877`*^9}, {3.772349979066841*^9, 
   3.7723499812421994`*^9}, {3.7723500733107967`*^9, 
   3.7723500951810045`*^9}, {3.7723501405628366`*^9, 
   3.7723501426439753`*^9}, {3.772350187572418*^9, 3.772350209723091*^9}, {
   3.7723503085065517`*^9, 3.7723504024486775`*^9}, {3.772350434728794*^9, 
   3.7723504885645657`*^9}, {3.772350669826623*^9, 3.77235072960037*^9}, {
   3.7723507897937083`*^9, 3.772350819506598*^9}, {3.7723508637859564`*^9, 
   3.7723508684622726`*^9}, {3.7723509504701405`*^9, 
   3.7723509572663093`*^9}, {3.7723510321331697`*^9, 3.7723510623601894`*^9}, 
   3.7723512988413053`*^9, {3.772354164027684*^9, 3.772354176033609*^9}, {
   3.7723542106525965`*^9, 3.772354217867166*^9}, {3.772354329700035*^9, 
   3.772354353121649*^9}, {3.772354384161752*^9, 3.772354388847926*^9}, {
   3.77235450451677*^9, 3.7723545049599466`*^9}, {3.7723548133954167`*^9, 
   3.772354814033592*^9}, {3.772358285488211*^9, 3.77235839834379*^9}, {
   3.7723601217029552`*^9, 3.7723601459157534`*^9}, {3.7730044762830772`*^9, 
   3.7730044772070775`*^9}, 3.77300547513018*^9, {3.773128335088519*^9, 
   3.7731283436344056`*^9}, {3.7798115496455564`*^9, 3.779811631355651*^9}, {
   3.7798121144286003`*^9, 3.7798121425452347`*^9}, {3.779817509748109*^9, 
   3.7798175518678975`*^9}, {3.779820847807061*^9, 3.779820886354988*^9}, {
   3.7798209292641525`*^9, 3.7798210267677727`*^9}, {3.779821076053481*^9, 
   3.7798211956819077`*^9}, 3.77982156581312*^9, {3.7798234338543587`*^9, 
   3.779823442326983*^9}, {3.7798235374638896`*^9, 3.779823537729703*^9}, {
   3.779823571198545*^9, 3.779823573514*^9}, {3.7798236290645895`*^9, 
   3.7798236536659107`*^9}, {3.779824043590654*^9, 3.779824043924759*^9}, {
   3.779824611616588*^9, 3.779824622985345*^9}, {3.7798267738503237`*^9, 
   3.7798267739971237`*^9}, {3.779826984799157*^9, 3.77982699075834*^9}, {
   3.7798272874390745`*^9, 3.7798272879338226`*^9}, 3.7798978994424157`*^9, {
   3.7798984289526777`*^9, 3.7798984311356363`*^9}, {3.7798987307367463`*^9, 
   3.779898752088526*^9}, {3.7798995463670087`*^9, 3.779899556323369*^9}, {
   3.779900681495144*^9, 3.7799006839169793`*^9}, {3.779900715333373*^9, 
   3.7799007187494802`*^9}, {3.781217060734081*^9, 3.7812170762043734`*^9}, {
   3.781217145627821*^9, 3.7812171831604433`*^9}, {3.781217222178791*^9, 
   3.7812172342272205`*^9}, {3.7812173551864743`*^9, 3.781217420376609*^9}, {
   3.781217497621749*^9, 3.7812175039533777`*^9}, {3.7812175460767765`*^9, 
   3.7812175652588263`*^9}, {3.781217637248722*^9, 3.781217644727745*^9}, {
   3.7812176801340847`*^9, 3.7812176860084767`*^9}, {3.7812177222074413`*^9, 
   3.7812177429520583`*^9}, {3.7812181114662805`*^9, 3.781218115784236*^9}, {
   3.7812181620273733`*^9, 3.7812182093143444`*^9}, {3.781218246400241*^9, 
   3.781218337922181*^9}, {3.7812184228562913`*^9, 3.781218423814841*^9}, {
   3.7812187631697764`*^9, 3.78121877571766*^9}, {3.7812190841537247`*^9, 
   3.781219092116659*^9}, {3.782127462357421*^9, 3.782127474908271*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"52ad5591-c08f-4135-9231-c53edfa88f1c"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"1703.71975168415`", "\[VeryThinSpace]", "+", 
       FractionBox["3.7108428776851185`*^7", 
        RowBox[{"1", "+", 
         RowBox[{"6.813953055796133`*^-15", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.8458468881695695`*^9"}], "+", "x"}], ")"}], 
           "2"]}]}]]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 1.8458468881695695`*^9, $CellContext`b -> 
      1.2114358773687923`*^7, $CellContext`c -> 
      1703.71975168415, $CellContext`d -> 
      3.7108428776851185`*^7}, {{$CellContext`x}, {$CellContext`c + \
$CellContext`d/(
        1 + $CellContext`b^(-2) (-$CellContext`a + $CellContext`x)^2)}}}, {
    1}, {{496.217, 3417}, {496.803, 3370}, {497.389, 3465}, {497.976, 3427}, {
     498.561, 3482}, {499.147, 3341}, {499.733, 3406}, {500.319, 3350}, {
     500.905, 3472}, {501.49, 3385}, {502.076, 3429}, {502.662, 3362}, {
     503.247, 3278}, {503.833, 3290}, {504.418, 3369}, {505.004, 3384}, {
     505.589, 3283}, {506.174, 3290}, {506.759, 3230}, {507.344, 3287}, {
     507.929, 3245}, {508.515, 3172}, {509.1, 3177}, {509.684, 3204}, {
     510.269, 3124}, {510.854, 3170}, {511.439, 3202}, {512.024, 3179}, {
     512.608, 3113}, {513.193, 3186}, {513.777, 3218}, {514.362, 3151}, {
     514.946, 3199}, {515.531, 3162}, {516.115, 3142}, {516.699, 3181}, {
     517.283, 3130}, {517.868, 3131}, {518.452, 3088}, {519.036, 3192}, {
     519.62, 3158}, {520.204, 3116}, {520.788, 3120}, {521.371, 3125}, {
     521.955, 3147}, {522.539, 3288}, {523.122, 3374}, {523.706, 3429}, {
     524.29, 3607}, {524.873, 3838}, {525.457, 4104}, {526.04, 4195}, {
     526.623, 4483}, {527.207, 5018}, {527.79, 5054}, {528.373, 5236}, {
     528.956, 5451}, {529.539, 5654}, {530.122, 5664}, {530.705, 5465}, {
     531.288, 5657}, {531.871, 5412}, {532.454, 5263}, {533.036, 4989}, {
     533.619, 4822}, {534.202, 4460}, {534.784, 4226}, {535.367, 3864}, {
     535.949, 3630}, {536.531, 3420}, {537.114, 3120}, {537.696, 3122}, {
     538.278, 3015}, {538.861, 3041}, {539.443, 2938}, {540.025, 2936}, {
     540.607, 2971}, {541.189, 2916}, {541.771, 2798}, {542.352, 2851}, {
     542.934, 2788}, {543.516, 2894}, {544.098, 2774}, {544.679, 2739}, {
     545.261, 2778}, {545.842, 2722}, {546.424, 2746}, {547.005, 2720}, {
     547.587, 2682}, {548.168, 2803}, {548.749, 2687}, {549.33, 2678}, {
     549.911, 2734}, {550.493, 2730}, {551.074, 2766}, {551.655, 2637}, {
     552.235, 2689}, {552.816, 2610}, {553.397, 2719}, {553.978, 2726}, {
     554.559, 2717}, {555.139, 2652}, {555.72, 2568}, {556.3, 2599}, {
     556.881, 2641}, {557.461, 2668}, {558.042, 2643}, {558.622, 2713}, {
     559.202, 2746}, {559.782, 2731}, {560.362, 2634}, {560.943, 2597}, {
     561.523, 2617}, {562.103, 2657}, {562.683, 2563}, {563.262, 2591}, {
     563.842, 2530}, {564.422, 2606}, {565.002, 2686}, {565.581, 2515}, {
     566.161, 2590}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.7812190544434795`*^9, 3.7812190934076853`*^9, 
  3.782127485072109*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"32c2d3b0-bc21-421a-9efc-adb0edd7bbb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%30", "[", "\"\<ParameterTable\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[32]:=",ExpressionUUID->"f1a26bb7-d1a4-4d29-930e-3db3445eb2d4"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", "1.8458468881695695`*^9", "1.1834628016995355`*^11", 
      "0.015596999631241507`", "0.9875824648908099`"},
     {"b", "1.2114358773687923`*^7", "1.202114925940539`*^13", 
      "1.0077537939402596`*^-6", "0.999999198585049`"},
     {"c", "1703.71975168415`", "3.256634643907735`*^9", 
      "5.231534814233275`*^-7", "0.9999995841662007`"},
     {"d", "3.7108428776851185`*^7", "1.9623716943989514`*^12", 
      "0.000018909989826477298`", "0.9999849441473134`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.782127501994464*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"58fd6224-398e-45fd-82d4-1425cef99c9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%30", "[", "\"\<AdjustedRSquared\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[31]:=",ExpressionUUID->"cbeeada4-91fe-4322-bc7e-bfc917433a44"],

Cell[BoxData["0.9457407360088638`"], "Output",
 CellChangeTimes->{3.7821274914520273`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"44188dfa-4447-418a-ac62-09181722f3aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"a0", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     TagBox[
      RowBox[{"1703.71975168415`", "\[VeryThinSpace]", "+", 
       FractionBox["3.7108428776851185`*^7", 
        RowBox[{"1", "+", 
         RowBox[{"6.813953055796133`*^-15", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.8458468881695695`*^9"}], "+", "x"}], ")"}], 
           "2"]}]}]]}],
      Short[#, 2]& ], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "520", ",", "550"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7812193025523405`*^9, 3.781219319168768*^9}, {
  3.782127518067504*^9, 3.7821275189668026`*^9}},
 NumberMarks->False,
 CellLabel->"In[34]:=",ExpressionUUID->"58a45fc1-c7ba-4458-9a64-2de21c8ccdaa"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxF1Q9MlGUcB/AbXYwYY4waIrGCJmVaklJpCfljAU1QWMgIGTa6iBiSXXSR
VFDAijUxcUrOiyi557173peLHXDcGHPUGLPLltlVmpKrBtZYmf8o5kLX+/j7
vuPdbrfP7nnf9/n9eX6X7ni59IUom83WbH7Ud+jq9R923/I22dQ1bFDU6s6k
M3FwmUHFjoSKx5LgxAEqj39w+OO74WMGnT95z/S1lfDDA7Q2xp9auQ5OMahl
0yPPjm+Eew36qmnik5R8+AGD7hh86rc3iuG0ARLOnNjTz8CNBl3yHSta/xx8
3KCNv5TsPVQP5xn09ZH80NVXrefrtOzMiYVtLXBQJ+9HU2mB9+BSg65EtjoS
umGnQW09T+5pOAx7dTKjDYb7l+7/NCXz3Ao/nK2Tqei2UXhQJzOazHMTcKVO
sac9zpwwHJbkPmxe38ERSS/98Z9++Swco9OifjmydRauk7SnwVxwAZ6SdKd6
4QJs1+nH3XP3rrW9wz4l+f12uFRStAroNnhWcv7i4RU6rX8/t/p8ItwnKT3Q
WLd/GXxDUt3+C29tSoWDkkrH7nr3zzS4S3L+M+CzkjLUC1fBLsS3Bm6S3C9Z
cJok1Q6bN8CXJN1ftW/yn2zYLymx44vjR3LhCsn5KYCrJZndeWKhEK6X9IrZ
Lp4S+ENJlTXmDsvggM79WQFXGfTtwrYZbQds9pMK72kHvMZPeaoAtfDiZ2Tu
/qJvJxwT4PVO+PkAr3fBHUO8vhl2j/D6VnhihNe3W/kK8n464aJR3n8XnBTi
/Xdb+QtxvD3w9lHOjxteHuL89Fn1HuV8euB9Qc6/hFtG+Pz4rX4a5noNwQ1D
pG7PD8HtAVI/XxyHHxrkfvjcyq+f+2cKHjNo3hwvc+Gl+t3st2/gGsnzJQJ/
4CN1fGdOwZM+7udpeN5LWer61eofL1WrBM3Cj/po76FdiR1zcNhL45vjolb/
Df+skWr/k1fgAi/dnH8L1nqNZjRzYCzCvV6eB7Y2tl8jFe6uW+FajeLUwIyF
gxpNX2utPxoP52mkxmHN7bBLIzUeYpNh0siuEp4Kzwv63hxPFenw7xr1m+W5
ngHfEFz/VfBfguuZCVdpfP6y4DKN67MB7tV4PuXAbkFvqgGcC0dpVKgCKoBr
BC1XGyyCn9BIPT5SAm/ROH9l8OMa3af+ALbDY4L+XWke8B1wgqBadTngYkFq
+3Evwv2C5/VO+CdBrx1Itpc7Ya/g8+CC12ncr81L+f2yyJxwrXC5xvOuHT4o
uJ864UJBr6sB2gU3Co6vG54UpMrf1ANHC6o/6jqQ7LbyIbjeffCUh7aoF3qs
eghSy+0SXhR83v1WPB6u3xCcLeh/wAFxew==
       "]]}, {
      {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwd0W8s1AEYB/AT6jprmTNKbI783eFItJSekCvjJtK4EVmhQyFkTTw/9KKR
DSExQ2JXIpaMcIWYnRkXxlFS1ixRthgbJ7/nxbPvPtt33zePIPpO0M19HA7H
fe/YLBEGcTiAkPvuuqXhiBx+//PNdjiPcMNHRvbp8dBIvRB8VSnkjQCr7XYf
BN5qLrkuWBU3fgkhar+c/Cf8rnOZBCFGriTHR7484B2MkFm9Qhb5vpeEhCJE
pxocZ10u+rCmH4GwOeFKFu9W67pEI1wzkpKth/g2HrEIKnkWubE4s34lfq8/
VENO9lIU6yYjrA5+Is+tr88NpiE8CVwip9f1uSbdR/AT8qxYh524tZOVjTC6
5Ej+OqRt4Z6HoCO6TG6CjI4rjxC4oelkeVuOVFqIYKZ6Rr5oy4QdLEFYnOom
i3LChs2eImR0L5A7561KZ6sQuoU61qzzBSPjmlqEsQd25IJwrimvEWHdXEJ2
qjzV1/sKQSlJIh/r9ZqZfoNwO6KULF8E/6p2hP6NDnKMzuSIuAvB/vsMOYHr
3RuqQAhv1pD5+i/0+AMIXroCG9ba29+GXYYRNs74ki0W2kpPjyJ0DcrIP4Yz
epZVCI6zBeSVsiNX900jpIy1kitim/z65vb+GThBTnWe8pctICRYbJDL52cU
934ieE6a2LIOLxovdFxGGDA4S5bZPB/1+4tg5BxNNvkYJ9NfRzBR55G3ggf4
vVsITpMNZIFyy2Fcg2DQqiQvX7Csf6zNQIPxKllTb53fwmWAG8m3Y31uR5Hd
eYiBzE13skVYwFiCAQM1plKypOJt0UNjBooF2WTTL4dbxKYMuLXWko+aaKnX
zBn4VdxPjvQYSdOyZiAhZIksjspP7LLf26vj2bPW3+Gr9IQMeJ40JKsrqtwi
HBhQD5mR692sKpsdGciQ2pATP7/e3XViwHBFRP4P6AuIBg==
        "]]},
      Annotation[#, "Charting`Private`Tag$19034#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{494.7598333333334, 2395.027777777778},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{494.7598333333334, 566.161}, {2395.027777777778, 4674.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7821275458859625`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"4058dfc5-a80d-4008-bdc0-762e89b124ff"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7798234501922836`*^9, 
  3.7798234536005845`*^9}},ExpressionUUID->"cb852a00-4789-4b1e-ad4c-\
4576a321cb50"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a10", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0010.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a10", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"a0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aa10", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"a10", ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", 
     FractionBox["1", "GoldenRatio"]}], ",", " ", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", ",", 
    "  ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
      "}"}]}], "  ", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "Medium", "]"}], ",", 
       RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
        RowBox[{"Lighter", "[", "Blue", "]"}]}], ",", 
       RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\"\<\[Theta]=10\[SmallCircle]\>\"", "}"}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176070278096`*^9}, {
   3.779819556438471*^9, 3.7798195674682727`*^9}, {3.7798197022880573`*^9, 
   3.779819711898589*^9}, {3.7798213196561785`*^9, 3.7798213561175237`*^9}, {
   3.7798215140128794`*^9, 3.779821539056749*^9}, {3.779823232280595*^9, 
   3.779823404722175*^9}, {3.779823509677033*^9, 3.7798235282992177`*^9}, {
   3.77982366078207*^9, 3.779823676377866*^9}, 3.7798239876383305`*^9, {
   3.7798240479973207`*^9, 3.779824048220722*^9}, {3.7798246303564453`*^9, 
   3.779824631321312*^9}, {3.7798267810321317`*^9, 3.779826781209173*^9}, {
   3.779827002598977*^9, 3.7798270071353064`*^9}, {3.7798272910614843`*^9, 
   3.779827291232229*^9}, 3.7798978942863283`*^9, {3.7798984490171614`*^9, 
   3.7798984498355722`*^9}, 3.7798987595852175`*^9, {3.7798995628133726`*^9, 
   3.7798995664044275`*^9}, {3.7812185849051123`*^9, 
   3.781218585813712*^9}},ExpressionUUID->"396a3997-7be5-4de0-9b62-\
19ad530045d4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Medium], "LineColor" -> RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]], 
        LineBox[{{350.79871641791044`, 6500.}, {350.942, 6484.}, {
         351.07533333333333`, 6500.}}], 
        LineBox[CompressedData["
1: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
/QmR693oD8uV/d2YX3eRv/VADz8gH3EjPveSz7hRvw+QL7rFVkNufzhEjvWg
H/2UnEJ7Hydfc8PeX+r1yec/p7U95P7Pksvd0I967Q+p9w3kS27Ut1+1f2S+
/E6e7oZeXSN38qDfukGO8kBfbloBbu/B/NhkRcQfMr6jyQ1unL+2JJ90wx9t
yF+7oe8dVkTWL9fTiWzki1xPF3JzD/rfHisi/pb1OIa8xw379CG7aJ/+ZMP/
Mr8fIz/rQb0eRD6RAz15St9P+mu4Wo8b+jVas6xvY8kJHmG2N+ueI7em3kwk
n3djvplMnkx9e5Hsd6O/eZm8yI38SdHrl3qUSl5Pf75JzndjPlqo7yfnz6Xk
Yjf0Yzn5gBvzwCryITfWm0ku5HqzyEa+y359CznWDX2xkpfR3y5yhhv9gZcc
Rb3eRq5zYz4qIie7oXdBspGfcp4NK3u5oec7yaluxOducgrzZY9en9SL/eRm
bsxLB8md3HjeUEvOpP3r9PXlfr4gL+V+TpHnudl/kuPdOJ/5ntzVjf7qZ/Lz
btTX/2p/zDEPhC6Rp7mR/1fJtTnwz186PmX/0GgluEUO6uUt5Os5iP/byCVu
1LfbyQdyoFet1e+53/bkETnQz7vJo3PQj927MrIfed7QXV9P6nlPchLzuTc5
Kwf9/cPkqBz4N47cmfo7kNwvB/k+mNyB9hhG7ulGfo0kW1wi3jzQekbt3wU9
GEeekYPnHYnkHoznJPKVHOjXVHLAhXnlJb1/aa+Z5EoX4n0W2e2CnswhN8mB
/s8np+eg3i7R9pB6nKbWk4P6sILc2gV7riZPyUF/tp58xoV82aRZ9iPZ+vdy
3reTk3OgV25yogv29pNrnIi/AmU/J/4Wk+ucyLcSFR8uPK+sIMfmoD98jxzj
wvlAtVpPDubTGnKtE/H7sbaX9NdhZR8n5uFj5Con4vu4up8L+fyVihcX/Hma
PNCJfuQcOcGFfK8nCyfm41/U/V04v/hV+dsFPb6s9y/722vkJS7Eww1tf9nv
3LQqYj8z/B9vQl7gQn5Fk+udOP9tSW6cg/dH2qyK7E/GUwfyCSfml05kixP5
2YXc3oX3c+4nT3FBr2LIKU7EYyw52YXztP56ffL9mEfJQ534fJBanxOfDyGn
OVGPhpMDDnw+ihzDz+PJRr5I/UggNzjw+QTyJf5+kvo+P5+m1y8/n07uzPW/
Sq7m+meT/Q58Ppc80IX9LyBnOmGft8gZTtjvHfI52nclOZX2X6PtL/urDco/
DvjvXe1/6V+L+r0D/neQ+zlxvuzRn8v4ySU7nJjXC5U9GH/Fav9O1KtSzVKv
KshNGN9V5CwH4r+abMSz1LuPtH9lP/uxWp8L88oR8ggnzjePkWsc0NPP9f3l
PP+Vjg/ZL59R93diPj9HdjugDz+S45zQ81/U9Z2YBy+qfHBAfy5r/8p+60/y
XOrXDeUfB/qFmzLAyQ7oX5OMiP8xH5LjHajPLTMi/pD9XhvyEgf6qw7kQ07o
cyfyAQfqfxdyCxf62/v15/K8K4Ycw3iPJUcznvqTpzgRL4+SrzMeBunvy352
CLm1E+cdw8nVDvhzFNntxLwerz+X/kogG/lmHt+1nkBOdKDfmESe4YTeT9Pf
l893p2v7yvOYmeQg7T1b30/2o3PI9XbMXwvIFxw8HyWPdvL9YLV/O/qtFdpf
Mr/XkFNceH6yXttX2utdsnAgP7L1/WT8O8hzGd9ucpUD/W+uZjl/FpANvZLx
WUyuoz1KtL9l/JWTjfiW/c57+vsyvj5Q9rLj+UKNso8D8XNAr1fq4WGykW9y
v5/q/cn9HicnOFDPviQbeo55kZzuwPx2Vsez9H89ub0D75c06PvJv7+Suzox
r/6uWfZ3V/V+Zb78reLJiXml0Wpwa9aHW8mb7djPbWQj32V9bUH2U79akx2M
5zvJ1x3o9+9eHdmfnA/vIxv6I/3TnZzpQP/dkxzvxPlsb/IVB/L7YXKtA+d7
ceQ4B+rFQHIS7T+Y3MOBfvtp8hQH+pWR5EMO6OEY/XsZT+P0/aSejdf7l3r1
gvrcjv56CvmkA/ZN1veT+fEKOdmOfvU1stEfyfntDXJnB87755FHO9CfLVb2
sCMe3iYb/YiM7+WKqZ8ZZKO+yXzOVOt3wn4byZV21NMtZENvZD2zkefaoV8u
cr4D9cSn9uNAv7mNPNQO/SnS15PnSUHyJepLWK3XDj3eSa6zo36/TzbyT9pn
D/mcHfbZR061I18OqvuzPh0lp9gRX/8hx9BfJ1S8Mb9Pko18lf3GN2Sjfsl6
/x25yo56/BN5BuPnvPK3HfPRb+SgDfr7h/KvHfPCn8q/drz/E7UGfNKG/GtM
NuJR9r9NyYaeS338JzmW9bsV+ZAd81pb8hTqfYc1EX/Ief8e/X1Z/7qQo5g/
PdZE9i/9H7Mmsn4Zj33IRvxIe/cnD7Tj/P5RsqG/cl4aRK6x43xniGbZfw1X
+7XjfaJR5Dg74i2eXMf7JZAdduRjItnQP3m/SXq/st+dqtcv9zdd71/OKzPJ
0Q7Mr7PJVTbYcw45zQ59na/sa0d9XKL9IfMpTa3HhvhdQQ5Q71eTR9ihN+vJ
C1ivN5ET7DgP3qr2a4Ne28lGfsrzvRz1ezv0zU826rvsH/LVelgPA+TNzIeQ
ii/W9zL9fTk/7dLxJO21W19fxt9ecrwNzx/3k2sZ7wfJHZnvtTreZb9dp+LJ
hvz6gtzA9Z8iZ9gxL3+j4tWO+va9Wq8d/v6JvMQOPfuvjhc5v/6m40H2U1fI
Tew4b79OrrbheU/UWrDbhv7wZnKiDfWlKTnBhvxoTu7nQPy0IkfZ0G+0XRu5
v7THXeQkG/x5D9liQ33tujayPqn/PcgdbYj/mLWR/cv+t8/aiD+lnvbX65fz
+GNqPXb0U4PIRrxL+w4hL7Ahn4br/cl6O4pca8N8E08+YIMeJpBrbKgHiXo/
Mt4mkWNt0J+p6vdW5Mt0ZQ8735/U15fPd2aR0xm/c8jxvN58bR95vSV6vfJ6
aeRUri+dfMWGeFpN3mzFvLqOfJ373UQ29E+ep2zVv5f5ZSOn2dBP5pD9NuiD
T9tX+iNf+cuG+StAvkD/BsknrNCbMnKY/cROcj7jZTe5sQ16uYd8xornofu0
f+R52EF9P9mfHyXPZTzXqf1ZkN8nVDxZ0Z+dJM+w4bzkG/JA6ut3+noy337S
9pf9ynm9PlkfLqp4tKL+/aHvJ+PrT3Id4/UGOcaG+tY4k/e3YX5rQt5M+/yT
bPQD8v27luQRNuhVG3J7G84nOpDDNtSnTvr7sr/tQjbqgex37icn26CnD5KT
GI+x5HQb4qdfZmQ/sl+JIxvxJM93n9DXk/owWLOsj8PIS6i/I8mx1K8x2h5S
z8eRDT2Q9Wi8to/MrxfI56yI3ynkaNozmeyw4vzhFfIFK/TuNXU9K/q918lG
vMnzmHlkQ++lHi9S17Ph79vkudSf5eQ43n+VXr+8fya5H+t1FlnYEJ+btT9l
v2HV+5Xzt1NfX+avh1xvhZ7mkatp/0LyCebHDnIm+71SvT/ZX1aQR9sQz1Xa
HlJ/q1U82nBeXKP8aUV+fqz3J+PvsPaHzKdj5IAN8/xx7T+pN1+SExj/p3V8
SHud1f6U9vpBr1f2Sw36flI/L6j1W9HvXVLxZUU9u0qOYn38i2zon+x3Gq0D
p3G9t5Az2P82I3dkfN1ONuJJxvcd6yLXl/NWO3Ii7duRbMS77B86r4vsV/Zv
XcmpzO8H9Oeyv36InM986EO2MB4GkI36Lc9/HlsXsbfsh54kG/OQfB7wlLqe
FfVzODmL/hhNrqW+xpP9VuwvQTH1Y8K6iP3l/DWJPJf6NZVs6KnMt+nkgBXn
+zOVPW3w3yy9Pxlvc8hGPsv+fz7ZiH953reEXEV7pJGNfMS/nyRfsuJ54Grl
T/p7HTnFiv5kI1np2VayUe9lP2ZT9rKivrvIRr7Kften1yPn9W3kJcy/IrKh
9/J8Lqi+z/oYJjuoF5V6vbJ/fF/7W9bnD8n1tPdH+vpSXz7R9pL16gj5OuPv
GDnejn7yc7JRP3B+q+Kb5w2nyUZ/IM8TzpFbsJ+tJ6ezP27Qn0t//kpuz/n5
d3Jr9j9X9frx79mUPTj/N1of2b/Mh1vIJ62YX28jz6U+3U7eTD1vTTbmOVnP
2pONfJXnSR3JMxhf95LPsN/pRhZ2fP8BcrId3+9FHsp5rO/6yP7l9weQjfiR
3398fcT+cj1PklO5nqfI7bn+EWo/nNdHr4/4U9onntyP9kkgH6I9J5Az2Q9N
Ihv9raw3U8knmH/TyRY79GgmuSP7g1lkY/6S8TCHXMt6Np88kPVkMbmG80sa
OcD4TFf2tKE/zCCncf5bR87nPLZRx4OcT7eQqzlv2chGfyzf33Hp38t/r+Ul
H3AgH7ep/fH8okjZg/PoDr1+me9hcood9bZS+1/qa5X2h9STD9X9bdDjj5S9
rJg/PybXWdHPHdH+kP3PMbKqZ8f/Jz6+Ivewwt+nyQus8N9ZdX8r8vkHlQ9W
+KOBfMmCfvACOdqK9xcuqfywwL5XVfxaoF9/kY1+QerdPzaAwxbM07eQ462w
VzNya/YHzcmdLThPu2NDZD9yvmpHNuqT1Pe7yKOZT503RO4v999VfW7B/nuQ
W1gRjzHkfAvqUx9yugXx1Z98PRt6/Cj5SjaeFwwiV2ajXg4hV1swrw3T95f9
2ShylgX7eYacZsV+xunry/0kklMt6GeS9PpkvzyFnJANPU8mZ1rQL72i7Sn9
8xq5owXvG7xOPpON+j9P2SMb88Mi8oJsxOdSclcL+r3l5EPZ0KNV/2Pvtfpz
ef63gRxtQT5v1uuT+Wkhu7k+BznWgv7LQw5mY17L1deX/XABOcaC95mKyQ7a
r4R8zgJ9Ktf2lechu1R8ZaN/+0DbR9bzvcr+2fDvfrJgvB4iZ1iQr7XKvxbU
ozoVnxbo5wlycjbi7xS5Khv91DfkJAvy6TsVH1thj5/IjS3Qk/Nq/9mIp4t6
f7IeXNb+kf3mn+T6bPT/N8iJFvjrH1ngS9k4j2xMnpKN5zG3kPtZ+L4tuS4b
z1eakbtmo95Ek1OzZb34uDk5aJHxdr6F+j305447siLrlfdrkxVZn7xfO3KK
Rf5Nu5NcBb3x30U+yXy8m2zku2nehnv09cz9t7yPfI761pV8IFvWiwndlT0s
iIceZCPe5P8upSf5hAV6FqPvbz5Pqu9FHmqBvvchj7DI53OxD5Pd7Gf6k418
Nvup+Y+QjfnDfB5pe5Rs5I+cRx8nX7eiHj5BzrDK/L9ZKP9Zcd4zhDzDivPc
oeRYK/J/mGbT/5tGkNtbpX3KRpLj0R+dGE1ujfn/2hgVH5yfxpIbrDifGafv
L/XwOeVvK/RgvGaZPxPUfnH+fPAF5W+s9/wk8hUr/DmFnIx5oN80/Xtznhmf
rK5vw/uQ03X8SX2Yoa9n9tPvz9TrMc8DzqRof0i9nk1ewvPj11X847xy2Bz1
fRueL75JrsY8umY+OY7930JyYxvOoxYr+9vk8+MLb6nP7cjPNPIh7neZ3q/s
L9NVfNvwvHalXo/850IZyp92/nsjFU84zzqZSTbmdzP+r68nJ/H9j43kNDv0
7F21XoeMx6lblP3wvsaybOU/zgNWlY98v8ZObuHEfONU33fI+LjVrfIf76vc
7yVH4/2eEX4V/y7ZT76Sp/LLBXvnk8/gfb+iQpVveL/2YIC8D+9rNhSr+Mb7
vP8Mkd/AvxfoVar260X/XEZu7kM+Vaj44L+320n+2yfPc3e8R16ZK+vV0ffJ
bbehX/lAXT8f8/0e9ft86EcN2VKEerePvCeA9w0OkL8slr/P+oTcO4T3Aw6R
3y7B/Y+Qj5bi/rVKP8vk+m//D/m9ClH0VfLiw3Uq33aK/wfWr8rC
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Medium], "LineColor" -> RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Medium], "LineColor" -> RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Medium], "LineColor" -> RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=10\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Medium], "LineColor" -> RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Medium], "LineColor" -> RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Medium", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.779821340471212*^9, 3.779821357359111*^9}, 
   3.7798215979909935`*^9, {3.7798232336690226`*^9, 3.77982333895376*^9}, {
   3.7798233716168623`*^9, 3.7798234057382317`*^9}, {3.7798235146920853`*^9, 
   3.7798235293051147`*^9}, {3.7798236719183507`*^9, 3.779823677070038*^9}, 
   3.7798239892997246`*^9, 3.7798240488136864`*^9, 3.7798246322863917`*^9, 
   3.779825813913074*^9, 3.7798267820508957`*^9, 3.779827007718297*^9, 
   3.7798972273907967`*^9, 3.779897894838025*^9, 3.7798984518501563`*^9, 
   3.7798987606765356`*^9, 3.7798995675843577`*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"342bddef-b84e-4060-b163-d575f41e560b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.779821329698137*^9, 
  3.779821329731048*^9}},ExpressionUUID->"4355c57f-5f44-463b-9ee0-\
ce7900e72469"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a20", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0020.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa20", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a20", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Green", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=20\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176070278096`*^9}, {
   3.779819556438471*^9, 3.7798195674682727`*^9}, {3.7798197022880573`*^9, 
   3.7798197133385572`*^9}, {3.7798213645884705`*^9, 
   3.7798213862074566`*^9}, {3.779821619724626*^9, 3.7798216202591963`*^9}, {
   3.779823468241034*^9, 3.779823496930579*^9}, {3.779823588188801*^9, 
   3.779823598554023*^9}, {3.779823683078516*^9, 3.7798237015781927`*^9}, 
   3.7798239926644754`*^9, {3.7798240520699897`*^9, 3.779824052244557*^9}, {
   3.7798246359464917`*^9, 3.7798246371497726`*^9}, {3.779826785610322*^9, 
   3.7798267857231407`*^9}, {3.7798270125220156`*^9, 3.779827016861989*^9}, {
   3.7798272946814723`*^9, 3.7798272948619537`*^9}, 3.7798978912270494`*^9, 
   3.779898459275511*^9, 3.779898765294733*^9, {3.77990044558475*^9, 
   3.7799004502613916`*^9}, {3.781218589944615*^9, 
   3.781218590929479*^9}},ExpressionUUID->"20f3b72c-475d-4eda-afe6-\
8f8f63d50d83"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]], 
        LineBox[{{349.1133703703703, 6500.}, {349.143, 6492.}, {
         349.46246666666667`, 6500.}}], 
        LineBox[CompressedData["
1:eJxdnHucleP6/+ebkCSVU9JOKGYzEsoOySOpdrWTXUg7fZMkSaJUkqRzmRKq
WedZh5lpzrPmPLVDkmRXjLQTassuW0g7jITwe9b9ed/reX1//pnX+7XW8zz3
fR0+13Xdz8ol4x7/60PNMjIyzjg1IyP19/gnBWtW7XvKyUj9N369U/f9r7tn
fQ63XO8MW5Ezpd1/4eIG58vLr21RegK+fL2zYNM/Ync0myFutd4Z+3njpZ+c
CV+93vl57qSN08+DRzc4Hyam3tLyYrikwXnilpYfJjLhpxucoePajLzxOvhw
g/PFL0Xf7roZ7tjgvNU5+eTEO+BXGpz4He6Kh8LP1Ds3f3rnipyR8J8bnAub
39P66nHe849njn5x86Nweb3zwV/cBz4FL25w3Lu/9M1cOKvBSW1/wVL4jnrH
3c0r7V+GQw3OC5PdFQbhCxsc9+o5t+bDYxqc/imDlsN59c5ln/w0d1ID3LLB
6Ze6wRvwp/XOJakFbIej9U7flEH/Ce+sdy5e9PVdDf+Cz6h3bu05ZsOfD8Nn
18v+38LX1zsp8079xe6/3nG/3arZqTPFW+uc51Ibag23qXeiHa7Z36U9/HGd
84br3rpL4EX1zmezzy0fcBX8UZ3T7Kol53/UAx5ep/31ga+r0/4GePcr3Dr4
T8vuglvUO+/MeC23w9/gp+oUX+PhD+oUD1Pg8jrn8XZuxM2EO9fJf8/DRXVO
kxu+Xy6HZ9c5I2+s2TZjNXxrnZNyX/MIvKDW2d/ltOfXrIMba2XvSrh1nVMQ
3NI5uQH+vtZJmfOWLXBlrdazE36/Vuv5EH6l1vnTstvGfn4Ajtc6Ifd2T34F
n4J9vofvqpV9foWfr3VapQx8+izxubXKlzbwBbWK7w7w6bXOs6mAuAwuq3W6
utu7/Wr44lpn5w73vxvgPTWOa+2Ooxz46lrno3d/HH7wz/ArNY579QuTh8PL
apxUeP00Gq6uUX5MgIfWOKlwbDUV/t8a2fdp+NEaJxW+nRbAG2qcq6vC/12X
DV9Vo/2shc+qUfzlws1qlF9FcM8ap03KwVXwmBrnpCsXf9kI/1Lt5Lly8+Fb
8NIa58XNP2SOfg/uUSP/7IXfrFb8/hv+tdrZ7j7++6/hLjXSxx/gV6ulP7/B
g7BHi6fF+6udp1MB3Q6urFZ+XwQ/XS3/doUXV0u/usG51c4VKQf1gtdXO6lw
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
d1v/r3f+H7+V2Ic=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=20\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.6666666666666666, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", "1", ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7798213737379766`*^9, 3.779821388057689*^9}, 
   3.7798216223496776`*^9, {3.7798234781765127`*^9, 3.779823497781743*^9}, {
   3.779823591477432*^9, 3.779823599542365*^9}, {3.779823696751751*^9, 
   3.779823702255144*^9}, 3.7798239937156644`*^9, 3.7798240528868175`*^9, 
   3.7798246378200784`*^9, 3.7798258169076786`*^9, 3.779826786319001*^9, 
   3.7798270175675097`*^9, 3.7798972304589777`*^9, 3.7798978919462757`*^9, 
   3.779898460710515*^9, 3.7798987664117713`*^9, 3.779900451349681*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"af754b61-d0a9-4ea2-b5d2-684734754fa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a30", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0030.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a10", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"a0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aa30", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"a30", ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", 
     FractionBox["1", "GoldenRatio"]}], ",", " ", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", ",", 
    "  ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
      "}"}]}], "  ", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
       RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
        RowBox[{"Lighter", "[", "Orange", "]"}]}], ",", 
       RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\"\<\[Theta]=30\[SmallCircle]\>\"", "}"}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176070278096`*^9}, {
   3.779819556438471*^9, 3.7798195674682727`*^9}, {3.7798197022880573`*^9, 
   3.779819714728592*^9}, {3.779821393044238*^9, 3.779821407296756*^9}, 
   3.7798216319876127`*^9, {3.7798237146604333`*^9, 3.7798237248253407`*^9}, 
   3.7798239973189325`*^9, {3.7798240556623554`*^9, 3.779824055843906*^9}, {
   3.7798246423261333`*^9, 3.779824643585346*^9}, {3.779826789560686*^9, 
   3.779826789719324*^9}, {3.779827021286662*^9, 3.779827026537074*^9}, {
   3.779827305810024*^9, 3.77982730599416*^9}, 3.779897887476288*^9, 
   3.7798982627058945`*^9, 3.7798984668608785`*^9, 3.7798987705131617`*^9, {
   3.7799004572359705`*^9, 3.779900458181223*^9}, {3.7812185953539457`*^9, 
   3.781218595849584*^9}},ExpressionUUID->"940d9223-99c1-4f84-bb71-\
7bbc95e8ac7f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
           Rational[1, 3]], 
         AbsoluteThickness[1]], 
        LineBox[{{341.91104651162794`, 6500.}, {341.939, 6494.}, {
         341.9621153846154, 6500.}}], 
        LineBox[{{344.969619047619, 6500.}, {345.542, 6480.}, {
         345.62833093525177`, 6500.}}], 
        LineBox[{{348.2298292682927, 6500.}, {348.543, 6393.}, {
         348.98883333333333`, 6500.}}], 
        LineBox[CompressedData["
1:eJxdnH2cVePax+dJknSSFJ2E6MUcRoqiSJakOtVJjhCnPOkk6YQolSRRMlIZ
VLPfZmbvPTM1b83smdnTjE5IRkJIJ0k4ohAGSRKiZ+379733/fk8/pnP97P3
Xuu+r5ffdV33Wjln4r1/v6NZRkZGq+MzMlJ/X75x+u7S/z7gZaT+m/S8t+7H
33fM+RyONHijl+Xe0+57+OUG76sevVtWHIEHNngLN74Ru7bZLPFVDd6Ez7ed
++FJ8B0N3q/zp26Y2QEe3eC9Xzj9ylZnw30avPuubPV+Yeas9PVGTWw7tv/F
8OUN3pe/lf6w/Qq4pt57tUvi/inXwmvrvfi1/opHwXPqvSs+uW5Z7lj4WL33
5+Y3tblwIjy23jucOe7pTf+Cj2vw/vM3/4YPwO3rPf/qz3w7H76n3kttf2E2
vKDe83fzXMdn4cH13lPT/BWG4TPrPf/X864qhtvWe0NSBq2EH673un74y/yp
DfDb67zBqQu8DF9R752TWsCbcP96b1DKoO/B/1nnnf34N9c3/BduU+9d1fe2
9X/dD59QL/v/AL+6zkuZd/pv8F3rPP/brZsdP1s8YZ33SGpDbeDkOi/a6aKP
u3WEH1vnvey7d9058DXrvE/ntq8cegH8W53X7IInTvugD3xpnfY3EO7M/obC
B+q8ks0jLnvyerhTnff6rBcLOv0D/rFO8TUJ3lineLjH/f7edn7EzYbL6uS/
R+FgnXfID9+vlsDb6ryx/ZNbZq2Ar6jzUu5rng8X1nkfd2vx6Mo1cEad7F0N
f5j0VocbuyTWw98mvZQ5r2x0bNbzFlyd1Hret9dPepc9efWEz/fAj9R5Ef9y
938Nf56UfX6ET8Y+v8O/J73WKQOfMEc8LKl8aQvvTiq+O8Hd67yHUwHRFd6X
9Lr727vmQrgq6b211f/vUnhF0vOt3flWD16T9D54++cb9v4VbpX0/F8/Ne0G
uF3SS4XXL+PgS5LKj8nwB7VeKhxbT4dvTMq+D8KDa71U+J61EK6s9S6syft+
zVL4wVrtZxW8ulbxVwAX1yq/SuEdNV7blINr4NJa76gvF3/bALdMekW+3Lz/
Ktw86T296afMce/Aq2rln11wslbx+xlcVuu96d/+x2/gH2uljz/Bt9VKf/6A
r6iVPVo+iH1rvQdTAd0Onlyr/D4D7l4r/3aHO9RKv3rCn9Z456Uc1A++vdZL
hVvsane9P/xw7zECTtQqf8bAl2HP2+CutV4Ka+6EX6jxDqzxA+4++GCN9GUu
fHOt4n3Rg2l7pdLpxWXwKPyR634/Zm9xuDEK/1yj+lAGr67xUu7eXAsvrJGe
vAA/hT83w9/USN+2wU/WKN8+gP9e4+X7lxuxFz6zRvHdBM+uUTwchs/m98fg
9vz+xLniGfy+3dz07839O8N7+H13uAfrvwhuyfr7wf3Z/yC4oFr1ZwS8vlr2
uxHuUOMF/PDZeJtjY/8pcG218vs++Ptq+e8h+L1qLyWXyUVwYbX3nh8evZfD
f69WvcqFR1UrfmJwp2rpSxl8R7WXcmeXJPxCwgsF/f9egP9IKH5fgxMJ7xU/
vZ7eBlcnpAe74ROrvSY//R/fCx9JqB59C59S7fnW/HTuYTiWUP4dg+ckpEcn
PiR+NaH8bQe3r/a+m+cbqDM8L6H87w6/lPBuneRn2EXwNQn8Ba9PeK/58nv1
oIfS+zP2HgG/lvAuSf13I7woIf26Df40IXtNgVtUS//ug99OeH71uanNQ/DJ
1dKLRW4/ph4sg7tWq37nwn9jv1H4goT2W2bXW6V+qRa+MEF+wZMSXkreNmyG
d1UpPrbB/5vw3vHlv/gDd31Tn/fCPavk3yb4UJX+Hoa3VqnfOwZ3TKget5wn
PlqletMOblblpdqHt8+AV1QpH7rDX1QpnnvCFVXqT/rBRyoVj1fDGVXqL0fA
PSoVT2Pgs6q8v/vh9814uKFK9eBOOKvKS5l323R4TqXiYS68udIbljLoQrhF
lerZMjhSKfusghsr9TcKX1olf5bCwys937oXfVwDn19F/YI/q5TevgpvqfRS
6XLBO3B2pXfEd1d4l91fperNZ/C8tfLHN/DISsXPIWeflDmu/wOev1b3O+Fh
8aC1ut8pcLxS9akTPLVS/VQ3eMJa7e9CuGyt9ncp3KJSeurBy9eqvv8VTq6V
PW+AJ1V6qfblqXHwkkovFS4/3wG/uNYbmdrQvXC3Sun3HLhkrZcKp76PueuZ
+vkUPHmt4mUlfH+l+rN8uGel+uk17nOTT9WwV0l/CPeq1HzQ6L5/UUoA3oLH
VSofdsKH1sr+e+Dz10pvvoKbKmSPH+1+KrzhKcE9Ci+q8NqkBOj4+eKbKrzT
Uw3cyfPT/jD53hGeVSF9OheOVqjfvACeU6H5pw+8scJ7ICVYA+F9FVrfUPhZ
1ne9u7/Rs1vhBRXKt3/Ch8ulv3fDORXK71nwxRWy3wK7vnL1W0/CkXLF07Pw
WRXKzwhcWS79KoaHl8u/VfBn5cxf8P3l0p+X4SEV3uzUDd6EB1RoPtrh9mfq
0cfw6nL1+1/CfcrVPx2AW5VrP7/Cf5RpP8c9gv3KND+1hqeWa945DR5Q7qXa
tbyz4YHl6r8z4dPKpacXw73K5Z8r4H3l0u9r4UHl0sNRcPMy1ceb4Y1l6idu
h3PKlO9T4RVl2v8MeHiZ4u1h+LEy5cNieHqpd3C7b6Ac+LNS1e8g3KJM9TcO
e2XS9wq4sUz5Uwd/VCr/v+jWY/qjLXBFqerBu3C3Mu/uVEHcDSdKpa/74F0l
6oe+tfst8c5I3fBn+GiJ6mPGAvGl3L85/N9S6dOJcNtS2a8NPLyU/gT+ukT9
/+lwm1LVu87waaXKly5wq1LZvzvco1Tz3Pnw5FLtryf8Rqni5RJ3PaO3/eBf
S7y/+O3nTwPgwSXME/BG7DMEbiyV3g6Hs0rVH14H7yxVPo+Bm0oVn2Pt78nH
8XCLcundRHhDhfqdyXDrteqn/mXXS32aDveu1vdnwmuq9f0HYX8+MN+fD0+t
1fcfgx9Kaj1PwBPrtP6l8D11Wn8OvKlO+10JX1In+4TgoXWyTz68KCl7FsI/
18r+JfC+GuVPBfxhjfxVbe9frXlhHXxjQvq+3sYf9fcleGu54qcR/qJM9WUL
PLpU8fYWvLhE+rIdnl6ieX+njZc1iucP4WYl6nf3wIPWqB7ug7PXSO+/grus
Vr/wHbx7tfqpg3BgtfTvZxv/q1WPjsILVksPMh4VN1/tpbZ7z/Hw16s1b7SC
9xervrWBb13tpeRw0qnwhmLpf0d4ebHm387wumLp9znwG8Wa57vDHYvl//Ph
g8Xy50Xw1mLl3yVwpFj+6Qcni6VPV7rvP5QS4KvhOcWq50Pgtqs1r494NG0v
089fBy8olv3GwLuLdT5wi11fkebL8Y4np/6bCA8s1jx2J3x/sfT6X279pt5P
hzOLlQ8z4QnFitcH4YYi1d/59vMi6d1jcLtixdMT7vumvi6FdxZpfznwzGKd
162Exxapfobseovk73w4v0j9X6H1d5H60RJrryLlewWcVST/VcOji9Tv1Dk2
/ft6eH6h9P8leEWRznNfsfYp0nq3wAnW+xY8kfW+a+OpSPPaTnhzof5+CDcV
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
c+L/E/gj7LXX7dfY60u4W1D9UhN8KCj9PGDjP6h+7xC8g/OVX9z9TX383a43
qH6n2bL0/c16WyxL+8/0v63gLvj3ZNgjvk+Fpwc1b52+LH19Y9/OcJ+g+ocu
y9LrMf1bN3gf+f0X2K/3pr++EO5FPvSG+1FfL4X3BHT+czmcE1Q/dBXs12Pz
POAaOCuk+jkUHoA/RsIrAtrfaHgr+xvj9mv04xbY7zfM/DXe2i8g/brd2dPk
22TY1wtzvj8V9vs547973O9NvM2A/Xpi+v/Zbv3mvG8ePIH8WAD78aV/Pwn7
+myeBz4JJ/D3MtivJ6Y/eQbOQM9WwW3px0Ju/aa+59v7h9TvFsJ+fTfz+hrY
75dM/pVb+4V0Ppew9qM+Jt3nep/O+dv0jy/Y+KI+v+z8bez9qrue0Zc34Cj9
0NvwFOaH7fBo+sn3YT//dX5r4y+k+v8J7Pcb5jxhH+zPl0Y/91t70781wcOo
7z+49Zj5+SfnT9P//GLjOcS/Z3PfN/5vtlz8UUj50AL289/MryfBw5jfTl6e
9qf50x72+3lTzzrCfj6a86TOy9P7MfF1jr0f/U735en9me//BZ5CPPaEx/D9
i+FMvn8pPIHvXwH3YT1XwXP4/jVwJMC+4NbM6yPd+o19RsOL0Isx8EzseYv9
Pv3QeHs/+sXbYb++Gn9NdusxejTV/d70B/fAO4KKhxnwRuJnNuzHl6knD8EJ
4m0BvIJ+apH1Z0j9YTbs96OmX1gG9wtLT5+BvbDm05XWnmHOj+DGkN7fyYe7
RfTvteJwx4jycY2LH1OPyuEjzKNV9vvMt0m4PfW2wdnL6OsGez305GU4Cz1+
Ffb7SzN/vu7izfRzb8Nb6N+3w2OpZzvhXcTHhzY+gvL3J3DzgPy3F/brucnn
L2G/HzP+aIL9emf6wQMu/sz7C4dcfBn7/mLzISD9+t36KyC9+5+nxdMCmqdb
wH5/YOzVCp4QUH/QBu4c0HnaqbDfn5r56nT4UK70/Qx4V67yqQu8gP13g7ex
/0y3HhOPWe5zU5962+sHFF997Xpzpcf94bG5el4wEB6Xq3o5yK3HzGtD4JbM
LyPs99nPdc4eZj83wI3sZyw8LFf9zDi3f9MvT3g67V+j55PgLavUL90F78+V
f+6Gs3P1vsF97nqm/s9yn5v5YS7cL1fxOR9OrFK/t9D6K1d69ATclMu/z4Xn
5er872m7v1XK5xVw0SrlZ8DZz6wvAidz1X/F4A25mteK4QO56odL4SOr9D5T
5f+zXw0cyJU+rYO9gM5D1sMNuerfXnL2MfX8Fbt//PuaYxOvW+E5q5Sv22x8
56oe7YB3rJR+7nL7NfH3MbwiV/3Up9afucqnz50/jT2+hrsFpCff2XgmPw66
75t6cBg+ukr95m/wlFz1/8esfQLy1//ksJ5VOo9sDvfJ1fOYFvCkXN63hRtW
6flKK7h9QPWmNZwVMPXi9TY56f2n4u27tjlpe6b059RTYV8fzP06wFOYr0/P
Sa839WfBn2E/flN6U3SGXT/+OhP2++WUeZvOhscEzP5PORf288/oWzd4ZsDU
i1t6wL4+mHjIzEnb3/zvUs6Hx6FnWXBFwDxP2t8T7hiQvveGfX1NPZ/rdQm8
NaB86puT9meqn5p9GTwnYJ5Hhvq79Zl59Ap4aUD18EoYfT7ec+sx5z2DYH++
Nue5g+HRQeX/ELeflP+fHQZvkX3qhsPT1O/sGgmP1Pzw6yi4F/PT9XBzzmdu
gK2+3wj784XRg5vt/jjvuMVeP2jW++Y/bHxovd+Nd783/pwAH9A80GcifETz
zM2TrL2Ceh9yso1n5vEp1t9B00+/MBXO0HnAnmlwMii9vtetx9S7+6y/1Q8M
mWH9G9TzxQfgJs2jS2Y7Nv3fg9b+IZ1HPWTjO2ieHx942N4vrPxcAPv9stnv
YzY/6C8X2fwN6XntYhv/er4RyLbxxnn4EuufkMm3j5ba9eh55NHlNn54/+MZ
m29h6dlz8GD1Z7evtPfX+xqP5Vr75GkeCMKLeL8mbO3P+215dn95Jj5OiMJH
9X7DeXG4s95vGlZk9Sbf9JN3rbZ6ky97l1j7FJh6Xl4G5xQovirg1VHpRSVc
EjXz15+qrf317wV61sKVvE9fB3eJK5/q7XoL1V88b/NT/96u6t9wq2JTr955
Ae65Wv3KS/CCEs33m6w99e/1ezVa+/H/Z9gM767Q+wZb4PMrze9z3oDXJfR+
wFa4Q43u/zZ8R63uvw3+OmnWf/J/4C/X6Tz6PfiC572D3qnXLbM86Xnv/wCF
H9li
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=30\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4444444444444444, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.6666666666666666`", ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779821409130783*^9, 3.779821633019852*^9, 
  3.7798237262889066`*^9, 3.779823998275464*^9, 3.7798240564821625`*^9, 
  3.7798246442269435`*^9, 3.7798258201591444`*^9, 3.779826790227907*^9, 
  3.77982702718763*^9, 3.779897233370927*^9, 3.779897888207838*^9, 
  3.779898263255912*^9, 3.779898468440511*^9, 3.779898771214907*^9, 
  3.7799004591049924`*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"cc36a5c9-eb7a-49ef-868d-3725f7c3a51b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a40", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0040.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa40", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a40", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], " ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Pink", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=40\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176303180428`*^9}, {
   3.7798214142942452`*^9, 3.7798214463114223`*^9}, {3.7798216410105553`*^9, 
   3.7798216415194416`*^9}, {3.779823732589138*^9, 3.779823744035627*^9}, 
   3.7798240014247713`*^9, {3.7798240595345182`*^9, 3.779824059733988*^9}, {
   3.779824648432085*^9, 3.779824649786316*^9}, {3.7798267937968698`*^9, 
   3.779826793990625*^9}, {3.7798270311724005`*^9, 3.7798270353594966`*^9}, {
   3.779827309868906*^9, 3.779827310069663*^9}, 3.7798978844466596`*^9, 
   3.7798982584057045`*^9, {3.7798984803154325`*^9, 3.779898484995204*^9}, 
   3.7798987757358046`*^9, {3.779900464380049*^9, 3.779900466308372*^9}, {
   3.781218598914945*^9, 
   3.781218599401652*^9}},ExpressionUUID->"a7ba70c8-992c-4ca8-bf54-\
e9c1fd855e30"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]], 
        LineBox[{{329.6930424403183, 6500.}, {329.915, 6361.}, {
         330.28200877192984`, 6500.}}], 
        LineBox[{{330.8808707482993, 6500.}, {331.118, 6442.}, {331.72, 
         6401.}, {332.321, 6286.}, {332.923, 6422.}, {333.524, 6384.}, {
         334.0611692307692, 6500.}}], 
        LineBox[CompressedData["
1:eJxdnH2clWP+x2eTjMxmJLTVJipmSYqyIbkl1VabbGPFxlY7m7RJhFLJqClT
Jo3UnMc5c848NI9N8zxpQ0iGkqRNCFEYJCFJwu8+1+d9nfv1+vXPvN6vc859
X9f34fP9fq/7nC6Yct/f/t0mKSmp96lJSfG/zutF1+355EEnKf4v41mn4+LN
r8e+gndscKY9/fWC63+Aez7rzO9UPeLjX+EpG5y3Lnz/p4XJD4mPNjsX90+u
6tYRHrzBefT6gXdt7Ap/0+y8/dcpqRN6wzkbnD9NXPnSD33hMRucx6ZvevCZ
QfD3zc7/5n5xUf+h8Mpm59Inzn13x2h4ZLPzSo+aB6bdCm9udrpe/kGvdv+E
g83O/de1f6doGlzW7Lg067oH4DnNzqRPd174/nw4r9k5sdBdwBL4gWbnmc5t
/95hJTyv2XFXk1zlhyuanbi5biqET2t2/nhHxrUfVcKPNjtN3/+ye24j3L/Z
SWnj7uAF+IJmZ21oS4+aFvj+Zidurr/sgu9o0vXeh99o0vU+hds3OeNW+GZ2
/Aae0aT1HYejTVpfm4fFVzdpv2fA9zRpv+fALzc6cfO0Px++vkn2S4MvbHLG
uu67+gr4oibn85/Lv911LXxOk/xxE7yr0Sm8yV3xWPifjc61H928wjcBfrXR
+YNr3sumwNsanWNpbkD8B/6qUfHyEJzc6LhXf/rrhXB9oxPf/uJseFSjEw+f
zqtgf6Pz5Ax3hSHvdRPPJfDwRmd43KDVdj+NTk83nKdvgLMbnWHxC7wI72xw
LogvYBt8qMEZGjfo/+AbG53zl3x1y4YP4W8b5M9WeGij7P8t3L3RiZt31s9w
c4PjvjulzalzeH+D8qED/HiDE+3iBnhn+M0G50XXvU0XwJ83OB/PcxP0Urhr
gxMPt3cHwG0btL8h8IoG7W8EPLnBKds6+s/LboGvqXdee/j5gi7/gDs2KL4y
PDbxMBMe1uDcFxeQOXBJvfz3OHxWg3PUDd8vlsP9G5wJVze0PLwafrveibuv
bQTeUO+42fz4mlK4uF72roXH1St/NsLtG5TfW+Cseq3nDbiG9bwDp9c7f152
w6RP98Md6p2we7kHvoRP1sk+38P31Ms+v8D76pTPp81lP/XKl1T4ynrFdxd4
e530sCfcqd7p7W7vxsvg2+udN7a7/66C/XVOXE7vcOB365x3d/w4/sBf4Pl1
jvvpJ2eMh5vrnHh4/TQR/qBO+TEVHl/nxMMxZRYcrpV9H4Fvq3Pi4dt9Mdy9
zrmsLv+b0hy4sVb7yYNfq1X8FcBDa5Vf5fC/6pzUuIPr4OdqnZOuXPx1E3y0
1il25eadV+BltY5bDdImvgmfqJV/9sLn1yl+P/E+v829/fdfwb3rpI8/wJFa
6c+v8N5a2SP5EXHfOueReEB3hBfXKb+7wsdr5d/e8Nu10q++cG6t6t2gRxL7
M/XzBnhmrfOrG+4XjYYn1yp/0uHf1cmed8Gn1zlxrLsbPlzrHCl1A+5+OFgr
fZkHr69VvGfB7eqceDo9v+KRhH2MP3zwPbVO+oGS0JYoPLVW9aEC3lHjxN29
tR6+rlZ68hzctVb+3AqX10jfdsLX1irf3oVra5yIe7nRB2BfjeL7EPxCjeLh
GLy/Rp//Df6Mz58+T7yZz3eE02p1/27wcT7fG+7J+i+Hh7D+QfC3Ndr/UHhn
jerPaLiuRva7FV5d4/jd8Nl8F/zHGtl/GrxqvfL7fss18t98uKTGictlQxZ8
do36m6fgM2pUr3x2P+sVPzF4U7X0pcK+Xu3E3dmjAR633gkG3H/PwdvXK35f
hY+sd15202vlTjhjvfTgPbjzeueQm/5LDsDdalSPvob3VDvx9m/eMXjAeuXf
b3D6eunR6fMT1zP52xE+rcY5vMA1UDd46Xrlf2/YX+3E252bL4fzqvHX/MT+
X3Xl94ah8Kxq2Xs0fFe1c2X8361wxTrp113w6+tkr2nw2Grp3/3w1Gr1e/Ph
K6qlF1nwmGrVgxXwjGrVbx/csk77jcJzq7XfCnhttfqlem/9yi/4wWonLm+b
tsJH1ik+dnrrfdOV/5J34e1Vqs8H4KYq+fcQfHid/h6Dd1Wp3/sNnrhO9Th5
Af6sVr3pCC9cp367KzxqnfKhN3zVOsVzX3jQOvUng+BL1ikeb4AfrFJ/ORpe
tE7xlA5XVzl/c8PvqzvhtHWqB3fDwSonbt6ds+DDlYqHeXBKlTMybtDF8NFK
1bMV8DDskwfXVOlvFC6ulD/L4Z2Vjmvdyz+og3dXUb/gDyult6/A+yudeLpc
+iZ8R5Vz3HVXaK+9X6XqzSfWvvjjK7ihUvFzFD5R6cTNccuvcD/ud9qj4r0V
ut9ZlqtUn7rAyyvVT/WC21Vpf5fB17C/qx5N2MvoqQN3qVJ9/wu8qEr2HA/v
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
HuBTPvVYmVif2X8v+OQa7T8NbslTPPaBN+epPvVfmbCHia+BcC/mi6thV0/M
84Ih3vpMvRwKu/2TmdeGr0zYw/Rno731mf3c/P/2Mx4O52k/E+CaPPUzE737
mX55EnwkT3qeAffwqV+6Bz6Kf+6F3X7efN/gfrh1jer/w/DuNZof5tnX8xSf
C73rmX5vMXwoT3r0BLwBez8JZ/l0/rfSs7/J59Uem/z0ww/maX1ha7889V8x
u/88zWsl9vNr1A+Xw/18+j5TNdwZ+9V59zP61OTZ15yHbITdfDL92ws2vvJU
z1+2+8mTf1+FG9YoXrdb++UpX3fCmXmqR7u9/Rn93Aun+BR/H8A789RPfQxn
5ymfPoX3Yo8vrb3zpCeHbfwRT9/ZeMhTPTgGu/lq+s2fbTyvUf//m+dv46/f
5Sbsb84j2+Ym7meex7SD3fjT923h7Xl6vtIeTslTvUmB3fncyF0HeJrPxNvh
1NyE/eP6c/bZsN+n+50DN3C/8+AZ0r/MP8An84zeFHeFB+OvP8KdfSZ+Dp0P
7/aZ/Z91IZyEvvXKTfgrnr63XwS7emDiIQ0emWfyJ3qJvR961gfO8JnnSa19
cxP+NfreH97iM8/n+l0Ju/lp8mmgXV+e6afm/Nlbf/x5ZPBq2J1XzTx6LTzR
p3p4nV2/zl9OdWC3/zbnPUNhNz/Nee4wj03+D7f+9hn/rxoJu/NJ3D6No+Ax
6nf2joGTNf+fGAun+/h9ufUP5zPjrT390sNbbbz5pQe3wfuZN2+39tZ6t/0D
nqDzjsN3wqt1nnjWJLiH5qMBU2B3nojPM7dlwH38+j7kVO9+Rh+mwdma15+b
7nH8PGD/DDiNfu4+OJPz4/vhWeoHhs+29vDr+eJD1v86f18+x8Y/zzcfgVs5
j5pv7avnx0cetf4NKD8zvfub/S6CiwPqL7Ngd74xz2uXwgvUn/izvfvp90bw
JD2v2ZcDhzXfnHzK5ifz8dM2XoLSs2esf9SfTV4Ddwsaey3y2XjgeVrA+pfn
gSF7/5Dmm3z4eMjEx2lR+Ki+33Bxoff+eL6PLLb5Fjb95D1rbfzmy95lNh8i
pp5XVlg90/drt1XZ/ItIL6rt+vR93t/XwqP0e4G+9Tbf+T59I9yB36s1w8v5
vd2z8CD9nnL9f609i0y9evM5+MNi9SsvwDUlmu9fgq/Q7/X7bYHnlanebYW3
luv7Bi1WP6rM53Nft/Zbp+8HbIdbanT/HXBJre6/E55Tb9Z/5ts2Xhp0Hv0/
OL/JxOvYd+BVG4z+995r7fOs839CD1I8
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=40\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "1", ",", "0.6666666666666666`", ",", 
                    "0.6666666666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    Editable -> False, Selectable -> False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.779821430762019*^9, 3.7798214472045746`*^9}, 
   3.779821642646942*^9, 3.779823745077075*^9, 3.7798240026425257`*^9, 
   3.779824060303461*^9, 3.7798246505076046`*^9, 3.779825824487708*^9, 
   3.779826794453268*^9, 3.7798270360374255`*^9, 3.779897236130172*^9, 
   3.779897885076603*^9, 3.7798982589808426`*^9, 3.779898491858474*^9, 
   3.7798987765499563`*^9, 3.7799004672205114`*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"6e796413-c95f-4e0d-8b2c-63d8e468bc9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a50", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0050.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa50", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a50", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Gray", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=50\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176013977485`*^9}, {
   3.7798195753983593`*^9, 3.779819591628085*^9}, {3.7798197171831903`*^9, 
   3.779819732888528*^9}, {3.7798214565344133`*^9, 3.77982149459835*^9}, {
   3.7798216495545483`*^9, 3.7798216500402803`*^9}, {3.7798237516478233`*^9, 
   3.7798237574524508`*^9}, {3.779824006199474*^9, 3.7798240117245007`*^9}, {
   3.77982406323207*^9, 3.7798240634125643`*^9}, {3.779824655366621*^9, 
   3.779824657566785*^9}, {3.7798267978193827`*^9, 3.779826797965124*^9}, {
   3.779827039909321*^9, 3.7798270429390593`*^9}, {3.779827313458716*^9, 
   3.779827313672372*^9}, 3.779897880996891*^9, 3.77989825461607*^9, 
   3.779898498197259*^9, 3.779898780792547*^9, {3.7799004721253495`*^9, 
   3.77990047350887*^9}, {3.7812186028103685`*^9, 
   3.7812186032838745`*^9}},ExpressionUUID->"164f70cc-1b34-4eee-a29c-\
cebc4d4489da"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
xNPgrFLpf0e4Q6nm387wqFLp97nweaWa57vDm0vk/4vg1aXy56Vwz1Ll3xVw
u1L5py/cp1T6dA3cpVTn2wPg/SWq54PhaInm9eHw06Xq52+C07FfNlxdovOB
O+BepZovx3nrn5T8b4K1Z4nmsfvs/Uuk13+HS0tU76fD+0qUDzPhAyWK18fg
YInq7zz4cIn0bj7cvkTxtBDOKVF9zfPY7C8fPq5E53U+eGaJ6mcYvrxE/o7C
75ao/1sGtylVPxqH+5co32utf0vkvwZr/5j6nRXwlBL176vh3SXS/9fhtBKd
574Fl8W03vXw1zGt9z14JOv9EO5UonntI2//5t9P4RNLpB874YqY9H4v3AP7
7oPfjyl+vrXxXeIk5T3zANw3pnw6BM+Nqf/5BZ4cUzykzRf/O6bzo7ZwtxLp
3Qnw5pj06I/w2pjs1QEeGJN/z4QPxJT/Z8PzY5oPusJ1MfUH3eHsmOLxz3B+
THreA86JKd8u9z5v9O0vcL+Y/NUPXsXzHbh9THpy/fyUfc08PgzOiGm+Gwnf
FtP+R8MTY6rPt8PRGPMJnBuT/e+B22D/e+16ipWPU+AxMfUbD3rrN3ozA+4S
U37Nhp2Y3tfMhfcW6/3Yk3BtsfTgabueYvWDS7z9GL17zn4+pn7gRfi8mPrd
INyCP4vgsTHNVyXw9GLFUwXch/3UwK3F2k893I39NMPjo+qnVnn7N/3pq/C0
mPT+TXhrsfR7nXc/U783whn45wP4ZPJjK5xTrPP9T+DMYs27n8Fuvph+ejfc
tVj2+Q/8LPH2DbytWHq9H07D3wetfaN6H/oznF2s+vIrPCGmfrXNAnGHmOrt
8fD6Ys0nJ8H7onr/1R5eE5XenQ63RqXPZ8FlUfWjXeD2xcqH8+ChMfXjF8L5
xfJf1oLU/pPmKe4JJ6LqH3rb9UWl31fCecW6X3+4M/e7Dl5UrPUNgQuKtb4R
cA/ydZS9HlV83QrvL9J54Z3wtqjOP+721mfs9ze4bbHi9T54VLH6g6lwvFj9
4XRvv+a87hF4b1T+nQNnFet8ex68NqrzowVw36j6u4VwerH0IQ/OiCr+nvfu
b/LTZ+0Tld6FPf+afi4KT4wq35dZ+xcpP+LWn1HpV629X5HqRwM8Nar+bYW3
fqPHq+HpUfnrdTgNf70FD8K+661/Ior3TTZ+oqrHH8LNRcqff9n1YY/tsJv/
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
Pda+9PNfevcz/mi1+eJTP7jfxrdPv184aO3rl31/tvYLSL9+hXN80rs/PCd2
65OZp4/z2NjrRDjuU39wMuzmszlPOw3OYL46E56Ovp8NjyKfunps9t/N3s+n
/Wfa7xOPWXBfn+rTZXA69bo3PN4nPb4SHurT+4L+8Aif6uVAeLJP89rg51L+
MP3ZcPigT/u5CY5Qv0fD2exnjGcv08+MhR2f+uXx3vqMnk+EtxWoX7of7uyT
fx7w1mt+b/AQ3M6n+j/Le76ZH+bAqwoUn/PguQXq9xbA/XzSo4X/Y+9n4M0F
Ov97Dnbjw+RzAezGm8nPIJzF+iLwRJ/6rxJ4kU/zWrlnb9MPV8FrCvR7pjq7
nwLZrxHe6pM+rfTixZyHrIZ7+dS/vQ6396mev+Wx8e878NoCxesmGz8FytfN
cKJA9WirXY9f+rkNri1Q/H3m5YPppz639yefvoAHYY+v4dYC6cl33vpNPB2w
/qV/PGTX41O/+YtnP9P//w63+OSvP+SzH5/OI9vmp9Zj3sccB+f6+L0tnOHT
+5UTYTd+Tb1pB8d8pl5sOBkOKt6+aw931jx62mlwM887HXbnAfO8M2HmtZyz
8lP+TepN2dn5KXsaf/0J7qd5v/Wc/JS9kvs/9Ty7fvStm7f+ZPrecQGcSTxk
wjuUP7GLvPUaPcvyOPk+aV8POIK+Xwa7ep98P9fzCm+9Jp96w6t8pp969C+w
mx/J95HhK+FWn+bRq+HxftXDazx7JvP/WAd29c+c9wyEsznPHWT3x/nBYNjN
36T/XxgKu/qXtM+KYdbeftPvbBvh2Tf5+CMj4VHMTzfDbr9hzmdGw2vQw1th
xy89uN1br8mfO+CjWu/Gu/7/er8bB0/2y5/jYeaBXhPsfjTP3D4R3ubT7yEn
wYuYxyfDvB94dYqNB50H7JrqXTd6/SCc4Pz4Ic8eyX5g8Ax4EO8XH7H21/n7
kkfhNPq/x+CxvK94HHb7hWT7vP8fsH1fkOM93+x3vs0X+stc2J03zPvap21+
qz8JLoIP048ssc8PmnzbkWefp/eRR5/11mv8+7y1B793edH6J2Ti8R6ftW/Q
2Gt+AM7hfVrI6gm/rym0+RDSfFNk1xc08XF8zD4vbPrfC0vh9fp909Aymz8h
00/eX2HzoVD2jsPtCk09r6m2640ovmpt/ur3mq11Nt71e94/Nlj/6u8FejTZ
fC5W/7wCHsHfq70En8Hf270MD9bfU9a/AreUmnr1was2X0rVr7wO1y3TfP8m
fGK59KMFDvP/Z1gHr+b/57He+rvKfD//XZsvNfp9wCb4luV6/vvw5fV6/ma7
v4RZ/yn/tHrTqPPof8HLm0y8jvwYnrBC+//E5u9Kx2le9vAv2208vez8H8KN
mLc=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=50\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6666666666666666`", ",", "0.6666666666666666`", ",", 
                    "0.6666666666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7798214984810677`*^9, 3.779821651053542*^9, 3.779823758119897*^9, {
   3.779824007607752*^9, 3.7798240124360833`*^9}, 3.779824063984022*^9, 
   3.7798246582036605`*^9, 3.7798258271970615`*^9, 3.7798267985119743`*^9, 
   3.7798270437523565`*^9, 3.7798972386454277`*^9, 3.779897881726343*^9, 
   3.7798982551690392`*^9, 3.779898499840356*^9, 3.7798987815355616`*^9, 
   3.779900474599489*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"e37ea744-05e8-45a4-a7cc-c971b92cb75c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a60", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0060.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa60", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a60", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Cyan", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=60\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176013977485`*^9}, {
   3.7798195753983593`*^9, 3.779819591628085*^9}, {3.7798197171831903`*^9, 
   3.779819732888528*^9}, {3.7798214565344133`*^9, 3.77982149459835*^9}, {
   3.779821660788554*^9, 3.7798216659593096`*^9}, {3.779823777682805*^9, 
   3.779823781409359*^9}, {3.7798240191251373`*^9, 3.779824022244846*^9}, {
   3.779824067773451*^9, 3.7798240682382092`*^9}, {3.7798244717897325`*^9, 
   3.7798244724388657`*^9}, {3.7798246624997916`*^9, 
   3.7798246638476696`*^9}, {3.7798268025493636`*^9, 3.77982680271173*^9}, {
   3.779827046938778*^9, 3.7798270502493315`*^9}, {3.779827316747734*^9, 
   3.7798273169639263`*^9}, 3.779897878366557*^9, 3.779898250825634*^9, 
   3.7798985059412746`*^9, 3.779898786314711*^9, {3.7799004780292215`*^9, 
   3.7799004796524878`*^9}, {3.7812186066340523`*^9, 
   3.7812186071365404`*^9}},ExpressionUUID->"f0d9d08d-3844-4ab1-a248-\
f9e45d0a941c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 1], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnHtYlVX2xxkzI3PMzMrUKSospsywtLDMXs3U1DFKKjJ0yCFzHDNKUzI1
UlRUVPLcL9wO58DhIh6IjMyKjMrSihzH8PbTkoqMGiszM8vfPuv73Wc/z/iP
z+c573nfvdflu9ba79GrZjz1wONd4uLihp8bFxf9e2fZPVt+Gjffiov+mdBg
HUrs9qLjfnK4wTpe+d7E2x4lv99gdblh1aX7sshlDVafunGfL5pLzm+wrhsS
Xzsgh3x5gzW8cceCN18k39ZgTbpt9ajMteTP6q3pW+/t0cVBfrjBevrO7p+V
F5MP1VvLmz8suydM/q7e2vfxL1OO1pPjG6zO+5uuWPE6+UC9NTrzy9ar3yXX
1ltpR0O+lo/Ju+ut6h92/21GG/nlemvbfFvfrl+Qf6m3ekcf+C15db0166Xv
Ft/1Mzml3no+uuE/yHfVW59efeDXpfHPgjdEsP/e5FMRa8ldw6Zv7U/uWm/9
+28zeqUPJL8esf6asWH7z4PJf6q3XpitVpRCvipi/Sfnm2uHjCZ/FrGi5v94
IvmdiPVuQuSZWQ+az/vfpDz4d/J9EdhzFnl0xFKUfecz5EciVtRcB54nByPW
6aVqASvIPSKWss5DPTeQGyOWWk18rZv8fgT+CZDnRay/TM2643AN+cGIteWn
3/fkvELuHrF6RAPoLfKEiFXha0mI7CAf2WxFzXXvbvI+3u8AeSjv9yX5mc1W
6jrX3N7/Jfs3Y32nyH24vi4LwIO53wvI4c3Y7yXkyZutqHm6X0k+n/ZLIp+u
syYr9w2/mWxttr7+reqH3XeQ4zfDH/eQkzZbAZVev08mt9ZZdxy+b50rnXyq
zrpcmffGGWR7nXUySQXEv8jb6xAvz5LT6ix195e+W0p21lnR7S/PJ3dssqLh
03cjedBma+0ctUIfuXkT4jlEbt9kjY0atI48q866RoXz7CaznjHRG7xNDtZZ
V0UXsJN8bBPy7T/kE5usK1d8e3/T/5Ez6+DPDvKcTbD/D9ofdVbUvNm/6edt
gh6cuxDcrQ750JM8eJNV2k8FeF9yY631tnLvlqsMf75IJegN5J6boFdDzeey
v5HkRZuwv3HkjbVWWMnd6vvJD2yyPljwZkm/R8l5tYivLHJmLeJhLnlArfVU
VEAWmuvFfy+SZ9VYJ1T4frOGvL3GSo8KpJ3cUQM9Kjb3Ez2uJCfVwt712h61
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
8uTvsz7X9njN+n8D9KDH
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 1], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 1], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[1, 3], 1, 1], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=60\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 1], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 1], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", "1", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 1, 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798237843799443`*^9, 3.779824023194111*^9, 
  3.7798240687257986`*^9, 3.7798244734955273`*^9, 3.779824664484865*^9, 
  3.7798258305558443`*^9, 3.7798268032508*^9, 3.779827050822751*^9, 
  3.7798972414306374`*^9, 3.7798978790466223`*^9, 3.779898251445549*^9, 
  3.7798985074996576`*^9, 3.7798987871799192`*^9, 3.779900480550585*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"5895b784-f82a-4c4a-bb16-1f7aefe06411"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a70", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0070.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa70", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a70", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", " ", 
          RowBox[{"Lighter", "[", "Purple", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=70\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176013977485`*^9}, {
   3.7798195753983593`*^9, 3.779819591628085*^9}, {3.7798197171831903`*^9, 
   3.779819732888528*^9}, {3.7798214565344133`*^9, 3.77982149459835*^9}, {
   3.779821660788554*^9, 3.7798216725348215`*^9}, {3.7798238026277046`*^9, 
   3.7798238050169816`*^9}, {3.779824029726488*^9, 3.779824031908285*^9}, {
   3.77982407190156*^9, 3.779824072068536*^9}, {3.7798244767493773`*^9, 
   3.779824477268832*^9}, {3.7798246688998785`*^9, 3.779824669894703*^9}, {
   3.7798268064177465`*^9, 3.7798268066125693`*^9}, {3.779827053978052*^9, 
   3.7798270569409885`*^9}, {3.779827320210264*^9, 3.7798273203354864`*^9}, 
   3.7798978755166597`*^9, 3.7798982453864045`*^9, 3.7798985138053894`*^9, 
   3.7798987915600677`*^9, {3.7799004847242136`*^9, 3.7799004860128117`*^9}, {
   3.781218611633939*^9, 
   3.7812186121845026`*^9}},ExpressionUUID->"4b0bad2e-64d9-4424-a1b5-\
42934d9c8d2d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
           Rational[1, 3], 0.6666666666666666], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxFnH1clFX6xlmjomKNzIo11si02CLTQpfK7MlMTV3TlYpKW3JZc10ySlJS
MlJ8R8N5HwZhZpiBAWYNDYtcKysyW63IZY3SflpSWZFLRmZm+jtzX9eZ4z98
vp+ZeZ5z7pfrvu/zzHjlrMf//Lc+CQkJo85OSIj93R2466UfxhdZCbF/9/3T
+nTwOc85p5G3b7J66ndO+uND5PX/tPpct/LSj/PJJ/9p9d80/rNF88hp/7Su
GZ4UTSs217u5ZdeC154j94tak/+4+o68teSeqPXwtruT+zjJu6LWE7ed/1Ft
tb5f1Fq249+BuyLktqj18fs/TT+8mVwStbqntQ5c/i/y0SZrTN4X7YPeJo+J
WjmHw76298nZUavx+71/mtVJvjFqbS+ypyZ+Tv5z1OoXu+G35ANN1pwN35Xc
/iM5GrUWxzZ82uz3w0H7f16S9BQ4own770cuarKeuX3Ew9suJy9ptP7zp1kp
uUPIvY3WH2Y8/+aPQ8mnm6xn56oVZZNLG63/Fn999fAx5KWNVsz8708itzZa
b6c3PznnXnJyk3X5DcqDfyEnNsGec8iDmixFhbc9ST7eaMXMtX8xubPROrlE
LWC5ub+yzn19nyfvabDUapKiHvKoJvgnSK5rtH7/YP6tB5vIs5qsl374taN4
q7leciyAXievabTqfG3pzbvI/kYrZq6795JTeL395BUNuN4X5v1T17nn9fsf
uZHrO0E+1oD19VkA7mnAfi8gFzVgv5eQExqtmHnOv4Lc1gD7ZZBfarCmKPfd
fKPhr35p+H7vreSCBvjjLvLkBiuo0uvXKeRFDdatB+9Z584ln45Yv1PmvX4W
ORqxjmeogPgHuS6CeHmKPDBiqatv+G4J2RWxYttftorcFbFi4ZNqI2+PWGsL
1Ap95LQGxHOYfG2DNS5m0E3kWRHrKhXOc1vJ/SPW2NgF3iBPjVhXxhawW9sz
gnz7L3lPvXXF8m+ntf4feUYE/jxCTo/A/t+TmyNWzLyFv5AHRKAHZy8Ed9cj
H/qSN9Vb/gEqwFPJYyLWG8q9L11JfrPe+myRStDryIfqoVdZ5D7c32jyuHrs
bzzZVW9FlNytnkY+WWe9u+C1mgEPke+rR3zlk0vrEQ/zyIX11uMxAVlIzqmD
/54j/7ne6lXh+/Uackq9lRsTSAc5qR56VE0eVA89riffWA97byYX1CN/tpHX
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
L8bDs2Qd38vM66Kfq4x/JZ/Lzf3FfhvM9aWeOsmFrGeV5GTqVzV5sBP1pJas
6qf0m/XkdupPE1nlq5wnNZv9ynpayL3U41dMfEj9flXHI+3zpo5HB+yzk3yA
+bKbnMf69AFZ6a/E13/M/sRfncb/kt8HzPqk3/jM2FPq/RcmfqQef2NY4ueo
iQeZj34g51J/fyKr+ifzwi9m//L9n4Q14HzqSeKa+H6l/z1vTdx/oo+/JR9i
/e5H3mXHvHYpWdUD0fsBZNX/yLx/hbm+1L+ryEXUrwyzHvF/5pr4eiUeh5ML
aO8R5BQHzu9vJic5MC+NJuc4cL4zhpzG/ms8WdUz+T7RpDVxf0q8TSUn8H45
5vOSj7nkdN5vJjmb/e4j5Mnc32xzfZlX5pJVvMv8+rhZj9hzPrndDn1dSLZY
H0vIDjvyqdRcX+J3ubG36P1q4y/Rm/X6dTvixaY/b8d5sMvsT/TaRy6x43yv
Rr9uh76FyFMd6B8i2l/sx6LkI3bkw2byDjvq+1ZjX5mftpn9i71eI4fsiL+3
yKq/keeP75j1SLzvNveTfG/X9rWj3+4w95f8+ljbk+v/lDyY8/Jn5E476tuX
Zr3i7290PNuhZ/8z/pH59QedD3b0UyfIFXact58iT7DjeU/C2vj+pD88mzzV
jvpyHjnFjvzoS17FfOxHtuzoNy4lt9Iel5Mj9OcV5Kgd9XXw2rj/Rf8zzOsS
/5nk7Xb0v8PJKr5ET0eQO+yYx28h++3op0YbFvuOIQ9jPo0n97LeTjL7k/lm
qr4/9TCHXGhHPchdG7e/xNtMcpUN+vMIWc0vki+zzf3w/Umyig95vjOPnMPr
zSereMLv28hzeL0SYy+5XqleD+tVGXkP42k1WcWXzKvryJM5z9nIY+04T3Hp
+GB+VZKV/kk/WUPOoz7Ukj30R8TsV+avKLmA/m0ml1Fvtpr7Sz/xCrk/4+U1
cpodevkmWeWPPA/dqePRgfOw3eRT7M8/MOuReO4w9pX87iQrPZD+7AA5y4Hz
ks8Mi158of3B+eUbcrEd/cpRvT876sMxY3+pfz8Zf0p8/WLuL/F6xuSX1LfE
crDKR5nfksrj/hD7/JbcY8f37y4in7BBry4hq3yU84kB5E4b6tNAcjH726vI
IfY715CLqKfXkdMZj8PIqt5I/GSZ9Ui/kk1W+i3nu7eRm6kPd5DL7aiP48hR
+mcieSz1awo53w49n07uz3p0PznRgfx6iDzYjvjNIztoz3yyyhc5f/i7Xr8N
eveYtrcd/d4TZj1yHrOAvIN6vIis6oP8fZas4k/0Zxk5l/dfqa/H849ycjf1
toKs+hOJT4exr/QbXnIWz0s2kocxfwPkDuppHXkG7d9o/Cn58QJ5Auv3i3q9
7C9fJqcynreb/Yn+7iAfsuO8uM3YR/LzXbMeib/3jH8kn/aSVf2TeX6fjk/q
zSfGPvi+gLGH2Ouw8afY6ysdf3b0S93kUZzvesz6pd/rNfEl9exnE49SH38l
57Df6bMO3GXDes8hF/L84Hyyykfx74XkwewvLiar+JJ56zJyK+2bRp7D/iF9
Xdzf0r8NXhf3l+T3H8gq36W/vp6cwXoznGwxHkaSD9hx/nOLvh/7odv1/Rx4
HnAnuYTnm+PJ7Tb4YzI5xPydSi7i/nIMi348QFb5L/PXTHIz+61HjD0l32aT
VT8g5/tzyQn03zyy0jeJt/nr4v6W/n8hucOG874S8iHao9TYC7+f1P6z43ng
anM/8fc6zZz3Nhj7iZ65yDnsxyrJqZxXqsk97Hdrzf1lXq839pD8ayIP4/lc
M7mF9bFF+4fx36rtwf7xVb1/1uc3zHrE3m/reOQ882+yn/XqfWNPib+9Zv/S
T35ELtbnt9p/nG8OkmfwPKGLXMHnMUd0fLA/7ibnsr5/T1Z6IvPzjyZ/pP/5
2awPv2cjt9nh/z7rwQ7Wh3PIKl9kfr2A3Ep9unB93B7ytz9Z5ZvUs1Syih85
T0ozr0t8XUlW+YX/j2R93D7y/j+Q2/n+oeQKvv9GcjrPq0bq6zF+byX3Z329
3axX3n8n2cN6NIE8mfP6ZGMPsc9Ucif1Ioes9FHs+YDZL37PQVb1S+rNI+QU
+mu2tgfn/bnkbJ5nzCPnMx7mk7sZPwvJg1lPFpMLGG+l5AT262XkDPaHq8z+
pV9Yp/drh55uIKv4lPnUSc7T50dkFT/y/Z1qstIf+b1WUN/PiXysN/uVetRk
/Cn90wvkLuZ7CznTgXrbSs6ivm4n51BP3iCr+Vr0+G2zHpk/3yWXsJ97X9ub
/c9esp739pnX5e9+Hf82+PugjifWk8MmfiWfvyKreU380U3eY0M/2ENW/bB8
f6GXnEw9+lnHD/XrV+0P6t1vngdbnKfPIUfZn5xPdtjQH/Q1r8t52sXkAhvm
q8vIp2zQ98vJ+cy/dHIi430wWc13sv8McoUN8ZhJbmV9Gv58fP8SXyPILTbo
8c1kNd/I84LR5IgN9XKMWa/Ma+PIWezPJun9cT/3kMu4n+nkVdSHXHKGDf3M
DHKpHf1yHrnIBj3PJ7fZ0C/9nezZAP88Rlb9jnzf4AlyD+v/AmNPmR8Wmf1I
fC4hq35B+r1l5GTq70pyHu29lhyy4fzvebLqpySfHYYlPz1mP7K+KnM96b8C
ZKWfMq+FydnshxvIU234PtMm4y+x3xa9Pxv06SXyLhvOQ7YZlv7tdbLfhnr+
Fjmd/n2HfMiGeN1D7rYhX9vN/aUedZBn2KCfneRhjL9PDUs/9Zm5nuTTFyae
xR7fmHwRPTlKbmY8HTP3k3pw3PhL+s1fzH6l/z9jri/++k0FeJQd55GJZKU/
8jzmHPKBDfy+LXmwDc9Xzier/JB6k1wRv5/IXV9yBuLtaIp5f0x/Lr6YnMv7
XUKu4Hx9mb4f9K/0d2QV/zG9CV1OLuH5ye/JqzDvd19BzsT8c9Eg8g4b9G0w
uQD14oGrzfolHjLI2zHP+K8lt1PPMskqPmLPk44MNesRfR9OVv1U7PncsJsq
4v6RfBpBTsD5wsI/kpU+xZ5HVt5MzuM8eqt+nee1t5FzoM9nW+RsnveMMe+X
89yx5Czm/zi9fvjfNoGcBP3fOlHvxyb9Tudkchrmh5NTyImcz6eRVX8i5zPT
dfzw/OxesupnRQ/uJxczfx7Q/sV6dz9kXpf4manjFc9nL8ojl+L5eNYsY//Y
PHN/vrm/fB9ytokP0Yc5ej2Y11+dazh2HnCogNzM7x88bj4v9e4JchnOK8fN
J6t6KM8XnzL2jbXraxbq+GF/+bR+vxPnUYvJap6Jtc89z5CjfF5Qql/nfpea
fJH+skznF5/XrjDxLT8XWqXjm/3IGnO/WLgcKNf+w/crTq0nD+P5xwZ9PX7f
xU4uR3/2iJOcAnstdet44vNGr/YXv9/k0/nvwnyzkexwSXyc6ydXOaX/vSao
14PvN00I6Xx2Sj/59zod7y7YO6LzA99XbmrU8YHn0bujOt6c0ItN5B63zF+/
3az9hd9rDH1Rxz9/b7bVvC759LLeL39v94rWD/ye8oV/kQt9Uq8+eJXc6kO/
8rr230bM92+Su6qhH2063/j/M+wkf+PH9w12kWcH5fMV/yb/uxbfD9hDfhC/
p/7gffK+MO7fTr62XtZ/4X/I2yI4j/6vzj/8/4tTPiIfiWL/H5N3bpJ5fP1+
8qZm9LOfkkdvwfOTg+QftsD+n+n60wL97NLxshX92JfkLS/LfD7xCPmCV6z/
ByLPnj4=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
           Rational[1, 3], 0.6666666666666666], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
           Rational[1, 3], 0.6666666666666666], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
           Rational[1, 3], 0.6666666666666666], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=70\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.2222222222222222, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6666666666666666`", ",", 
                    FractionBox["1", "3"], ",", "0.6666666666666666`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], Editable -> False, 
                    Selectable -> False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779823806087802*^9, 3.7798240330442553`*^9, 
  3.7798240726261396`*^9, 3.779824478376568*^9, 3.779824670615012*^9, 
  3.7798258333170195`*^9, 3.779826807118643*^9, 3.779827057557453*^9, 
  3.779897246217597*^9, 3.77989787612643*^9, 3.779898246145974*^9, 
  3.7798985151552887`*^9, 3.7798987924748516`*^9, 3.779900486914399*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"e864a7a8-a2ca-49c1-bb3f-f9a73b852249"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a80", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0080.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa80", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a80", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Brown", " ", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=80\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176013977485`*^9}, {
   3.7798195753983593`*^9, 3.779819591628085*^9}, {3.7798197171831903`*^9, 
   3.779819732888528*^9}, {3.7798214565344133`*^9, 3.77982149459835*^9}, {
   3.779821660788554*^9, 3.779821681454485*^9}, {3.779823815625349*^9, 
   3.779823819321661*^9}, {3.779824076694556*^9, 3.7798240768855877`*^9}, {
   3.7798241354556136`*^9, 3.779824138173255*^9}, {3.7798244817182837`*^9, 
   3.779824482256795*^9}, {3.7798246747106395`*^9, 3.7798246759054146`*^9}, {
   3.7798268105179877`*^9, 3.7798268106404977`*^9}, {3.7798270607504053`*^9, 
   3.7798270637168884`*^9}, {3.779827323349883*^9, 3.7798273235731444`*^9}, 
   3.7798978727250414`*^9, 3.779898241083059*^9, 3.7798985205855837`*^9, 
   3.779898796234764*^9, {3.779900491077318*^9, 3.7799004922438245`*^9}, {
   3.781218615568694*^9, 
   3.7812186160804324`*^9}},ExpressionUUID->"8bdecdfc-8772-4a13-840a-\
5d6491a213e9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
tz+J792wz6/5vNetT/y5H074tR/pcvEg+d5t/evX+fhzu/6Anl986ewhevwt
XOjX/vYHly8SD0fhAr/2O8esVDb6nwz/q9LhVr/mVwZs9FTOf09Zmbqf/H7k
NLjCr/E0cGXK3zK/nAU3+TU/z4NNPMrvcy5wLHqVB9t4HAoX+/U8bcTKlH3k
9zFXwCE+Hwn38PkoeLtf69FY9zz5fAJczueT3f5FPwrt86lnt6xM+Ve+P83a
g+/PcPaQz2e562V9f4IzAvr5PW698vl82OiJ7L8E9mGf+93nYr8H4XbsuwKe
if3XwAPor9bDLX71XxA28SL+jTh7if/jdn0+PV+ud/aX+NkAm3oi8/pGuIP4
e8LtX+rV0/BE9OovsOn3JL63OftJ/G+HM9G7V5w9pJ99HZ7t13nlTRcvcr65
y/rTp3r6Dtzr03l+r7u/9MsH3P1lPu+y/kIfPoFz6Jc+d/6QefArx6I/38Kr
/Npv/QiP9qt+HYWH+7VfOGaV8hb0Lx029UvnQ9jEr9TnU+A8v/Z7p8GT/dpf
DYSNfoo+nwU3+7X+n+c+l/72Atjom5x35cHdxPNQ2OSbxNMId73EyxWwySeJ
h5FwqV/72VGO5bxjLLwPf06AjR7JvD4ZNvVX/FUIt/i85PHdgFvgcX7tN6bB
Jn9F72e49cr73VmwiRc5j5kDl2Dve+C5fu1H58HDAzp/lcBGn/R81No/wO+D
4W1+7beWw+3k9xrnH3l/sg7eib2CcBr5UeX2I/Efd+uT+E64/Uj/uwEuCOj8
+Zhbr8TnE7DRH7HHU3AT8fesizfpd/7mPpf4egE29UDeL7TBQ5mP2l08iB6+
ARey37edP2S/u93nUs/es+v1My/CRk9kfjsIt/nV/932+X79fUkPbPJX/v0S
LvPrvPqN+1z6u+/hAcwjP7t4k3mlz+rU92U/x8Od7Oek1Sn/SH3NXJ3av+jX
APiIT+P5l7DJN+n3fwWb+Jf58Fz3ffHP+XAF/feFq1P+lPPZS+BM+q/LYNNv
y/lePtzh03pRAOdj/2thU7+k374eHh3QfmX86pR9RA8nwaYeSDxNgUvQs5vh
YvTqNnc/6a+nw1OZB2fCO8mPP8Lb6Vfvgk38yfz259Up/8l5/4LVKX9Jf7YE
nk48PABnMI8tc+sR/Vxl1+PXfK5w9hb7+eFs6mkYnks9i8IJ9KvWsdSTRhc/
0m8+ChegP4/bePDpeVKr9Rfr2Qy3oMd/dfuX+v0cPBP7vATnYJ9X4SLyZYd7
ntSnt2z8EF//cPEt/toDe9SHfW490m98YPcX0Hr/oduv1ONPXbxJ/HwBG72S
+ehr5x/R3+/gLOaFHy0H9Pc/aWuUu8i/vmtS+5X+9wTY6LXo4y/gPOp3/zWp
58m8drr7XPR+IGziW+b9s2HTL0j9Ow+eT/7kwhH8n+fuJ/E4bE3Kn2LvEe5+
cn5/BbyFeWnkmpR95XxnFGzqhfRfY2Gjj/J7ognwYeJtMpzN8wrdeiUfi9zn
8rxp9vs+7XfvWJOyv+xvFtzm03llzpqUP2V+vQe28+88eLNP9XUhvMen9bEU
LiafyuBtPo3f5XACvV8NF9JfrYObfBovAXifT8+DK936RK9jzj5yvlfn9if6
1uTuL/1DM5xOPWyBu32aD5vs86nvzzh/yPy01X1f7PU8PJH4e9nay6fvH1+D
t/s03nfAPp/mewecRr/dCeeSX+/CFaz/fbjTp/PyB7CpP1LfPrLxhr8/desR
Pfu3+77Mr1/D7T7tpw7Dpt7JefsR2NQPGW/THlaeSn94LNxGfTkBNvkl+dEP
LvFp/PSHbT97OjwXe5wJD8efZ8Ot1NdB8Cqf6n8uPN+n8Z8H2/53GJyBno6A
TfzKPH4lnPBpPzUSns15xCi3fsmnsQ+n7Cv1dgJ8wKfzzWR3f9HDQjidelAE
9xJv0+Ay9OcOeB/5Msuux8fvJ2ETH/J+525rf+43z9lH/74NLqB+lMLj6E/K
4GKfrq8cHsp8sdpe79N5da21B+cVAfe5nKdUwqU+za+os7/0k3WwyQfRh0a4
G380O3/L/NXi/Cn+bYV96M0z8CGf9hN/deuXeHne+Uv08iX3PHkf+ioc8ul5
2A7YzG/Sn7/lvi/x3AnHye89cJFP+7N99vk+PS/5wMWP6MWHLt4k3z51z5d+
5Qu3H6kPX7n4kfr3nbOfxNeP1t/E61EXj1Lf+lak7CHzW3pFav1in1/ARh/l
93enwBH06jTYxKucTwyETXxLfTqrIrV+6W/Pg41eSr9zAZyLnl4EtxHfQytS
+5H4GW6ZfiUfTuN892r3PNGHa2FTf6Q+jqlI2U/8Mx42+if6NQkuRs+nwPnU
o5vhIvLrNrdfid/pcPd6tedMuIXzhz9ae6J3d8HNPu337oVNvsh5zAK4Cz1e
7Pwj/z7gWPRnGWz0VZ6/Et7G8yvgBM/3wa3EZwjOoN+ohjs4L6lx9pX8rYcL
0NNHbDxh/41wE/nxJOwxbz/trpf+8i+OJZ632fhAf7e7+JDz4jbY9K+Sn69b
+9EfveHiVfJpl/tc5vnd7nmiN+/BZcT/ftiHvQ66+BV7fQybfJJ+qQdORz8P
we30e71wCfXse+d/qY8/OX9Iv9NnrfKe9bre4+DJPu1/T1ybWq/492R4HPF9
Kmz0R+atM+Cp2DcbNv2B9A85cBrz8SC4mPz+NTyc84eLYRN/kg/D4DyfxsPl
sIl/Of+5EjbxJ/3QNbCJL3kfcJ3bj9TPsfB2/DHR2oP9TYYPs79COIR+3AIP
Yv6aBnvo1x1rU/6VfJsFl/v0fH8OvA3/3e3WL/E2DzbxJf3/QriQ875SOJ38
KINnYo9y2OS3vA9c7ewt/l5r7Ul/4nf3Fz2rtP6mH4vCWZzX1Vr/0+82Ov/L
vP6ojSfmu8edP+V8rtXZV+rjZud//T0d3ET/+By8mfr8IpzBPPeKY9GXv8O9
1Ks33fol/na5+JR+8h1rf84D97rrpf7vd/uV84QuF8+in93wTvrjHrtf9ONL
t1+Zn7+Bt9D/fO+ep3/P5vYr/u+zTvkQ+XAcbPJZ5teT4MPo08lwNudVA2DT
z0k9y4LTOU/KdtdLfJ0Dl/I+bvC6lD/k+l/D5Vw/ZF1q/3L9petS9pfrL4dN
vsn1V8E+6us1cCfruc7dT/4dty7lL9nvRDif+Xiy3T/2KYQnY89b4C76oWlw
HvPYHfA+8m/WupQ/RI/muOdJf3A3nEs8zINLqGcLYdP/SD1ZAm8j3srs/onP
cnizX/vDVXAm/cJat37RUz9s4k/m07D1rz0/gs18Lr/fqbX+DejfazW4/Us+
Pur2K/Xocbdf6Z+ehIdzfrfZ+p95eQs8EX3dBvdFT16Ep6PHrzh/yvz5ur0/
55VvuvtL/7PLrUfq2W54C/Gx191P/L3fxY/476C9P/Pax3Acf/TAzfSDh+Ac
n/5+oRduQY++hwvQr5+s/der3v3H+tTzZZ4+bn3qerHXiXAx/UE/uIj3D6fC
ucxXZ8Bl6PuZsI98yoFb2f8guGS97j8XTqO/yXP3k/o0zF5PfI2Ap9K/XWG/
z/uCkfB26uUouHm9zmtj3P2kP5vw//ZzA5zPfqbAneynyNlL+pmpsOk/pF+e
Dg/gPGgmPJR+6Y/uevHPXc5e8nuDe+FV1P8FcAbzw2J4IvG51NlP+r1l8Gb0
aCWcQ7w9DGf59PxvvbXXOs3nkLOH5GcEPsz64pbXa/9VDyfW67y2Aa6gH37M
PV9+z/SEtQ/nu0/BpejTs/CB9XoeshVup397Ad5CPX/Z3V/8+5qzr8TrTjib
fO1w8SP1qNN9Lvq5x/lf4u992NhB+qkPXHxJPn3o8kPs8am1B3ryBTx5vcbT
V3AX9eBb933pN390/pP+/yjci7/+A10x8SjnkX1hk6/yPuY4X+r5+ntb2OiJ
vF850Zfyr9SbDNj01yJ3/Xyp9SXj7YtMuET159RT4UKedxo8n+ed4UutP/lP
2S/hmao3TWf6Uv4Vf/0KztB5v+dsuEX3f8q5cCn1YxBs4iGZvrecDw/gfUwu
vE3zJ3Eh3Iqe5cFGb5Pvk7qHwBHm9WG+lH+T7+eGXgbnk08j4HQ9X1j4G9jo
c/J9ZPQKeCLnC1c5f0k9vBr2NP+P9eBsfg8zCjb9vpznjoan8r5kjLWf+j8w
zvpD7fPMeLhM+6M9E91+ko//YZJ7vv59uftczmemWH/yPuQmZ0/Rg5vd8yV/
bnH7S653x21wkerVF9PgLfhzOtym+jp8ho1Hff9480zY1Gf5PeQsOIf+dzY8
W/vp5+Y4/ybPAw7MhXvQ63vgcurdvTZf9PckY+bB3RoPs+9z9ku262sWwkfo
FxdZf/O+Yondn74/PnS/84fkZ5nNJ/09wPCHbH7QX5bbeOZ97Qo4pP1JZBXs
4zx8DczvM/dVWPtr/B9ZZ/3jV//6nT9Fz4LW39qf3RF290/a66EqqwcBnQeq
3Xokf2LWvvwetMbmU0Di4/iEjV/tfy9ocN9P5vu4JmufgPSTf3wEzguqvZvh
nfr7l8c3wln6+/QdLXZ/+vcwPU+49STLyS82wZn69wJDnob38Xv6Z2z88Pdq
f7H+D2l/8VeYv6d88m92f5VSr956zupTlfYrL9h4qdL5/iX7vCrVjzYbf9Va
7161esX/z6Pd6k9Mvu/7u42vuP4+wM4ZCf176rfetP6p1ed3wOfXy/pP/oe1
V4OeR/8TPk7//4uT3rH7a9L9vwvXbpB5fN1eG0+PaD/7vl1/s74/2Q8P2aj2
/8Dm++Oqn132+v/Rfuwj+JRWmc/Hd8Nnb/L+D4e4hco=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=80\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4888888888888889, 0.4, 0.3111111111111111], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7333333333333333`", ",", "0.6`", ",", 
                    "0.4666666666666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                    Editable -> False, Selectable -> False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779823820427225*^9, 3.779824077398184*^9, 
  3.779824139480948*^9, 3.7798244835503564`*^9, 3.779824676451667*^9, 
  3.7798258364965878`*^9, 3.779826811150288*^9, 3.7798270642677617`*^9, 
  3.779897249163804*^9, 3.7798978735761256`*^9, 3.7798982417857046`*^9, 
  3.7798985218348465`*^9, 3.779898797047891*^9, 3.779900493130435*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"0cc124a7-f261-41df-ae5f-68c38fdf0624"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a90", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0090.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa90", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a90", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Magenta", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=90\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176013977485`*^9}, {
   3.7798195753983593`*^9, 3.779819591628085*^9}, {3.7798197171831903`*^9, 
   3.779819732888528*^9}, {3.7798214565344133`*^9, 3.77982149459835*^9}, {
   3.779821660788554*^9, 3.779821687755309*^9}, {3.779823830298047*^9, 
   3.779823833002768*^9}, {3.7798240837985315`*^9, 3.779824083971072*^9}, {
   3.779824142888058*^9, 3.779824145972042*^9}, {3.7798244869407387`*^9, 
   3.779824487664343*^9}, {3.779824679900345*^9, 3.779824680998429*^9}, {
   3.7798268146114254`*^9, 3.779826814766839*^9}, {3.7798270678498178`*^9, 
   3.77982707051122*^9}, {3.7798273265911026`*^9, 3.779827326754258*^9}, 
   3.779897869492466*^9, 3.779898236306086*^9, 3.779898526955927*^9, 
   3.7798988018079596`*^9, {3.7799004977820635`*^9, 3.779900501124214*^9}, {
   3.7812186193950596`*^9, 
   3.781218620120872*^9}},ExpressionUUID->"ca5a76f3-4db1-44a6-b30c-\
74ec5438a7e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH2Y1mPax+dJGMwyEtq0DIpZBtMqO1byk5datdTTeAzKM9o2bRvGlppq
yvSmqeZ+nfue9zKUNehgIrZtQwhjC6NtGcpTtqxB7CDJa891n+fn+p3Hsf7p
+By/l+u6zvN7vlzX7x6nT7jzv3/XIysra8jhWVmZf7fcf9XTXw6fHmRl/qtY
GbzX/4j56TFw8X1B90Mvj/zlzXDriqDHuUtOemcinLUi6P3Y8Pdn3wGvXxGc
PTB7Tb9yeGtzcPG69hnPzoc7VgSjfrn08tLl8JoVwS0bfp3TIw3vbw7uuvTo
t1ethKtWBAs3/e3+q1rh/iuCd17/euyetfDq5mDfmPWnLv4r3HtFMKz0g44z
XrLxivc82LT5dbi5OXjk822/mdAJ72wONk6v6dPzn3BqRdArM+AncLAimJz4
tOKyr/x4TcGczIJ/hEtWBG+eseObedl3Kxc26/p7wXubgrmXDb5lwylwa3Pw
999MyC0ZAGc1BT8fF3vhq/Ph75uDe6a4GRXBB5uCf5R/dNbAYXC/5iBj/tdH
wp1NwUt5bX+cfP3d4fxOucB58H/tebHnZHhUU+Co7NI/wnnNQcZcO+bAuU3B
t/PcBBb79zcHzjr/c2wMrmwK3Gyy19T7643qnwfgnObgZzdNvGTXo3BFU/D0
lz9sL3/K5p+TEdBz8MTm4E9Nm/Pa2uGuxiBjrl9vs/nK+3bAvXnfB3Z9dKTu
jl7/hocwv4Pe/syvxwzlgiZd7zHw6kZd74nwoMYgY56jT4MrGtV++fDuxuBa
576LfwG3NQYffvfw59sugcvxx1XwzsbgARdeP1w7I5z/Jbuui9SVwN0NwU+d
ec+bAFc2BAfynSD+AF/ZqHq528Zzb098Og/Oawoyy19YBfdvDDLy6ZO09Syf
6mbYBG9qUD0/6OdXH1ydMehj8NbG4Ewn5ynr4X0NwZWZFzxv8zs9M4Et8LhG
jbd/wPsbgtMWfzJm/f/BfRrUn13+/Q1q/8/9/BuDjHnLvoOnNmo+OHymckuD
xsOxcFtD0NLXCbwPfGV98Lxz79OnwyUNwfuzXYCeC3c2aL4aBKcadH1D4YD1
DYerG4JWl+6WjvHj1wevznj2vr43w/0aVF8T4a31qoc74JyG4M5MApkJT21Q
/82HR9cH+518P1oG768LSjIJMgXvq9d8tHJmaG/Jxw/BHfVq77XwxnqNnw1w
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
9rffmr5FD4dsftLvHLZEOT8WZOR/STa8KarxlbMk9J+c/x4PO73J70dOXBLO
R/TUF3b1VfYvp8JD6G/OhF0+kt/nnL0ktLfkqwIbT/RYuCScv5ynDYZd/pXf
x1xs75PrQ43l+jA4iGo9Gu6Z6yPtfrk+Gi6Laf4o9uvh+RvhYp4fD0/m+gTY
5Se5PgkuZ/5/sPXK9Tvh0VG9Pt3Pj/WXw04vYp+5/v6Y2m++sdj3Xrtf7L/M
7C/9VczmJ/6r8f7Gv/XwbvJrM9we0/Pl+2EXv6KfB/39Ud2vP2LvE/09Zs9L
vXrS2zum+erPtn7R90a4gHq3CR5Bv/YS3Cem/eyrtl7Zr7xu+pHzzW1wZUzz
6dve/jHdz+8wPUm/vNvsI/vzvd5/Uc0PH9l4ks8/hVsiuh/8wscT9f6ArUf6
re/Mv5K/Dpm9pV84rCqcn+S/bNjlA90fwnnU5+Ph0pj2eyfCTu/SX/WFC8nP
p9r9Uv/PhDvpb8+uCu0l510F9rzotdDmJ3oaXBXaQ/RyMeziR/QwFG6Paj87
DHb7DTnvGA5348+RNr7s10fDWfirGHb1L3N81/tG2MWX9BvjvX1imu8nwC4+
5PvuJD+/qJ7HTIFbsPedZh/pR6fBLn5k/1UOt8Y4H4WLqIfzYRcf0m8thicT
/8u8f2L6/SQKtxE/NXAH8VFn8xf9N8Ob0HeLH4/+90HTh+w/H/brjas+H/Pv
j6o9noC70N/T8Cj6nb+avUVfz8FOz/J9YbP3L/pp9/Mln77m/RfX9b4J9+N8
7y1br9Szd01vul/0/mD/tgcuxv9d3r5x/X3JPj+fiP77OdyT/epX8Pqo9nff
mH4lXn60+cp+pcfS0L+yniOXhuuV9RyzNLSf1Ndcuy75qzdchZ5/ujS0j/T7
P/PPR3V/eAZcjl7Pgp1+pP8+B3b9ipzPXgB3E98Xwi5fyPleEVxBvR1i8xP7
X740XL/021fB+fQr1ywN/SH58Fo//5jqaayNL/nshqWhfSVf3Qz3Zr9cCrey
H5xo65H4+L1/Pqb96u1wJ/u3P9r85bx/Bhywv5hj6xE93ANno++FsIt/yZ9V
sIsHiedq2PWzYr+Ef57z2LTNR+pZo9cH5ysrzZ9ST1b5+Ua133zI/Cn551G7
X86T2vz8yC/rYNdvST7+i9dHVOv3M3Zd7POCPS/2eRkeQbxsgbPoj9+Ac9HX
3709IuqvTluvxPdOuJR+432LD6n3H8CuH5B6/DG8Cf185u0b1f3Rl6Z3yb9f
2/OyX/jO4kt+/5O1TNnpS+KvJ+z6A+l/j4Jbo5offwLnUb97wU4Psl87Cc7h
/KEv7Ppf2e+f5t9Pv3bmstC+Ej/5cFtE/V8A70aPA+FC7D14WWh/Ob+/2Fj2
S0P9/KJ6vjNsWehf6b+Gwy7fye+JRtr9orfRcBXjFcOunko8lsBO7zLeeLiE
fvdWe5+sbxLcJ6r7lSnenjHdv97p54M9p/n1k19nmr2kPlb4+6MaT5V+vlHV
72LYxYPk+6Ww07vkmyicy/4wCbv+Uc6Da2Hf7zfBTm9yvnef+Vfy22p/PaL9
QyvcTr5YY3qTeFgLu/wq9f0pb9+o7p82eL1gr2fhIvT3IjyI74+v2PpF71vM
nhLvHV4/Ue23t3t7El/vmN5l/u95f0Z1v/y+6V3q27/gfPz9Mdwd0Xz2b9Oj
7F+/tPGlnzoIt0T1vP17W59sb7OWK++OaH94OFwa0fpy1PLQnxIfxy4P/S36
6QW7+i39xklwZ0TtccrycP7iz9OWh/aX+trfvy+i+T8f3hRR/Rf490e1/x24
PLSX5NPBcB778V/Brj+TfmqojSf2HQbXRzSehtv6pN6OtPnI/mY07OJP8mEx
3Id6UAIfRG/j/fWo5p9b7XmJl0neHlF+Pwm7+izfd+7w/uB90+As3jcTnsz7
KmAXD/K+Sj9eROe3yK+X/cVS2Old9qsRuIz9XNK/P6bnKbXmT4mvRrO39JP3
eb2QH1b59eCPVj+/qO6/1tj7xL9t/nnyzVM2f+kn/mLPi16e9dfJly/Ydfke
+rLpR87Dtvj1RLQ/fwPOJd9vhwsjGt+dcHdU+7OdsIt3OS953+svovniA/OP
xNvHZg/pVz4zf0l9+MLsJ/Xva5u/6Os787/o9RDcSn3rWc3zEd2/ZcPO/2Kf
n8BOb/L7u+NhF8+Sr06EXX6U84m+sNOr1KdTYadH6W/PhMvpd86Gu9gvnQvX
o8dC2OVz0c8guJJ+pQh2+UDOdy+1+Ut+uBxuoT5eXR36U/xzDVxI/rrWXyef
j4VdfpR6dIO3F/F1s7Hot9TPh/OzibDrD+T84fdmD8l3t8Ml9J93wS7/yXnM
DG8v8vFss5/8e4+fP/lnoa1Hxl/i58/5RzU8gnwbh6vQZwrOjWq/0WD2lP33
CtjpT+L3fr8+zhP+ZP4S+z/ir5PvH/d6imj9fhJ2+pT+8s9wFnre6NcT0/y7
yc+f8+LNZm+Jz1f9/COqv9fs/RJP2/z7Y7qff8uvj3zzrtlffy9g9hF77TE9
ib0+9OPRD+6zeJD82W32kn5vv38f9ewb04/Uxx/gg/Q7PdjHZkd0vkfAlfS/
R0dCf4p/jzMWfZ9gLPutk+ES7NsvEs5P+oe8SGhv6d/6w60Rje+fR8L1Sn99
Huzyg8TDQP9+9HAR7PoBOf/5FdxJP3QZ7PKJfA+4IhLaX+rncH8//hjl58f6
Rtv8ZH3FcFFE88eNsKvPsv8a7++n37oVdvqUeJsEt0T0fH+KXy/+u8Oui96m
wU5/0v/PhMsiet5X4Zl+o9Lbg/OwRbDTl3wPXAo7/Yu/I3AX/UnC3if5rNbs
L/1Yo9lP6vtKOIhov7vK/C379YfMfhJ/j/r7o3o+12bjSX1cBx9E/+u9/6La
Pz4D51Gfnzd/ib1fsvdLfvmbtx+/h3r9P/S3zfsvqv3k294e5KMdcJzzhl2w
P2/f6/Uf0fzZZfOXerjP9Cn+/Bx2+V/2z1+Z/aX/+cbPl/OBH70+2P/3IC+3
EQ9HwE4/sn89Bm6lPh4XDe0j//bmX9efSj3rEw3tKedJ/eAczpNPt/fr/48E
LuP86ef2Prn/fNjVP7n/F/793H8R3Mn9l8BV1NfL7H1y/xV+PP4dwb8trHeU
rVfsMxrOxj7F8GTseaPZT/+eAy6l3tzq18v3yUlwOfv9KX599Ad3REP/ih6m
2fpEPzNhNy+pJ3OioX9Fb5V+vRHV5yLY6Uj6wyo/Hv1CxNuB8+gEvJ79aRou
8edHNr78fmelf39U/17rAbgopvH4kM1P6tGjtl7pnx43P0i8rzP9SL1db/OT
/LrR+4vfCz1vepB8/JK3V0T3n6+afqSfex3uQ/+zzfwj9ewt7z/iZIf3V0T9
vcvWJ/7b4/1FPH8IB8T/PriDfrDb7Ce/X9hv6xX7fmP6k/z1A1xJv/FffDd2
dU/200fAZfQnR8P5Ee0PjoUPRvQ87YRY6E/ZX50Mt1DvTomF/pB4yvPXOZ/t
Dzt9yfrz/XjosQDuoB8c6N/HecVguA/5+GK/nqh+LxgKZ1Evh8Ft7Neuhruq
tT8b6a9z/ncdvJ56NRYOqG8lsKsn0s+M8/fTL5fChZwHTYyF9pd+6few05P4
53azn/ze4C5br9T/Gd7+7B9mw6Xoc57ZV/q9heYvyUdLvL+w93Lzv5z/xfz6
iOeUt29E47Pe/CPza4Y76b/ut/Flv/agrVf64Yf9/RH9PdNjcD394BM2H8lP
T9v75Dxkg9dDtfZvz8GuP5d6/iKcjX9fMT2IXrf668Rrh7cf9Wi7+VvyZ6ef
H9+H3/PxwXn2+/Duao2nD0wfYo+PYVefJJ985v2Nnr6w9Us9OGD6kX7zO6/P
iPb/h/z9UfXXf/G7S5f/5TyyZzxcr3yPOQLuw343G3Z6ku8rR8Ol7L9z7HlJ
d8fa8xm9fZYbD+2XyT8nnPAf450IO/3KeCf792veqfwpXKLnd6tPMRZ//Qzu
Uv3sOy0e2juz/uPPgLPIb/3joT0y4XvjWWYP0UM+HOh5R8s5nvl9QIGfb7V8
T+o6356X/D7Q7JX5Pld4obcH5/GDbX2ZfmrmL709IvI9svFivx7OFy6BJ1MP
LzV7ZuL/8MCuy3nPMLsu57lX2vwk/q+GXV+d8X9yhN2fsc9T15j9Mv1O5yiz
b2b4b6+F24nfMfa8nM+MhTdxfnY93Eo+uMGel/i5Ec7X+W652cYT/Yw3+4s/
S/39Gg+DJvj16H7thomw64fl95CT4N30L5O9//X3Gc9M8frQ7wm7p8Kuvkq+
vhN2OpZ6d5f3l/YDV0+DXX2Q74t3e//q975lMy0epP+bBR/kPGqO15P+HrJ7
LtzB94JKmHoyaIHdL/3lIrOHfK+9F+7W/U59lZ8/vz9Z5vWgv3/dWQ136vfI
76PmT/FvwtYr+azG+1P1eGvaj6f2WlDn7cffSzWYfSV+muBifg+6wtsvJvo4
ssXmlynnZz9g8ZOJ9xGr4Z769xe//xM8RL/XL2v1+tPf+z36iNcT+lrj55fQ
fPEYvDUu+6+frIXH6d9rnP8k7P/e7il4M79n/7OfP3+f+Bd4dVLOcx//q19/
UurVG8/Avfn74efgUfw9/gven/r3+oWb4Yn8PffL3t4p/b1BOxxPyfPxv8Fr
0vr7gK1wQa2O/7rPF3U6fof3R73M/7i/e/s06Hn0P+DmRtHrtW/7/NCk638H
zlkp+/HoDnjjSu1n3/P2vE+/n+zy8Xy/2v99uPEBzZ97vV5XaT/2L/iFVbI/
v6bL3/9g8P82BV+b
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 
           Rational[1, 3], 1], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=90\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 1], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 1], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["1", "3"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779823833963167*^9, 3.7798240845860105`*^9, 
  3.7798241466164255`*^9, 3.7798244885028353`*^9, 3.7798246816059766`*^9, 
  3.7798258388910236`*^9, 3.779826815379095*^9, 3.7798270710221148`*^9, 
  3.7798972528413115`*^9, 3.779897870296406*^9, 3.7798982369659853`*^9, 
  3.77989852815873*^9, 3.7798988024947214`*^9, 3.7799005020538845`*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"09d55c64-7c2d-48d6-bd80-50284123ca94"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7798232098231444`*^9, 3.779823219323239*^9}, {
  3.779823769287238*^9, 
  3.7798238633514333`*^9}},ExpressionUUID->"ff7333ac-73a5-47e9-8516-\
a77d3a75c207"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a100", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0100.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa100", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a100", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Lighter", "[", "Yellow", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=100\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.772350926509834*^9, 3.7723509292237034`*^9}, {
   3.7723509622146997`*^9, 3.7723509643301554`*^9}, 3.7723583568947287`*^9, {
   3.772358406215358*^9, 3.772358409327196*^9}, 3.772360102701251*^9, {
   3.7798121534990053`*^9, 3.779812203682912*^9}, {3.7798122555976152`*^9, 
   3.779812338957322*^9}, {3.7798175783979983`*^9, 3.7798176013977485`*^9}, {
   3.7798195753983593`*^9, 3.779819591628085*^9}, {3.7798197171831903`*^9, 
   3.779819732888528*^9}, {3.7798214565344133`*^9, 3.77982149459835*^9}, {
   3.779821660788554*^9, 3.7798217062243247`*^9}, {3.779823845697903*^9, 
   3.779823850577628*^9}, {3.779824087870344*^9, 3.779824088060835*^9}, {
   3.7798241528764424`*^9, 3.779824157124836*^9}, {3.779824452116644*^9, 
   3.779824452711179*^9}, {3.779824685219155*^9, 3.7798246861338043`*^9}, {
   3.7798268180134754`*^9, 3.77982681811897*^9}, {3.7798270740761614`*^9, 
   3.7798270784565725`*^9}, {3.7798273302162676`*^9, 3.779827330399871*^9}, 
   3.779897866020358*^9, 3.7798982318196707`*^9, 3.779898533012556*^9, 
   3.779898807074662*^9, {3.77990050872089*^9, 3.779900515590067*^9}, {
   3.781218623448382*^9, 
   3.7812186239528055`*^9}},ExpressionUUID->"9d4bf7b3-ac4a-49b1-9253-\
5547be854eb6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH18lnP7x3fnaQiTMOlmVAzJolgecpbUVLLu5jaUe3UnkzBKrZqsWrXa
9XBe165VKhlFQy8WRRKFZO7CdIeSfkVhCIukiH7f83N8jvN4/X7+6fV+nQ/f
4/k4vt/zmnOG3f+PO1ukpaVdfVRaWvDvhieuf/mXPmO8NPw329ve/ujJNQPJ
XWZ7zUvW97vidnLWbK/FRTNO2zqcfGi21/r5Pl9MuI88eLZ3fuf0pW1LyRU1
XrflDWPfmEwume31v2Jmj6Iqcq8a745VN7RsUUPOne09cM1xny5aSC6t8aau
/c8T19eZfFs/+G3QrmX2/J6BK8+a9hp5XY3Xs+irxnPfIS+o8Qp2PTV/3Qfk
nTXes3s33ThsC7m4xls9pjrzyC/JTTVeq2DB78mba7zixA9l1/5KPlDjTQwU
/otcVuN9dO62g5PSHwrlgf6tyPtS3sPXdr1j1ZnkPSnvvzcOyyjsQF6b8i4Y
HH/r107k1SnvkZFOolzyqBrv49Jvz+vck9w/5QXm/6AfuajGeyer/sHim8mf
13hnXuI8+C9bD/Ystvc7KrnmQfLOlBeYa9tEcqrG+32SE2AaeXPKc9b554lx
8vAaz0mTvnQuuTYl/nmSfCjl/f224VfteI7cmPJe/uXPzaUryGk1XssggNaY
/k/PX5dV3/BQ6I/AXDdsIufzfdvI5XzfV+R1KS8/Oue+Vj+Rs1Ii3wFyAeOn
xVjqWy36Hk/Oob6njg3fH5jnuLPJdbRfNnljyhvg3NftUnKXGu+bP57Zu+kq
cgb9cT15ZbX3pEuvPweMDe1x1Y6bonMKjc9w5r14GLko5e3PdgFxD9ljvDxE
zq/23NsTP0wiN1d7gfpTK8nLq70gfDKTql/KqxrlJJxPTk9JPD9FHpPyegcG
fZ68rtpr58J55Ep7vlfwgjfHhv4+JxBgA7khJfn2MXlxtXf2tO8HrvwfcmVK
/NlEbs1420tOS3mBeUv+IOeyHhw1TvhAteTDieSMlFfbxgV4Jjk75b3p3Pvy
OcZfTHAJehE5p1rqVRfyburX3Rj69SGXpbw6V+5mDiRnprz3xr7xeJvbyaXV
El/DVb6kxMN9+ny1d39QQMaRN1aL/yaTr055+1z4fjuL3L7aKwwKZIpcUi31
aCG5vFrq8RLynmqx9zJyc1LyZ9W40P7I73Vkn/K8b++HPJ+S86q9oBx/tZPc
sdpb4F734HfkNNrnF3JDUuzzp8mHfD6mVNirlnzJKA31Q3y3IR9KSj1sR96X
8Do49a67mNyY8N7f6P67nOwnvKCc3uaRXfyj/t9QGsrjnq4aNYi8JekF4XVw
cGloH+THCHJZ0gvCsWVJaeg/2Hc8eWnCC8L3rKnkVNK7+MXHfloSIVcmRZ/Z
9j7E3+PkxQnJr2fIq5NeRuDgF8mDk94hVy5uXE3OTXqLXbn59B3Tx3WD7MEf
6vr0zxZyTlLi90tyadJD//6ePDcp9fFXcq+k1J+/yBW0R/p44d0Jb3wQ0K3G
h/ohv88k+0nxbwfy5wmpX53IRUnpd7nkgmrpnz3IJUnvLxfu5/Uj5zF/Csij
aM87yIXVXoAv3jU+1AfzxwMmD+rLhPGhPRHvFcaYN6LkSFL8MYd8KCHzQC25
PCn94dnxoT0Dd69/idw6KfXkdbMX/LmenJ6U+tao9klKvm01+Re61/XbNT70
B+J7D3lzQuJhv+rP5w+PD/2N54+dIJzL51uR23L9thPC+/F8B/LyhMh/CTmD
8Zg7IVwf+vckFySl//QjH2A830x2+TnXhc/aOyaE9oH9i8ldmN8P2P3w30Ry
r4QXlMvlFeS1CZlvYuTMpPSrOeQ9CYmfJ8iuXqC+PGv3B+7MWm7rzXvU/fc6
uSQh8fsuuSLhve3SK95oz6MefDYhtD/myV3k2oT0ox/IGxMy7+4nd0xI/h0m
j0lIPTp2ovCohORvK/LchPdjmTNQW3J9QvK/A7k54QXjzk2XkJt8+ot8dcJ7
15XfHj3JlQmxdz9yWsK7LPjvZnJmQurXHWQXD7BX8cRQXtS/B+z9mPcm2vtR
LypMfvSDKHlBQvr3nImhP6FvLdnlK/R9llyckHnppYmhPyW/9HnfC8rb6vVq
v6TERyN5ZcL70JX/p7aSUwnpz7vIe+jfPWZP/Ltf7/dl3jtMdvUe/Ti9THgx
+02rslBfzNtnloXyIx86kDf6Es+dyC0TMp/kloX2Qzz2IJcmZL7sRy5hPBWQ
N/veP1z4fT+EvDMh/eCustC+gXkbS+w64mECuX3CywsMOtXkQT+LktfRPrPJ
o2ifWnIt/fmMreese8n2F8mtWa9Wk4sSUm/fMfsF6XLRh2avA85d87eQy9hv
viS7+IM/vtfnfYmffWQv4QXmGPgXeakv6x3zsHAB1zuZvM6X/tSGnJ6Qeao9
uZ76Xfxw6A/odzl5jy/11CPnJaS/30BOoz0HkYcnvGB8qRps14Nw+e1Oex/2
u/eTe3G+KSU3+14QTl2nkF2+on9WkV08IF5qyJW+zGcLyW0TMk8vIe/2JZ+W
kbvofEjOScj+YB05O+EF28XJ75Nd/iEfPjF7wf47bT3Um2/JV9Mev5DLfa9v
UHAPkbMS3olBATpqUvi+04MB7qRJoX+R75mTQnlRn84lNyRk3ryI7OIH+58u
ZFcPHgoKVndyR/afPuT+SZFvIHk369ltZDdfIt/+Tdb6ey95OfvVWHKjL/Yr
J7t+gHlrJrmC8ZQkR5ifC0wf1K+nyOvo3xfILl9l/0We60v9eVPl971xwQIb
yIVx2R9tJu/zpR9tJ/fyZd7/hrzTl/mpmTyK+vxuz0OfIx4RzvZl/9SS7OIb
+53THgnlC8a1x85+JLQP5u9s8nJf6uml5DJf/HMVudSX+n09udCXejiA7PvS
H28h18Vlnhiq68cl30eSm+Oi/2hye8bbw2QXn8iH6eR63/t5kzOQT87zpX8/
Sk7nvPekvs+X+r6UPMaX/FlBdv0A/n+DPNiX+ajBnkc/+Mj43qAhfkYu9qW+
7lZ7JGQe+oGc5cv5zm/kLb70x7Ry4RTXP5LcEJf6dCw53xf7nUiuj3M+Ibt4
wPx/OjknLv2urT2PfMkiZ3M/0KE89A/2cxeSC6hfJ12P8XIZuSPrbS55tS/n
YVeT+/vcT5BLaZ/e5Exf6m1fkxfz4U3knTHJ5wJyF8ZnIdnVV+TjEHJrX+rd
MH2fL/POCHJLX+ape0w/3F9i8uD+MfZ+3D+eXML7J5n+uH8KuRfrwwyyq/eQ
P0JeTvl9cpEv+taY/2GfeXYd9llIbs/+sojs6insX0c+xPqx1PSHv5aZfbBf
eNniAfV9FTmN/XeNyYP4WUfOYn9pIOfGJN7eN/+gvmwit/Vlv/8JucKXeN5m
8Yt5d6faNy79cLfGS1zq/bcWH5gXfjR5MU/9bPKh/v2m+sWlHx0ip8elHqRN
Ft4S9wJ17zuKHPFlv3EcuZjz7Il2f1AOh59CdvUb9T+TnBeX/W9bclZc6vc5
ZFcvsJ/vMDm0D/x/Ibkl8+kSclpc8u8yci3rZS75SNana8gZcTnf7qH3x6Sf
9zb5sV/vR3bxgXn+JnJRXOxXQM6Oy/nArWRXr7G/HKLXY96I4L9h5HRf9mN3
2ftQr+8hu/qCfl9CzoxLPowh58YlXseT62PSfyeRS1nvppi+iKcZKl9M+mtE
9Y2Kfr7Jg/O6GrKLN/TPefp++nsh2YvL/LeIfCAm82idclTyfSm5C/23jOzq
N+adFcoxmd9XkZtiUv/XqD/icp77tuoXE3kbzP6Q9321X1Tk/cjiEfu1T8y+
+HcbeWVc6scOjW/W+91mb9i3yZ5H/Pxg8gTlPftnje+Y5NN+0w/zzx+mP+Ih
bYqwixecHx1J9mNS746dEtoX9egEcjHt1YrcSP+eTm6OSv6fSXbxgP1B1pRQ
H8wHHciunyAeLzBGPe80JdQX+Xapvp/17Qqyi0/46+opob+wvkdey3pyvd4f
k/14X3JDVPZ3A8hZrPeDVP+o9Odb9HqU+xN7HvYfavaD/e8klzIfR5Kb4jJv
3E92+YF6M1r9EZf8KlX9Y/K9psz0x/exyapfVOrBdHse8+AsXZ/1Lm72xTxQ
rfpw3p1r9oE/H9Pno7K/esLej3h6mlwSE32eI7v8hj4vkGtZL5bb/ZinVirH
ZT59nezqNer9W6Yv6vd6cjrnjw36fvrnQ5Mf+bGZnOHL+f5WsheT/e52vR6X
efpLWx/2+Zrs/I94+568Mir1ulmZ/t6n9o3K99CD+v6Y9Jc/yZVxmVdbTCXH
pN8eQ3b5hv3J8WQX//j+lUF29RL17lRyYVTq8xlTQ/tiHj2LnM58OHdq6A/M
4+eT0+i/juSmqBeY5/Ec8tqYzA9dTV7U7266Pt/XfWqoL953HdnFP+Tro/JH
Rb7+yjGRL9/0RXzdbPLjvPA2cn5Mzj/umBraH/b7t9kP8XoX2eUX5oNRph/m
wxJdLybndQ+RXX2DfyeYvXC+PYncGJXzo6nknJjMdzPI5awPEXsf4i9h/kF+
1qg8rHfz7H7McwvN/sj3RWZf5EedXUf9Wmr2Qf9YRq6Lyvy2wvRFPV6l90fF
X2vIWez3b5Ozo2LfBrLLb8T7Rl0/Kv34I7M/8udjsx/s8ZnFD+a/HXY/zoN2
mT1xPt9E9qJS//aQXX3F+dZesxfmvf0qb0zi93eTD/If1ucp/xEV4XX4M70i
fB79piW5Pirn1ydXhPbH/vo0sh8R+7epCO2Penc22dUP7LfbkfPYj7NtPdSH
juRy9rfOKl9E9seX2/M4b7iS7Pof7HUteS7r63Xkyqj4O4+cw/pxI9nFM+bX
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
u3zGfu00ssd634bs6jX2+2eTsznvtSO7eof8ydbn2b86zgr1RTx2tvfB3l3J
en7fjVzE/VJ3sp7v9DT9MH/1Ibv5Bb8n6mfPI97yTT6sV0DOYD4W2vNYb4he
r5J5d6jZD/qNILv4xn5lpF7n/vV+ci73v6PNHqiv41Rf7hfLZoX+RT6Vmz8Q
v9PIJaz3M80/qDcxkwfxkjT9cB48W+XjPD6f7OId53uP6/3cjy0mu/kQ80Od
vR/1YqldRz4sI7v5Av19hfo7IvunVeRS2usNtQ/nx7c1HiPy/fFdcjrjfYOt
j3xvJNdz3t5s9kB+bTV/Qv7tuj73y19ofFRJf/va1oe/vzN/oJ79pPHO/esv
Zl/MUwfIzVVy3n7I5MX2Nq1KuJzz4VHkSn6vOJacyfw4kbyT+dhKr0dk3jiN
nE57nGn3w59nk3PYX9uTtf5n23qI/45VoT8w/3Ymb6mSetrVGPvxK8luHsQ8
1Z2cFxH79iSnMZ/6qHxV0m/7kV18YH+TTy6KSD0sILt8Qz8oNPkRb0NMHtSf
ocrMlxFqb84TI8kuPvB95z6zH9432uSTv28ze+B9ZXYd7ysnz6V8FeZPxNNM
stsfYL8aJWdR3yS5hOcps8l1nDfnkddWyTz5uPkX9WGR2Qf+qFN7cv+1VOWp
Ev/Wm3yoNyvMfpgnXiUfqJJ4eUPtw/OitzSeIvI9dL3Jh/OwDcoRmc8/JNdz
/thMdvmC/N5CdvsPzGef63We539h/kK9+Iq8kvuX7/T9nFd+1PexP/xs+qL/
/abxVSXx9YflE+L1sMUD+tuRPDdz8YT9W3ok1B/2OSES+h+/vzs5EuqLenUq
2fU3nE+0iYT2Qn86y57HfNuOnM/vZ+eTD7CeXkTO5jyTQ3b1BvHThdzEeVjP
/dJ5vntNJLQ/6kMPsvbH3uQs1t++ZBfnqF8DyHk8Dxuk8vD3BLdEQvsjv25X
+zF+i8iuDsKew81eOH+4W9/Pencv2cUv5r0HVH6ex4w1/VGPJ5Ab+e8jZn/U
n6nqP64/w+TF+hGyz/V9sos3xGfK/Id541F7P/bfj6m92B+fIBeznj5t8QP7
P6v6MT9eIHs833jJ9MN8+Yr5H/G8mpzJ+rtW9a+S8+J1dj/y8z3TD/H3vvqf
+bTJ5MF+/hPVl/XmM41H1ocd5l/Ya5cx7PUNuYTz0h6NR37PaVb9ojLv7bN4
RD87aPGL/vin2Q/zToto6D/IezTZxQ/m3+PImTzfOons6jfi+5RoqA/2W6eT
c2nftvY+zA9Zdj/mt/ZkV0+Q3xeQazlfX0x28xHyobOuz3i4nOzyH+c/V+r6
nIeuJbt4x/eA61Rf9s8+Jg/80Z/sMX/zTX/oV2Dro37cqvJHZP81hFzJ+jWU
3FQl+TbC5MH5/khycZX47z6yyxfE22iyi1/M/+NUXn5fLdP7q8Qe5WQ3B8jf
T9p1fA+cSc7heVNU74/KfJIgu3xEPZut60dkHptHrud53ULTF/PuIn1fRPbr
S8il3N89Z/bA+Vy9MfrjcrU368VKss/z3dctPtCf3zT7w97vWDygvvxH44fz
0AfkbO4fNln8Y5781Owv57d6P89Hd5i8OE/YTXb9DfWzyeyJfrjHnoc/95Jd
PmP//Kvam/v1gyaP/D2b6k//t4hRf+bD0bHQP9i/Hk92+YL6dFIs9Bf+bR0L
/YV+lklu5PegtuQDPE8+h7yW804HY9x/QSzUD/d3svVx/6XkTJ5XXU4u5v1X
kXMoz7X6Pt5/nb0P/+SRXf5C3/7kPJ6P5JObaJ8CcmmV2PNWsuvH8vcc5BLO
i0PJmn8jyLmsRyPJhZwP7jP7IR5Gk33GzzjTB/1koj7P/Uu52pPzVAXZ5S/m
w0pyEfd/UXIW62lC16uS/WmNylPF8yOym1fw+52FZBev+HutJ42Rj0vUvtxv
P6f243nzC8bI9+VqT/bblWp/fj9abf5GPXmTnM7vs++ovlHZf76n9q+See4D
8y/mn016P/d7n6g8jO9tZI/nazss/uG/XWpP7te+0fuZ/3vMf5gHmy1+8PuF
fWof1qODpg/q158mL+rd33hOnMPzqqPJubTXcfFQH8wHJ5L1PO2UeOg/7K9O
j4f6oL6fqfczn7LImawf7cmuv0D/bHI5v4d3JNexP3U2eRBfXU0e1ONu5Fp+
L+uu8rFf9iTr7yl7k9M4n/WLh/aGPjeZPNBnkNqH+hSS13J/PtiuY14uiof2
Rj0frvpyXrrb9Id/7jV58XuDB8ja/8eSXfxh/zDB9Ed8TrL1Me9NNX1Qj2aY
/eXvc8npPP+Lk13/QD6nTH/k51yzL+RbQHbxh/nrCbKLP+zXntL3V8k8/AzZ
1WP8nul5sk/7vWj6oT69bPbFecgqsps3ML+tMfnQz98ml3A//q49j3jdSG7k
fqVR38d5ebPdj/q5ReOZ8bfd4gXz1Bfkucynr8iVnEe/M/lQT37UfGM8/Wzy
oB/sN/kxb/5h+Yn5/7DGU1T89Tdf2Pkf55FHkj3+/uVocnYVf29LruT3wOP8
0F/oNy3JW6RfvHeissTbjxl+KG9Qf045xa5jvVPJRdxfn05eKfWv/AxymtSb
xWfq++ivv9v6gXn3nE3OFf1PPtf0Q31rT54bRb+49TxyIeMhW1nOx2ovJJey
nnVU+8j3pKZO5Hx+j+ps6wXf53Iu80N/Ip+6qr4yT427wuwZfI+c141cz+/D
V9n66IfXmLxB/h/l6Xo87+lp9sJ5bi/yTp4f9CZniv+TeeR0sc+KvuafYN7Z
0t/sGSz/+wBl7o8Hkl09wvnMINMP9fBmez/qwS0af8yfWy0eA3k33E4+IN93
fhxi9oA/i8w/QT50Gab6xrCfuWW4vQ+/hxxh/kB9KFZ/yTz9+kjzX3AesHOU
xRfq9f0WX+h3D5Cb5Pc4vUdbvOL74kMmXzCuzxqn/uX8N97iD+dRE81/wfjc
/LDZC/lZTi6hvlPUn5wvK8gZ/F473eITfy5UafLL3xupfPL7188jal/5Hnko
Zu+HfxPkWv6eqdr0CeJxaI3ZI7DXlDnmL+wHHiXn8PvFfLLPv5d77P/GxzG1
Gk/y++vzn9R4kt/35C02/wTz5N1PW7zB3nXqjxj6+XPPajzI9/UNSzWf5Hxw
z/OaDzHsv05YZvYI5rFOL6k8PC9ZofHPv1d7hdzal/niVXKd/P8KXnhN14uj
X334OjkvLvPKGnIZ/x7/LZUnIfVjnT7Pv4der/Lw/+fRQF6ewPP+f8iH5Pn6
jeTVSVn/A82Xalm/kbyxGvKf9F9yKiXn0R8bB/E64FPy8BrRfyu542zsx2Pb
9P1zZJ7dTu41V76f7CAPflTs/4XG96NSP3drPM+XeexrcsUC7M/7Nqn/H/P+
F4joUFs=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
           Rational[1, 3]], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=100\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
                    Rational[1, 3]], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
                    Rational[1, 3]], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779823851557008*^9, 3.779824088612359*^9, 
  3.7798241582143135`*^9, 3.7798244920417304`*^9, 3.7798246868098974`*^9, 
  3.7798258420238123`*^9, 3.779826818602873*^9, 3.7798270791395416`*^9, 
  3.779897255277802*^9, 3.779897866855355*^9, 3.779898232405633*^9, 
  3.7798985344021215`*^9, 3.779898807916704*^9, 3.779900516719641*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"9385cace-d9b6-4687-9cfe-dfa0f266ac88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a110", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0110.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa110", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a110", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Red"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=110\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798217286888075`*^9}, {
   3.779823893409663*^9, 3.7798238971725607`*^9}, {3.7798240954693847`*^9, 
   3.7798240956691375`*^9}, {3.779824441367385*^9, 3.779824448990512*^9}, {
   3.779824696639*^9, 3.7798246976299753`*^9}, {3.7798268224379253`*^9, 
   3.7798268225452886`*^9}, {3.7798270836223493`*^9, 3.779827086607538*^9}, {
   3.779827333896496*^9, 3.7798273341019835`*^9}, 3.7798978616564426`*^9, 
   3.779898228042691*^9, 3.7798985401052003`*^9, 3.779898812304666*^9, {
   3.7799005207406683`*^9, 3.779900521899601*^9}, {3.781218628496359*^9, 
   3.7812186290249805`*^9}},ExpressionUUID->"49827863-c40d-40a4-828e-\
86e0120516b5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH18V+P/x/dNGJJJmIRRMSQLsdzkFCqVrG/5GspvJZmkRqp1a7XS6nN3
Pp+tmiSjaOjBokhKQzLfpOmbLOnXKAyh3CS3/a7zer/e5/34fftnj+fjnHNd
7+t9f13nfDp72Jh/3t0sLS3t6iPT0oK/m5684ZWfej3kpQX/ohXervZHTZ83
gNxQ4e1ftrHvFXeQH6rwml04+5Qdw8lehdf6hV6fTRpN7l3hndc5fXnbYvLS
cq/ryrrxb0wnf1ru9btiTveCCDlvnnfnmhtbNJtH3lbuPXDNsR8vWUxOr/BK
a//95A3V5P3l3o4Pfh24ZwW5psLbN2D1mbNeJ5dVeD0Kvqg/5x27f9Cepx/b
8AG5utx77sDWm4Y12PW1D5VnNv/c5G0VTPgtuaTcK0x+N+XaX8jNy73JwYL/
JheXex+es/O3aenjhPPLZf2tyNdXeFOv7XLnmtPJWeXef24alpHfgby33Dt/
cOKtXzrp8xXewyOdRLnjwvE/Kv763M49yPXlXqD+D/qOC/X1TlbNg4W3kCvK
vdMvdhb8H3Im9VlITiv3HBVd8yA5vdwL1LVzMrl1uff7NCfALJPXaedfLRM2
vpMmfXkluaxc7POU3X/G7cOv2v08uaHce+Wnv7YVr1J9lHstAgdaT65Oec88
tiGrpo5cWe4F6rpxK9lPyXg7TX6M9wV5ZrmXF1swutUP5EWU75CNB/majRcu
4HqPGx/ej/WeTG5f4QXqOfYs8vCU6C+b7PyhvzNf10vIfrn31R/PHth6FXlb
Suxxw/hQv0+58PqrP7k25V21++bYgnxyYco7zan3omHk/JR3MNs5xH3kUfSX
ceSKlOdGT343jVyT9ILll5aRW5R7gftkpsaH9omMchI+Ru6YEn9+mvxpyusZ
KPSF8aH92jl3HrmaPDjlXR8M8Ca5KemdHQiwidyYknj7iLw05Z0169sBq/+X
nEN7NpG9lOj/gK4n6QXqLfqDfFlK8sGRE4Q3pCQeWpL3pbyqNs7BM8mLUt6b
zryvnE3OSXmfTXIBeiH56pTkq8smhPbA+rqRM7m+XmTnj9Uu3c0ZQF6d8t4b
/8YTbe4gr0yJfw0nt0+JP4xWeZPemCCBTCA3JMV+08llKe9n575fzyVvS3r5
QYKsmBCuH/loMfnTpOTjZeQ86nuFyYP4WUP+MyXxvWFCqF/Is5kcTYk8H5t8
QTr+olHXm/QWueEe/EbHS4p+fiLvT4p+/iK3SEk8H10cPo94ySDXJ8W/25Az
UpIP25GXJr0ObnnXXVQc6mPz++7f5cWhfYJ0ertHrkxK/r+R7OLHPR0ZNZBc
53uBe/02mFzC+BhBHpX0AndsUUQuSol+J5K9pBe475ml5MuS3kUvPf7Dsih5
Ctczn9w6Kf73BLkgKfH1LDkv6WUEBn6JPDzp/enSxU1ryf2S3lKXbj5+x667
apA9eAu5Be3TQD6UFP/9nLw86aF+f0t2/of8+IvJi/zzN3kt9ZE+Udj518TA
oVuRsxnfp5Mbk2LfDuTqpOSvTuTcpNS73InhfKif3clZSe9v5+7n9iU3+RI/
g8g11OedZOc/Ab50D/mhpPQfD0wM9YH8Msmeh7/PJJclpd+IkZvTHgvIGUnp
B6pMPtSH52w9gbk3vkx28YN8so5cQntuJF+flPxWb/Ig3naQZya9xW64vnvI
OfTvfap/X/zhIPlnPn9Y2Zfnj5lEe/jyfCvyXl/mb0uu8OX5DuQSX+S/mLzI
F/lzJ4XjY/09yM7/UX/6kpdTf7dMCu1b6dyn9k5yni/6L1ROSnw/QC7zxX6T
yRm+F6TLlTPtefQ3cZMf9WqBXYf/PEmO+pJfniP3873AnFkrye2T3sJH3b91
ZJcP4L/vkut9720XXol68jZf8sEn5Cpf+sk9ul5f6tF35PSk9LsHyYN8ib/D
5KW+5KNjJgvnM35bKfve91OcgtpODvWB+O9ArvS9oN25+WJyGv0td3Io77su
/XbvQc72Rd99yTUJ79Lg3y3kHF/y153k5dRX4eTQPsh/D5Bb+NLvTSY7/0S+
mDk5tAfqQWxyuH7U7wXkmb6st0o5Ket9zvSBfull8iL65zryKN8L0tvajboe
+ke9ybfFpf+nd9h6UJ/3kHNp3316f1L+HiT39qXfO0x2+Rv1OH1KqF/Um1bk
Al/67dPJLn8hHjpMCdcLf+5Edv6L/iSX/Kcv/tidXORLf9mX7PwL/jSI7Pzj
n879vh1CHuxLPbiH7PJToN76oinheuAPk8jNfa93oNBScpov9Sw2JdQX9DOf
fMiXv1XkvbTns2Rnf6fdi3e9RG7NfLWW3NGXfPuO3R+Ey4VbyO1975Az12MN
5La+1JvPySW0x7e2HvjPz8aBOgb8Tc7hfEdPFR7O+U4kO/9HfWpDdvkf/VR7
chbXdxH5aq7v8qmhfZBPPXJ9Qur7jeQC6nOgXQ/al8hgGy9wl1/vJmf6st8d
Q44yfxdPDfUXuFOXGVPD9aF+Rsj59Jd55Ot96c8Wk1f60k8vI2cwnlYYS384
NbQH9gcbpob6DbaL0zer/nyJh+02P/TfODW0P/LN1+R06uMncnHC6xMk3D/J
DQmvZZCAjpxG/SW9U4MG7gRyNCnxnkl2/Q/y0znkh3zpNy8ku/yM/c9lZJeP
xwUJqxs5k/WnF7mR8g0g57L/uZ3s+i/E213kJubf+8muXiO+x9t16K+E7PIh
+q055MH0pxTZ9VOIz0XkUcxfT5Odf8K+L5JdfpP9F7k+LvnnTZXH9yYEE2ya
FuoX+6Nt5JK41KNd5N4J6fe/mhbaB/3TfnJtQtbzO9nFD9ZzxMPh89g/tSC7
eov9zikPh/cH7drjZ5FXJ6T/zianJySfXkIuSIh9riK3Z/6+weZDPuxPdvGF
+ngrOS0h/cRQvR6XeB9J9hOy/rF2Hf42lVySkHh4hFyW8H7c6hTkk+sSUr8f
JeezX3qKXBuX/L784dAeiJ9VJh/s/wY5Lyb9UZ2tD/XgQ7KLp/uDgvgJuTnz
615yW/ZD36m8cTnf+VXHY31MKxE+xPmbkxvikp+OIefFRX8t9f44+xPy/rj0
/6eSm+JS79qWhOtDvGSRXb2F/juQq+Oyn7uAXBOX9XWy+eEvl+r1hOTbXHJW
XM7Dri4J7SP7iZLQPtBPT3J+XPJtH5Mf/eHN5NVxiedBNh/8M5+cnZB4HGLX
ke+GkQsT0u+MMH2gn7qP3JH5sYhcy/7ooZLQPrh/InkU759Gbs/99QzycuaH
2brepMgfJRcnRX6fPIj77XnkbfSfhWSXH6GfxeRM7s+WmDzQfzW5iv3scrLr
X2CvFaov7hdesfUjv68ht6A/rCcPZ7+0gVyUkPpSRy6gv202f0V+2Wr6x35/
u+qX9XYn2eU79LuNur6Y1MO9qq+E5PuvTX70C9/b8+infiTXxyT//Ur24lKP
/jT/Qj5Im075E16w3NFHTg/lxX7jWLLLF6hvLcnFcS9Ih8NP0ufjkv8z7X7s
f9uSK+OSv8+2+7Gf70DOj4n9LyA3xcSeF5M1/i4l1zFf5pLT45KfriGvjsn5
dnfy/pjU8542HvbrfXX+uPTzN9v90N8gvT8m5wO3kTPisr8cQnb5YETwb5it
H/uxe0we5Ov7VN6Y1PsiXU9M4uEhcmNM/HWijheT+juNXMZ8N8PkgT/NJrt6
gfoaJedyfb6Nj/O6eTY+6udCcgPtvdjsjf5vCTkzLv1otc7P/LNc/Scu9lth
86PfWWXzoX9fo/qJS/5fb/bFee7bZi/IW2fyQN7N5l+Q90OdLyH7te02Pv7u
JHsxyR+7bT3I93vJadRvEzk7Lv7zHbkq5gXpPftHXX9M4umgXo9L//OH2Rf+
kDYjXB/Oj5qTC2KS744hu/qDfHQ82dUT6KvVjFCfsO+pdj/i//QZ4XqwP8gi
F8WlP+hA9uPij+eTXX5APu9EbmS8XaLzxSS/XUFuiIm9ribv5/yeXo9LPrmB
XByT/XgfcklM9nf99Xpc1j/QrqM+36r6inJ/Qj5E/Q+19UL/d5NdPkE8jlT5
otJvjCH3Zr4ZS3bxg/gqJjv/xfuaKWSXT/F+bDp5dVTywSNkZx/0g3PteeS7
hMmPfqDc7ke/W2nrgT0fV33HZX/1JDmN/vSMzY/1PK/3cz0vkrOZL1aa/Oin
Vpu+0Z+uU3ljku/fIlfHJH9vJLv+F/V7k66H9tmi8zE+tpk+cb6/g+zsg/3u
LrKLP/TTn5Ndvod+vlT90N++NX0hX+8nN0TF3j+bPHgf+hvZ5WvUl7/ILr+j
X21WSn2z3h5dGs6P/clx5MaovP/KKA3HR747mZzH/HyaMvvRM8npjIdz7Dr6
8fNKQ33Dfh1LQ30E6nkix+RB/9CFXMb83ZXs/BnjdSPnc7zrTF7I14vs4hXy
9SO7eIR8eTYf/OuW0tB+OC+8XeePyfnHnXY/9HcXuTf99Z7S0F7oD0Ypx6Q/
LCK7fgXndeNUvqjYd5KOF5Pz7Wm2HpwflZKruT+cretn/YuavPC/JDmX8TnP
7IN8t9DkQz+32BjxvsTsh/ioJtczfy3X8WNSP1aof0Wlf1tFzolKPl5DTuP+
Z73ZA/Z6W+WLin7rzH7w9/dNv6jHH6o9IhI/H5ErmS8/UX3FpP/bbfbDedAe
lScm5/NNth7kv312P863Dpg+0e8dtOvw39/J2Yyvw+avkP+ImWTaM31muH7U
mxZkF384vz6R7PwB++tTyIXUf5uZob2R784iO3/Afrudjkf/zp4Z2hf5oSO5
lvmms47H/fHlNh/OG64kO/+Bvq4lZzO/Xkd28Qx79yb7zB83kXNi0r8OsOuo
Z/8iu/4f/czt5CbWx/+ZGdoL/e1dZFcPcJ5WSK5jfbhf1xeV+R4gu/4E840n
u/4D8TGJXE9/eNjmw/pKTV7U9zKy8ze5jaz9QlKfT0g8ztfno3IetVDlicp+
7Amy83f0f0tUH1Gp59XmH9gPLjf5UH9WqL6i0h++Yv6G/esachHz4XpyDePr
bb0/KvW7zvQz36Xbr9636+hHP1R5qe/t5EO07yfmv3j/s5vs6gfWv8fWg/zR
pPqPSr7fZ/6C+nZA7ct4+cX8Dfnqd7M/+q3D5q/IL0fMCteD/WO6Mfy7xaxQ
3zh/PZFcSHucTHb2R35vMyu0N+Q5c9b/l6cduZ79b/asUD+oxx3Jrt5AP531
fvpHF3IO+7Mryfk8T+ym15lPriM30F69yOnMX/1UvqjUtwEmb9DexG6x8ZBv
bie7fhT7mzvJZczPd6m+YtLf3KP6ikr8jCK7fIN8VER2+Rr2HEd28YP90UTT
N/af08gufpE/Sslp3A/MNvkgb5ScTXl90yf69Xm2fuSXR81+sPditW9U+oOn
bHzod5naLyL7o+dtvch3Naof7mdXkl1+Rz5/jVxN/3zD9Il4eUvni0q+eFf1
F5X90ibTB9431Nv90P828mquZ4fpC+vZpf4QZ/9JdvGH85kv1b9i0l99q/rh
ed4Ppo+xwYHQz+ZfiP/fdH3c3/5l+kL/0OyRcHzUy6MeCceD/x9njPp2Atnl
d+Sr1uR0rjeT7PZvyJ9nkF1+Qz92NjmT5w3nkjN4vnoB2eVfxPPFNh/6+0t1
fNo3l1zP/Hs12eVbxHt3cm1E9NGT3Mj46mPj4Xu3mx8J7Yt8MND0g/cd+fp8
VPx5MLmO+WsouSAq+5W7bT3Q10iyHxF/H23yIp+MVX0y/09Q+bkfn6LPMx+X
kLNZH2bZ+NDnHHIO+7O4rQ/xkjL9oR9ZoPaIyn7/MbMf8lWVrQ/6XkrOo/89
a+Pj7wtqP8bbS+TCiLyvfFXljUl/+Lr6W1TOB2pVH9yfbiBXcn/4HrmB+Xsz
+RD3w1tNX/Dv7WTtx3eaP8Ceu83f0I/sVfsz3pvMXtgff0d29RfnFwdMfuTj
g2YP9Le/6/Os94fJLv+g3zliNu0d9QL3vyp9djg+4qvF7NDeOP89cXaof3w/
cjK5gf7UhlzF/cuZs0N7Iz7bzQ7tie9zzrP5kK862nzwxxxy76icp3UhO3/B
9zFd/+t6Nxsf13vY+lCPeul8Ebne157H9TxybkTyxyCdj/3gbWRXL/H8EF0v
nx9GXs3rI0xeyHcfuZHyjSHX8fpDOj/XXzw7tBf0M9XWA/1N1/VGRL+PkF3/
Av3PJaexv0qQs2i/crLLt7BvJfkQ7b+IXMP3X0/q+ug/T5PLIrJff87sCf97
gVzIevWy6Rv56lWyz/OftWr/mPh/rfkD8t07qq+I9LPv6fpjsl/5QOWNyvnm
VnIl8+nHtj7s53eqPtgvN5o/Y3++1+RFfviaXByVfP6dPY/94I+mH+Sfg2SX
z9Fv/WH+g/x12PSHfuGIMsofkfyXTk7T/SG5kecfJ5aF8qLfO7ks1A/6qzbk
1czPZ5Jdv4H6347s6hH62/PIrl/BeVdHci39NUfv536/S1moT/hLV3JRVPyh
G3k/+9ke5AKed/RSeaNiz75k1w9iv55HTuf5yyCdL+YFx3etbysL7YN+Y4jN
h3w/zOTB+90Rdj/OY0aafqHvMWSXv9CPjtXr3H8Vq314PjClLLSvfB9sz6Pf
mmX6QnzPJbt8jPcncZsf+ion5/D8cQG5kPV+kcrP8/sq9Qf2v0/beNh/PkvO
pn++YONDHy+pPFHxv1fsefQ7r+v9cfGv9WTXL+P9wgayT/+pM/9BPtxMruZ6
PzR9Yr3bbT2oZ5+Qs3S/SNb3zXv0+bjYv8nkxfcl+9S/Y/L3gMmL/eov5k/o
735Tf+P+8m/1F+5Xms0RbuB6jia7+oD1HEcuYb+VMSfUJ/JXa3IV3z+eNieU
D/3+GWTnr9gfnkMupr+eS87n+fAF5Ky4nM9erPLwfOJSsrM3zvdyydWsF1eT
a6j/7mQ9T7phTqhP9Ct9yHXMh/3nhPqCPw0kFzCf3Ton1C/y1R06HvvrAlsv
9Dvc1ov4uJfcyP3Z/bp+7t8eJOdE5bx/vM2H/myy6p/+8LDaj/5dqvIzf5aR
Xb5GPEfJtdRf0vSNejpP7R2TeraQ7PF8ZbHZC/VkifkH+s1ltl7kn+dNPpwn
1ai9mF9WkvOYj19T/4lK/V6n9qd+3lJ7UD8bbb2Il012P+rTFtMf/Os/9jzs
1WD+jPj+1OyJfuMz9be41Psv7HnU429UfvrP97Ze7I9+Mnsj//5q82G/8IfJ
j+9/0uYKZzCfNCdXsf89hlzA/Hj83HB9qN+t7Dr2a6eQq3n+0Ibs4gP7/bNs
fNS/duRa9jvZ5CzWr44qX1T8sfPccH3QdxdyZUTO77vq+BHZL3WbG64f5zs9
yK6+ov/qRXb1Gt8T9SWvZv+SZ+vBfIPIuXyfma/yR2W+IaZP9LtDVT7mhxE2
HvYrI2192L+OMXmgz7HkTObXCeR87henzA3tj3gqIefQf2fp81HJ93PUXqxf
cWP4S8oY58HzTR/I14+R03i+9wS5mOcrS1U/7B+qyfXsx5YbIx5WmH5Q31eZ
P2D/tMbGg77esPXA/95We0bk/eO7ZNfvwt83mb4Q7/Vkn/32NnIh42uHyQP5
d5m/Y7/8mT7PfvBL9W/ub74xeZHPfjD/xP71J1sf+qlD5DKet/9p82F7mxYJ
14P+8MhIKC/qyzHkIubrlpFQHvhPK3IO+9lTyFXMf6dHQn3AnmeR8yJSX9tH
Qn0g/2eTXf6F/3ckN0Sk/+1Mdv038mkXchb341fqeBHpp7qR03ke0UPlZzz1
IjdFpN72JVdHZH+TR3b9OfLhILL2o/nkXPrbELLuF4eSXT+PeBlBds/J95OR
0F54vzNa9c/xxqr+uP+dYPrGeFNMPoxXYvdDvpmmP/jTHNMv9qsx0w/WmyI7
f8d5ynwbD/G1UMeLSj/5hOkf+WGJ3Q97VNv6sP9a/l/2rVGOSL5ZRc5kP/Ga
rRf+8obpH/nyLV1/VN6HbrT7cR62iezyAfrzLbZe+PM29VfGd4PpH/3Zp2Y/
nJd8Rk7jedAX5r+It2/Mn9CvfG/6QX34UfU7V+rfr+ov9K8/yMX018PqX6xv
zaOh/Ni/pZPTqJ/jyS7e8P3dieQCnn+fTM7g+USbaLhe1KczyfXsb9uRi9jv
nKcckXx6oV2HP+aYPPCfy3R+fk+SS+4dkfPda3R+5ofu5Lq5Uh976npjYp8+
Kl9E8ld/cg3PwwaSnf+iHt2q6+X70ztMHvhvATmX70OGK0fl/OFecibr5f02
Hvq9B8weOI8Zr/PzPHGSPY+/D5u+kH9K1V4RmX+2rici80fJ+5lvfRsP/llB
9thvPEpu4HnJ4+RKxu+TNj/y6TO2Xuj/OXIt4+NFWy/q98tqP/aXr9r48Oe1
5NXMv7UmP86LN5CrGJ/v2Xjwv83GiKet5Dzu57fb+pFvPrHx5XsBux/62kOu
pr6+IhezX9qn+uP+br/pA/3ez2ZP1LPfyC5eUR//Un1FpN9pxn1sFr/nOorc
m/vPY2OhvWDfE2Kh/eHfJ+n93G+dSq6jftvGwvWgf8giF0ekf2sfC/WP+D5f
749If32RMeKhs95Pf7g8FuoP5z9XxkL7ox+6llzG9wHX2fpQP3uRNR/1i4X6
w/ry/mt9g8haz24jZ3P/NcTGQ/4aSnb1E/E2wuTF+f5IcjrtN1r1Q38ba+tH
/z+BXMn3q1PIRew3SnQ8vv+eSXZ1Au8D55BdfoW9Y2Yf9CdJci37/flk1y+g
H1to/oD6vpis7xOXkJ1/Y7++zBjx97zKH5HzuRrTD+rjSvVH+v9q0w/6x3Vq
T9bnN+1+6Psdswfyy791/rlSrz5QffH921bTD/rJj01eOb9Vf4pI/d9NruJ5
wl5dP/vZJosP1MN9pi/Y84DZE/vnX/Q6+5/f7H75PZvFE+zfjN/ZunqHeDiK
7HP/elw8fB756QS7jr+tyS5foJ5l6vWInCe1JR+if51NLub+qgO5kOdP59t4
uL+TzY/7LyGX8P7LyQW8/ypyNt+fXhsP9Yv7r1PWOIyH9sJ6+5EruT/OI++n
fgaR9bzlNnIR909D7HnUm6Fk51+w1wi9znw0ktzI78FG63wR8Yexph/4zwRy
Nd8/TjZ9wt9KyE3sp2aqfBHpD8vIWewXYmSXv5BPk6Z/7E/n6XojPD8iZ/D7
ncU2H36v9RQ5jfG4zPSPevS8js/z5hdNHsT7SlsP6q1+B+7iFvl1rd4fkXzy
ps7HfPyO+Qv2n++Zv6Kf+4Ccx/5nq+qT9Wy72Qt/d5JzYmLv3Sof7beHnMl+
/iuVh/vJfeQ69oP77Xl8v/Cz6Q/6/c3kR/76y/SPfPePRLhe7KePSoT3Q1/H
kt2+Df1BS7I/V87TTtLnub86NRHOj/x+uj2PeMpKhPbB+tuTC/m+Kptcw/6m
I7k3+8HO5BLW6y7kXObjrolQf3hf0M3Wh3rZQ+WPyH6tp8mL/qyvjYf13EzW
ejWQnM38kK/ysp8ZTK7n+U0BOYPnQcPJ+9kv3Wvzwz73k10+xfcGD5ALWP/H
mz6wf5hkDP+cZvKh3ys1eZCPZpv+5Pe5pm+c/yVsPYjnCn0+IvFZaQz5FpEb
2F8/afJjv/a0yhORfvhZex7fM71A1n7wJXIR69sr5Hyeh6whr2b/tp7s+ifU
87fNfrDvu+pffF/2vl6PSLzWk6u4X9tm9yN/Npi/wP92kXP4/cRnpi/E0xfm
f9DHN+Ra5pPvzf/hTz+aPKgHBy3+0G/+Yfej/z9s/gB7/YO/e6/meWRzP5wP
72OO8kN9yve2ZBePeL9yrB/qE/WmBblG6sV7LY0Df/s+g5wu+eekk/R5zney
H8qH+U7V+6U+lpzmh/YK8s3S08m9GY9nkLPl/cS+s8j5sv4Tz/FD+yK/tbf5
gvC97Vw/1B/8IZvcJPuZqgvIxdzvdLT5gvdJTZ380L7I751t/uD9XM6lep3x
1IVcKOcLE66w8YL3kQu7mn2wH72KXMd6eI2OL/F/pGfj4bynh8mL89zr9Xl+
f9tT7Sn2T/UmZ8n7mVV9bL6g32nop/4h+6Pf+5s95Pflpl+czwxU/fJ7z1t0
POaDW83+iJ/bzB6BvJvu0P+XQfLV90NMf7Bngek3iIfLhpl/BfuZW4fb/fge
coSuj/1LITlT+ul1I83fgvOAxlEWD8jXY8hp/F7iAbNP0A/0HGvj4f3iOLIv
5+9zJ+h1fp8xkZzB86jJGi/yvdz+qSYP4rOEzO8BLpth9kF/OVOf5/vaR8iH
ZL9TWWb+IL83IldKvH0aNf0H/v9n3NYH+yZtPuSzcpMv8Meh83Q8+V5jxgKd
j78vetTmQ/w8pvLx/P5x9Ufp546uMvsF5fy8p8j8/U7vpervcfST9z5j16Hv
ah0vjnr+/HMWH/Cv5RavyBcvqP7i2H8dv8LsFfRjnV62+dA/r1J7MJ5eVX3x
+9rXbLzgPPfF11U++T32lnXqT/z/IdarPvh7u7fU/+T3djkbyMv5/zNsVPn5
/3nUkTsm8bz/b81nSfk+4H3yWnl+ywcqX1Lmr9d8l4T8J/yHvDIp59EfaT2Q
/3+x/8d6f7msf4fqpwL78fhO1d886Wd3kaPz5f3JbnL7BaL/z8iLKiV/7iVf
XSn92JfkikexP+/TpPMt9P4PYFRHHQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=110\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779823911875054*^9, 3.779824096247034*^9, 
  3.779824497416174*^9, 3.779824698320319*^9, 3.7798258448937807`*^9, 
  3.7798268230570855`*^9, 3.779827087188255*^9, 3.7798972584140053`*^9, 
  3.7798978628495054`*^9, 3.779898228730362*^9, 3.779898541365323*^9, 
  3.7798988130246887`*^9, 3.7799005225086107`*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"415d67c4-99cf-401a-9c23-777ff33971e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a120", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0120.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa120", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a120", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Green"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=120\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798217342006607`*^9}, {
   3.7798239024972315`*^9, 3.7798239040429835`*^9}, {3.779824100542178*^9, 
   3.7798241007476625`*^9}, {3.7798245018764954`*^9, 
   3.7798245030464582`*^9}, {3.779824590614067*^9, 3.779824593930002*^9}, {
   3.779824704916565*^9, 3.7798247059269695`*^9}, {3.7798268262495775`*^9, 
   3.7798268263404636`*^9}, {3.779827091533489*^9, 3.77982709554519*^9}, {
   3.779827338083692*^9, 3.779827338233097*^9}, 3.7798978584927244`*^9, 
   3.779898223730757*^9, 3.7798985472155323`*^9, 3.7798988173036194`*^9, {
   3.7799005275477858`*^9, 3.7799005281631055`*^9}, {3.7812186328649826`*^9, 
   3.7812186333608155`*^9}},ExpressionUUID->"0b859470-e59b-42b2-88c1-\
8cfb50f36e6a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=120\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798239149900765`*^9, 3.7798241013091288`*^9, 
  3.7798245043094006`*^9, 3.779824596579607*^9, 3.7798247066112165`*^9, 
  3.7798258476278315`*^9, 3.779826826791891*^9, 3.779827096481406*^9, 
  3.77989726088264*^9, 3.779897859226427*^9, 3.7798982244498973`*^9, 
  3.779898548520299*^9, 3.779898818034872*^9, 3.7799005291745853`*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"7baec4a7-a860-46da-ac4a-79d28b04c2e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a130", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0130.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa130", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a130", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Blue"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=130\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798217400655785`*^9}, {
   3.7798239071067734`*^9, 3.779823909450594*^9}, {3.7798241042529173`*^9, 
   3.779824104436427*^9}, {3.7798245097412415`*^9, 3.77982451672768*^9}, {
   3.779824716406613*^9, 3.7798247224855857`*^9}, {3.7798268308170595`*^9, 
   3.7798268309619875`*^9}, {3.779827099669692*^9, 3.7798271029291935`*^9}, {
   3.779827342191512*^9, 3.7798273423955956`*^9}, 3.7798978556455607`*^9, 
   3.7798982158111467`*^9, 3.7798985551489935`*^9, 3.7798988223948746`*^9, {
   3.779900533860386*^9, 3.779900535396098*^9}, {3.781218636513181*^9, 
   3.781218638680091*^9}},ExpressionUUID->"e4fb2bda-a674-4897-bb49-\
203ea7269fe2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
bPJf5utT3XWx/0C4C707E/bCOm+fs8hfj8R37iLf3qIPeXBFSPVmCGz0SObj
Sxf5/pTzhl/B7djrSjgXfb3a7Uf8PRruRT9+A+8Laf96I7yVevY793zpZ26F
p4S0Pv43fCCk/e3v4f0hPU+bAqehB3e5++V99zr7y/tmwgPIjzluPbK/++E4
+1sIl4a0vlc5ln9r4DzsGbKfD2k+1sNFIT2PSsCDwjqPtcJrgtr/rXTPl3q+
Bj4U1HmwHa6m/qxz/pL+8Bm4O6Tz6wbrr5Dq4fNweUjj8yW4I6T1u8vGV9Cr
N3L74VZnT+lH34Q3kc9vueeJvd918Srf/+yGZ7D/PbDJd9GPXjgzpHq/z8W/
1LfP3f2SL185/4tefWv9GdJ+64h9Hvpy1GL/8zI/psPJkMZ3BpwW0vPXk2AT
j+KPUxb7/hB9HwhHWM8Z8C7Wcw6cEdL+NxfuSz3OW+yvX+wzBDb9oNhnmHu/
5PevYKM/Uq+Hw3H05Gr3fvHXKLvesOrXWHh0SOvbjfCikJdqb2pugk0+i97c
atcT0vnmdng8+vx72Atpf3PnYt9/kj/T3HXRozJ7Paz+vA9eE9L5aLZjmT/n
wya+RT8WwlUhnQeWOPvKequdfWW9QetP+vUonI++NMDT8HeL86/0Byvg7dh3
tXuezEePwUYvRO/WOvvKPNsB70XP/+rsLfH5HNxJvrzorotevAKb/JF5aQu8
NqTfN3S794v9t8MHgrqfd+AK9vMeXBii/4RNPZbzmX+750t/9QmcTn39j4vX
6akDoQNwB/n/DdwbVP98D2eHtH/o86Cy0V+pl8fAB4j/Ex70/SH17cQH/c+L
Xg2AC9hvFmziX/TzZ+669GNnwTuCet5wLmziWfT8fHgS+XwxbPoD6e8vgXuC
6t8CuAv9LYTzyfer4K1Btce1cGdQ8+s62OSD/N7tBrhvSPVgHGz0R77vGA8f
Dmo8l8AR9OsO+7ygzit/cPsVe02FM4n3u+FC9GQ6XBVU/Z/l7C/1tgIejx5X
wjlBrQ+L3XrFnkvhrJD2Z7XOf5IvYWcf6Udibn0y7zfCFUHVqyQ8KKT2XgV3
EH+PwLnU38fhKUHNtydhE4/yfeVfXHxIf/g32NRjOR/YaOMhqPPpJnhsUOP3
VXgA/nrN+Ufm4W1wZVDj+y1nT8nnnT/y527nP+lH9sL7g5rvve55Mh9/CncH
9fzic7g9qHp80D1P+ttvbTwTD0fg8qD2O0ctUd4U9FLhf3k6XEx+Zbjrcv57
kmP5/cgpcEdQ42kgbOJF5pcz4KFBzc9z4JKg/j7nvCX+ekSv8hxLPObDkaCe
pw2DTf7J72Mug/dyfThcwPURsOmXpB6NgrdyfcwS3x9yvQjui34UL/HtL9dv
cSyfnwDncH0iHOT6ZHgR6/uTe75cvwdew/UZ8Fr2X27fF1D7zIOT2G+BW4/Y
90H7/KDafxls4kP6q8CP/FcHG/0S/8ZhE3/i/ybY6JecL7fZ/YY0fh5y9pV5
/VG4jPh73NlD6tVTzv6iV3+BTT5JfHe69Ur8b3TrFb172flX+tlX7eeDOq+8
Dhs9k/PNbS7+RE/fho0+yjy/0z1f+uUeuDCo8/leuCio+vARXIGefwrvCuo8
+IWLb9Gfg7DRD+m3voNNPop+HbH5EtR+4agq5e3oXzrcFGQ+hPtSn0+Ch9Lv
nQIXB7W/Gljl21/0+Qw4l/p/DtzNvHFelb9+Oe/Kg1cRr/mWiadh8Ebi5TI4
m3gYDk+j3x/hPi/nHaPgSuaTMe66zOtFsIlP8VcxbPQ8dXw34Ba4KqD9xgR4
AHo/ETb1QL7fnQwb/ZDzmKnwDux9D5wZ1H50uvOHzF/lcF6Q81F4NPVwAWzi
Q/qtxZZDmt/LYFNf5PuTWngQ9qqDR4Y0P2JwkvhvgtcS30lrv6D2vw+59cr8
+Yjzv8Tn4269Yo8n4VLi7xnY9jt/c/aW+HoeNvou3y9sgsuJny74AHr4GtzB
ft+ErV68BW+inr3r9qfzovO/zG97rH9C6v9e2PT/8vuSfdY/9AOfw1nMq1/B
1UHt775x9pJ8+cHFs8wrfZYqT2M/x8Im/2Q/J8Bbqa+ZS/31iX4NWOrvR+L5
p3AV/f7PYFMfZD48Gzb6Kv45194f1P77fNjoh5zPXgx3kd+XwCZe5HyvYKlv
X6kXhbDp58X+V8Hl9NvXLPXtIf3KdY5FD6+H24mncUt9e4qe3bzU95fo1W3w
UPrrUvs+7DsJtvXvj0t9+0u/ehds9Enmtz/Dph7Jef9MuIL+bC5s4lXi4X53
v8T3Qjg3qPpZ5ewh+VztWOwXcv6Qehp18SD1LAFnUI9a4NHUk5WwqYfSb66G
O9Cfx+x6OE9aC5eiLx3u86LHf3X+lvr9rPOv2OdFuAj7bHb+k3zZAnvUpzfc
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
ND7nO39Iv7cQ3lirerQEtv3Lcrsfzv8Cbr2SzxE4j/yMw6Yey/qa7Hror9vs
/pjXHoJ7OX96xD1ffs/0OJxWq/Z7Es6gvj0Dm/5dzkM2OJb+7XkXj1LPX4K9
WvXvKz+K163wFObtbne/1KPtsNE70c8dzr4Sf+/B2fRT77v9Sz594OJH7PGx
ix/Rk8/s+smPL2z+1Wo9OOjsJ/3md9Y+nL8ccc8Xf/1X0F+fnEf2Dfr3y/cx
x8AmXvX3tu5++X7leHg983cGbHRF5K4fnKnx9lmmvb9W9Ofkk4O+P+R9p8BF
zNenBX37p/6p/KnlWtGbVafDpr6Jv34G92j87Dsz6Nsjtf+TzoYL+f4hBzb6
kErfW86FS4mHXHiNno8lz4fL0LM82ORf6vuk3oucPUTfh9j96fdz+ZfAI+ln
hrn3pfqpWb906019H5m4zD1f5tHL4Y3Uwyvc/an8P9qzfRDnPSPc++Q8dyRs
8kny/1rn35T/w6Pd81P2efo6OK79zg7bpwR1Pvr2esf69+VwLucz42D7fchN
8FD04GY4m3nzFjhD17vltv+/3s8mwE36/exJpTa+NB+GToSZZ26eBG8P6u8h
J7v3iT5Mgbt1Xn92Klyl5wE90xyLXt8Db+X8+F54ks5b106H9/L94n3OHql2
fdksGz/0i7Nhj/OoufBh/f54/zy7Pr4vqLR9Ivt9wL1f+stFsOlv5PvaB22+
aH8Sr4Lz6EeWwZ2ab7uqbf7qfHO41tqL39OF4AP8nqnOxXcqHu+IWv3Q38c+
EHP7kXmgwcYz5wWN8C5+39YMj9XfYx+btPETlv73vBVwlv7eerTt++kn//iw
3b9+37FsDXxIf+/32KPwDP197ZZ2eJD+HmTf4zZe9Pe8P1ln403/3uyip2w8
8Pu+p21+8fdqf7HvC2t/8Vc4on9P+cTfrN5EpF698az1X0T7leetffl7/Bft
evXv9fM32XiPab3bDJfw/5/pstcb5PPBv1v/JfT3AVutvRv0/a/b/TXq+7ut
P5tl/Sf+A57SqufR/7Txr///xevfhsNtuv934JkrZB6v3QnPWan97HvW/w/p
9ye7rV6tVvu/D7/7sOrnXuv/R7Uf+zf8u8dkPr+uFz7/f7z/AxwTW4o=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=130\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.779823917748723*^9, 3.7798241049695864`*^9, 3.77982452002942*^9, 
   3.779824725183708*^9, 3.7798258507563477`*^9, 3.7798268314467297`*^9, 
   3.7798271034585705`*^9, 3.7798972637612896`*^9, 3.7798978565648346`*^9, {
   3.7798982164457817`*^9, 3.7798982192684393`*^9}, 3.779898556315276*^9, 
   3.779898823364363*^9, 3.779900535999465*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"5473d482-eb65-4133-809f-421b97c0ad22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a140", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0140.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa140", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a140", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Black"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=140\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.779821746521463*^9}, {
   3.7798239236169343`*^9, 3.7798239274284887`*^9}, {3.7798241088937197`*^9, 
   3.779824109067521*^9}, {3.7798245257751937`*^9, 3.7798245315773206`*^9}, {
   3.7798247309964237`*^9, 3.779824738582059*^9}, {3.7798268352489777`*^9, 
   3.7798268353943367`*^9}, {3.779827106566886*^9, 3.7798271100530443`*^9}, {
   3.779827345868893*^9, 3.779827346052512*^9}, 3.7798978529567623`*^9, 
   3.779898212129872*^9, 3.77989856248545*^9, 3.77989882767143*^9, {
   3.7799005408766394`*^9, 3.7799005418051205`*^9}, {3.7812186419287677`*^9, 
   3.7812186424508905`*^9}},ExpressionUUID->"04f701a3-c8bf-46e9-9171-\
a471eccc371b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnHt0VdXVt/MiKmqqEVFTTDFq0FQjggYbFXGLCBQoQok1IvgiTZFSxFgQ
AkYMECBAgJxrQi4n9wuYT0GDpRQVFTEKYqQUUfAlFtSokaIioqJ868z5rLPG
qP8wnnHO2XutefnNOdfe8Yopj/7+T93i4uIGnRkXF/13Z83dL3wzfLYXF/0v
YZ33YcpZC0Pj4K5m71jTjlG/eQAesc7rdt2yS97PhtvWeb2eGf7R/Jnwreu8
awb0aEnKhSvWebe0ts15aaHlZm/0b5bfOXklfMk678Etv43vFoI/aPYeu/3c
9+oi8FtN3uJtb9Xc3Qyvbvbe3/3d+MMb4dxmr2vc5j5L/gEPafaGTP64/crX
4Q1NXubhhvLtu+HdTd76r/b8bsp+uLHJ2zo7kNj93/CYJq9n9IZfwEebvGm+
L/Pu+Bbe0+Q9Ed3wz/CiRu/dKw98v6DH49ivWfffE45r8p68Y+CDWy6DOxu9
f/5uSkJWX7hnk/friWte/bYfnN3kPTXdrCgDbm30/pX72dUDhjiOmn/3KLi0
yXs9ecNfp90L/77Ru+wG48H/hW9tVHtOg2c0eoZybv8r/EOjFzXXgSfgPo3e
DwvMApbAOY2esc4fzl/j1mtW06OlFF7RqP6phSsavV9NyL7t0NNwbqP3wjc/
7c3dBBc2evHRAHoZPtrgNZZvT97QBuc1elFz/XYPnMX1DsDncr2P4dkN3thV
JTN7/gee0qDrOwl/0qDr6zaH9TXofs+DWxp0vxfDuxq9qHnOvRye0KD2S4WT
G7wxxn233Ai3N3if/rjuqz23wT/Xqz/uhrMavFqTXj+Ngb+u9247dM+qkix4
a4P3S2Pe66fAPRq8E6kmIP7ifi/x8jj8Vr1nru77cgE8v8GLbn9xITym3ouG
T6IfXlrvrZxhVlgOH6zXeG6A8+q9YVGDPuOuf5UJ5+mb4Wn13tDoBV6BZ9d5
V0QXsNPas07z7V/wlQ3e5Uu+GLf5/+D4BvVnJ9xcp/b/yn0eNW/Oj/DQetWD
M+cqr6/XfDgfzq73qnubAE+E/XXeK8a9L1wxN7bej+abBL0O9upVr9LhOPY3
GH6pTvc3HP68zms2crd8HPxznffmnJeqej8A31qv8ZUN767TeJgJd9V5j0YF
ZC58sk79txCeUucdN+H72Qo4t87LigpkEN5Sp3oUgbPqVI+b4Bux90Y4s07z
Zwv8Qa3m93Z4Eet5G55Qq+t5Dz5V60Xl+OMOeF+tV2Eu99fP4Y5atc83cB/s
85O7v+Tz2bnK/1er+ZIA76nV+O4NN9apHl4Fj67z+prt3XU9/Fat9/Yu89/N
8OZaLyqnEzw4WKv6/1s4odYzv145Yzzcr9aLhtf3E+HEOs2PqfCKWi8ajvE5
cM9ate88eEStFw3fPovhvFrv+ucq/9NUZH9fo/sJwyNrNf6qYH+t5tc6uLTG
S4g6+Dm4sMY7ZeTid1vd+uuN3Lz3Ojyl1jPVIHXiO+774p/98I4ajd9/w2fV
elK/v4Cn1ao+fgvPrFX9+dnat0bt0WOe8vYab140oHvC+2s0vy+bF7uf+Lcv
PLtG9asf/FKN1rsMOL1G6+ed8Ooa72cT7lePgqfWav5kwkXY80F4W40Xxece
hvNqtP94DP6hRvVlvr1ejcZ7Adxeo/3GKngQ/ihx+5N+oNpdX+rDenh9jRd1
947n58X8J3ryItwNf+6AJ9SovrXb+9Vovr1v11PtRczlRh2Gr6zR+O6CryYe
TsDn8vvTcAe/P2c+9q7W3/ecH/u+3D8J9vP7vnAK678BXlSt68+YH7Of7H8I
3LtG688o+PNqtd+9jktN+Gx7EJ5RrfafBh+s1vx+DJ5Qrf57wl0/KpetBe73
0t+shguqtV6VwNlVGj81cHq16st6uEe1F3Vncqvdb7VXttb89yJcVK3x+wac
Ve29ZtJrTTt8vEr14AN3f+knD8Op1VqPvoTPqtZ+94T9vErz7zQ8p1r16Jwn
lIdWa/72hLdVeUfzjIGS4F5Vmv994faIF2137rnBfV/9BRdUeW8Y+b1zCDw5
ovYeBZ+MeDdF/7sXPlWp+vUgfDyi9poGe1Wqf4/BwSrt956A46pULwrgtGqt
B6vgIdVav0vc9WS/1XAR+13vPpd+6Xm7/iryC06v8qLytnWHs4fERzucVOW9
Y+S/4X14a5XW58PwkUr1bxc8KKL/noBzI9rvnYa7IlqPe+Qpd49ovemZF7u+
9NuXwUURzYe+cGlE47kffDCi/UkGXBDReLwT7hXR/nIU3L9K4ykTzqvyfm/C
74tJeTF/SD14GM6KeFHztufACRGNh/nw8QpvRNSgi/Ni9pN6tsp+jn3C9npV
+m81PLpS/bkO3l7pGeve8OFzcEol9cutV/T2dXhypRdNl+vegU9WeieNu8r3
w3ERrTf/hosr1B9fwNWVGj/H4ZyIFzXHuJ+t/Sr0fmc/yfcr9H4XPhmzr9Sn
3nBnpfZTKbDH/q6HkyO6v5vh+IjqqQcnRbS+/xbeX6n2HO842r6snAibfIyG
y3d/gosjOu8+CudHVL9z4bRKLxpOAxfBoyNaP1fCxyo0XkLw0Ij2ZxE4s0L7
6Sa4PqL5tNHap5L+EM6r1PlgO7yh0ouOiwvftvao0HzYB3evVPt3wImVqjef
wW0Vao9v4IIKb2RUcE/BreXe+VEBOnOBcle5d2m0gbsAzqjUfE+EUytUn66E
Kyq037wO3lqp8086bOL18ahgDXafy/qGwwfx1zh4RKXq2QS4o1zz7Y9uPaK/
j8D5FZrfcxbE9iv2y4enVWi/tRw+Va7x5F8Qs5fkZ4X7vehXA3wc/z4L11cw
f8Gd5ao/r8DNFd7c6A122v2W63y0F06v0Hr0IRxfqf3+p3Y/5do/HbP2YD8/
wBvKdT9nPIU/ynV+iocPluu8cwl8pMKLtmuVl8MZFdp/p8Iny1RPb3wqth/x
z23wtHLV77ufiq1H9HAMnFOu9fE+uHu59hMPwSb+Jd+nw+lluv9ZcArx9iQ8
o1zzYSls4vPrPcZAxfDWMq3fa+HsMq2/te5z0fcWuLBc82cTXFCm/n/JfV/6
ozY4v0zrwbvw6DLvkWhB/ACevVb19Qjcvlb7oS+tP8r0fOc7uLRM62Ncfsxe
cv/ucGKZ6tM5cG6Z2u98uGUt/Qm8rUz7/0vhjDKtd0nwWPIlGe5Yq/bvC8eX
6zx3LeyV6/76wXFlGi83wVllqrcZ9vtleh42CG5byzxh71+m9hmWH/OP6O1I
eFeZ9of3wLPLNZ8z4dJyjc8su99yzcdJ1n4VqndT4IJK7XemwtUR7af+Apv+
Ub6fAyfRH8229md+nAcfrdHvL7D2Z75eBA+q1/Usg+vrdf1F9v71uv5ieHe9
7jcEpzWofcrgrfVqnwj8h3q1Zx28r07t3wyPqNP8abH2rFV/bYRnMC+8AJt+
XPR9Czy0SuPhZWsP+qXt8JFyrS9t9nrlGm9vw8llqi974P5lOu/vs79fq/F8
AN5Qqv1uh4sfqYdH7PdLVe8/g4vXar9wFM5fq/3U1/DeUtW/7+CEUq1Hp+Bp
paoHcQuVZ5d60e3OPHNhbD0yb5wLJ5dqfTsfbi/1onKYfRHcXKL6nwgXlOr8
mwQfK1X9vgKOL9V5vi88okT9fy08uUT9eQM8qFTz7yb4eIn6J8Ner0T16XY4
WKLn23fCm0u0ng+Dc8M6r4+C80u1n78H7ipR+2XC/Uv1fOB+eH+JzpeT4M4S
b2r0vylufzKPPQwXlqhe/wUuLtF6nwNnlmg+zIaHlmq8zlsY85/U3wVwWonq
3SK4pUTjaZm1Z6nW1yJ4IvsrhvPCel4XgtNLtH6WwVlh9XcEzinR/q/O7Uf6
0WY4u0TzvcXGT1j9txFuDWu/swn2wtq/b3HxI/r/suVSPc99za63RNfbBm8P
63rfhnuV6HrftfEW1nltn7u//HvA+i+s+nEI3laien/E7Vfs22ntT/x8Cc8o
8aLynvq1tXdY8+mEXV+J9j8/2v2ENR7iFilnhvX8qDs8Oqx6d47lEtWjX8Ad
2Ksn3D+s/r3Ufh7S/L8MLg7rfJAMm/iU/qAvbPwv8fhreHtI9bwffDys+XYj
vC2s+vYbez/8NQjuEdb7e/Z+YdWTu+G4Ep3HR8ImXmS+GwMnl+j+x8PVYa3P
98FHwswncE5Y7f8QnIb9/wTHk4/TnX2l33jU3U/0Zha8NaT5lQsPCuvzmjw4
IazPxxbCXSHVg6X2fmHtB1e49YjerYHbQ9oPBGATj9LvlsKT8Wel27/MVzV2
fWGNp0Y4i/08DY8N636ehfezn1bYxIP0U5vhgrD2py+6/Yjev2r3H1L93gGf
Cmv93gkXhdQ/79jPQ5ofe+GTIT3ff9/uJ6Tz7odwSlj76X+7/Yp9PoFnhzTe
voDz0etjcF5I/X0c7hXW56Hfw6UhrS8/ud9Lv9ptsXJFSOvt2bCJd5lPzoOP
hfT5VwLcPax6d7H9fVj1+ZeLY/aXfrQPnE4+XLk4Zg/px6+B00LqvzQ4P+RF
zVPVHzbxJ/3DQLglrPp9CxzH9QbDhVzvLrg+qOsbDm8O6fpGw8msbyzcGdL4
uhduDel54QS3Pjn/eNDtR+z3RzgzpPH6MJwb0v5ghrue9Ic58JGQntc9Dpv4
Ef/Ohw+G9Hx7AZwT0vOjxdbeIe3vlsF7Q6oPRXCQ+PO59Uh+huAC9K7M3V/6
uQhs9FDyvQ5OJT+aYRPPol8tbn1SPzZaf4W0f9sEZ4RUj7fYeMNfL8Mmn8Rf
r8Ee9m2z9kffdrn9SD1+F+5F/vwLzsIeH8BJIe3/Djl/yXnQYbhHSM/nO+EZ
QdW/Lrg5qOdbX7nrSb93wvlX4vcHuCOo6z/t7CPrP6Mgtn7xZ4+C2Hql3sQX
xK4n59cXwkNDOl9fAp8Kqv17wzPQu8vh5JDO21fBY9HPVMvoQ1pBbH2iNwPg
vUGdj29295PzhlvhiqDa6w44PqT6eheciL9HwC1B1Y/fFcTsL/3rOHhyUOvZ
HyyHtJ+ZAJ8Man38X7c/6W//6PYv52nT4O1Bja9H4O5Bvd9jcCf3mwP3D2p+
zIf3s7+n4INB3d9iuDqo9b0QPhLUf1fB+UG1p8/9XvIxDBv9kvOoMhsPQZ3H
quz6A9r/1cEmH6SeN8PbgjoPtjj7Sf3Z6Pwj/eELsIlvmV+3WHsGVA9fhtuD
Gp+vwdlBrd9t8OagFzZy++kuGy9B7UffhYux9z63P7H3B9Y/QX3+c8j6P6j7
P+zuL/rRCaeHVO+73H6kvn0FB4OaL986+4le/QDnBbXfOg2PRl/OWKK8N6Dz
Yw/4JPEdD8cH9fz1QvgY/rgYNvkg+t4bzmI9fZbE7CHruQo28Sb9byps+gup
x2lLYvYU+wyAJ2Kfgfb7Qc3vW2ETX1KvB8OtQdWTu+z9Auqv4fDWgOrXaDiV
+jYOTgh60fZm1b1LYvYVvZkAtwV1vnnQ/h59+yM8NKj9zcOw1dMZbn+iRznO
fuLPx529ZT6aB6cFdf5csCTmf9GPxXBKUOeBZe76st4ieBvrLXb7kX49BO8K
qr6shbfj74i7vvQHtdb/2LfJ2U/mo6edPUTvNrj1yDzbavcbUD3/O5xLfL7k
7CX58ipcgF68AW8O6Ly0E84L6POGdsvYfy+czX7eh2eznw/derX/dPEl5zOf
wHFB7a++gNMDWl//Y+Mv4M2KHggdd/kk+f893B3//GTtG9D+odtSZaO3Ui/P
gtOJ//PgodS3C2Cjb6JXveBq9psIjw2ofv4KTg5qP3YFvD+g5w1Xw20B1fNr
l8bsIfl8w9LY+qW/v2lpbP3i3wzYC6j+DnLXl3y/E27FHsPgieTXSLgjoO+7
3bM0Zj/Rg/FwSkCfd2TZ+xHPE+ER6NdDcHtA55U/ORZ7TYfjAhrvM639A6on
s+CkgOr/XDgroPU2D94WUD3OhzMDWh+WuPWJPZfDowPan62GM4KaL363f+lH
Sqw/Azrvl9vr029Vu/WIvevd+iX+1jl/yr/PwAXk23POnvK88m9wWkD7w3/Y
+Aro+cA2uCWg8+l2+Lhf4/dNZw/x19uW/ToP74F3+TW+98EmXyWfD8AVfvXn
IfiIX/uRI/Axv+Z7J1zv1/n4S2cvOb/4Ct4QUD0+YeM3oP3tD3C+X+PhtI1X
v/Y7ZyxTTg140fC/rcey2Pokv+LhjICe/14ITwvo+yMXL4vZV+KpN3zSr/NL
HziT/LwKPujX93OugTf4Va/S4InEY394RkDP0wbCJv/k/Zhb4EF8PhgO+vXz
IXBCQOvRcLiN34+Ck/h8LGziQfQjEy716+f3w7n8fhLcg99PgYu4/1R3fVnf
X9z15fNH4XQ+nw03s//c/7LPk+73Yr+FcKJf7bsULg6o/VdYe/q1v1oDt/vV
fwHYxLf4t9TuD/9XuP3L+XKNs6/ETwNs8l3m9fVwq1/j7xn3udSr52ET36JX
f3Pfl/jeChdS77a5eBG9e93Gg1/72TddfMi8stvGg1/PN/e4/YuevgebfJN5
/oDzn/TLHW49Mp8fcfEl+vCZ+1z0/Eu4V0Dnwa/hLL/qzwmXT9Jv/eg+F/06
DZt8lX7hjMKYv0X/ehTG/KXzIbzXr/X5wsKYfaTfuxg2+ij9VW84k3rXBzb5
LPX/Ktjol/S318Bdfj3vSoNPEs/93fUlngbCncTLLfBQ4mEwbPRC+tkhcKFf
zzuGw/X4c1RhzB8yr4+FTf0Sf2XCph5Hj+963Q9X+7XfmGQ/96veT4HjA/p8
d6q7v5zHTIcn0x8/Crf5tR+dBY/26/yVC5t+Q89H4WY/7wfDm/3aby1x9pP8
XuH8Kc9PVrv9i70Czp6SHyXOPxL/FbDpvyS+q2Gjh9L/NsApfp0/18FZxOcz
1n9+tcdzcLpf4+8Ftx/pd/4BHyG+Xrb2COjzhe1uvxI/bfB+9PLt/9rvu9a/
7Hefs7fUsw+sff3Mi3a/fp3fDrvvi/87YVO/5P2SLjiBfuAr2NQTmVe/hY0e
S3/3vYsvyZefYaOHMq90W648G30/Gzb+l/2ctzxmP6mvCctj1xP96gWb+JF4
/iWcHNB+/1ewmc9kPrwS7sA/V8Np9N/XLo/5R85nb4BN/Et+3wQbPZHzvQy7
PurFIDiP/LzTXU/67bvhQfQrI5fH/Cd6OAY2+iXxNB7ehp7d5+whevUAbPRR
+uvJbn9i3+zlMf9IfvwZNv6WfvUR2OidzG9/deuV8/45cAH92RPuehIPT9nr
oa+L4Xr0sxA28Sj5XAQnYD8fnE0/E3L2lHpWBtt6FLH29Ws9qYNz/NpvNsGJ
AdWfp2GjD3KetMHtR9bTauMDPf67iz+p3y/CFdjnVbd/sc8OeL9P82WnjSfq
0ztwi1/j65/2+3711357P/L7IFxIv/GRiz+p9x+7/Us9/hzeRfwcdZ/LfPQN
nEm9+87tV+aFH128yPs/cSti15P86w7H+bX/PQc+Qv3/BXzMp/W754qYP2Re
uwTeht73dizz/uVwf+rfVSti9pL8SV0RW7/4Pw1OYN4dAGdg74ErYvaV8/tb
3OcyLw1265PznSFwLv3XcNjon7xPNMqtT+JtLDyZ+2XC+T7Nxyz4lE/vNwk2
9Ub63Yfgap/ub6qzr8wr0+31/Dq/PgqPxZ6z7O/9qq9znX2kPubBBeRTPlxK
/C6BC9H75fBen+rNang08eK38eDT8+AwnEf9Kbf+9On5XpWzp+hbvbO39A/N
cDb1sAWu8Gk+bHTrk/q+ya1P5qct8Gzs9RI8jfh7DTb1Wp4/vuHsJ/G+08W3
5Hu7/T799l44nfx63/lT1v8hbOYPmZc/gof6tL594q4n/v7c3U/07D82Hnw6
v34DH/dpP3USrvfpefsp2PTXMt7GrVQ+6NP+8Ey43af15RzHkh/nr4ytR+Kn
J5xIv3HJytj9xB6XwfF+9eflK2P2kPqaAp/0qf6nwluJ/zTYxKP0vwPgPOah
gXCLT+fxW+1+irWfGgzHYd8h8C7yabhdv0/r7Sg4iflmLDzWp3qYadfj03qQ
BWegv5Pc+kV/HoJTyJepsNFzfX8SNvOPPN+ZCU/jerPgHujZXNjoo1wv77+u
lw+n0i8XwK3E03LY5JPMq6vs/Xy6Xz9s6o+cp4QdS36VwUU+7Ser4BE+1Yc6
uIPzkWa7Pp/OXy12/cXq3w3wZp/qzSa41Kf9xN9ho28SLy/BJn9FL1+Fh/r1
eegO5z85D9sJd6c/f8f5R+J5r7WHT/N7v4tf6c8OOnvLeclHcJZP9eJj2Obb
59Ye9CtHXfxKffjafV/q33fwduLrR7gX8XraxZfUt+5F+Nen81sPOB/7/KIo
9n15/+7Coth+Ra8uLortR84nesMe9akPbOJb+tur4Hj6nWvgDT7V0+vc5xKP
/eF24icdPuLTfiUDNvkn57u3wz3QhzvhROrjMNjovfhnpN0/+jUGbkPPx8OF
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
SpIk
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=140\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> GrayLevel[0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> GrayLevel[0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779823928455577*^9, 3.7798241095629177`*^9, 
  3.779824536000279*^9, 3.7798247397441483`*^9, 3.7798258536876526`*^9, 
  3.77982683582277*^9, 3.7798271106508465`*^9, 3.779897266683444*^9, 
  3.7798978536589885`*^9, 3.7798982127170453`*^9, 3.779898563667239*^9, 
  3.7798988286521473`*^9, 3.7799005425544558`*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"2075b19c-7e67-4ee2-a27c-6818bd30655f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a150", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0150.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa150", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a150", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Orange"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=150\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.779821753013467*^9}, {
   3.779823938289892*^9, 3.7798239418992233`*^9}, {3.77982411258971*^9, 
   3.7798241127423043`*^9}, {3.779824542604297*^9, 3.779824573294015*^9}, {
   3.779824747902659*^9, 3.779824749238956*^9}, {3.779826839375256*^9, 
   3.7798268394854803`*^9}, {3.779827114288265*^9, 3.779827118406429*^9}, {
   3.779827349493349*^9, 3.7798273496556697`*^9}, 3.7798978497250605`*^9, 
   3.7798982045865545`*^9, 3.7798985683729134`*^9, 3.7798988322045946`*^9, {
   3.7799005463181753`*^9, 3.779900546931568*^9}, {3.7812186460661097`*^9, 
   3.781218646592701*^9}},ExpressionUUID->"79bf2d80-4606-40e4-b115-\
ee24e8c35e2c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
0h85372FPIz6MJJ8wIH6OKYk7j/xz50lcfuJft1NnumAnk8gRx2oRw+QVTxI
fj1MTnEifqeQm2nPacZ+cv7wT3IC6+Vj5vvS7z1hrpfzmLnkFgf0eAF5kwN/
nzP7Ff1ZTFbxJM9fqv3B55eQs/n8Uu1PxqeTXMB+w0dW9ULm7wqyyhfJ3xBZ
62k1OY31ts7YS/Jjrbmf1O+X9f6c6C9fIav8lHjeQlb5Jfq7laz0X86Lt5OV
3kl+vkdOYn/0Afkk82kPudSBef5jchb1Zp+JL/xewMSD2Ouw8Y/Y62sdvw70
Sx3GHqKfx8ij2e8dJ2ewnv1q4k/q4+/kKQ70O11Wxv0n6z2L3NOB/rcbebQD
/j1/Zdy/Et8Xkg85MW9dsjLuX7Fv6sq4f6R/6ENW9Uf6t35kFf+S31eRU3i+
dg15GvNhyMq4PyQebiCr/k7Of24i57MfupWs4k/eB9ym98f6OdZ8X/yRRc7h
/rLJKr9lfzlkVb9EPx4kH3Ng/ppETqJ+PUJuYb5NJ6v+Q873Z5BVvyr+m6Xt
yXibbfYj/f88coYD530FK+P+FXsUGvvg30+SlR7I+8Bl5C2Mz5XkUp7XvkRW
eih65iZnsh/zk1NZ3yvJKj6l342Qcx2Y12vIxcy/er1fJ87nmshKb6Q+NpOP
MP43kQvZP75OLmF9fsvYU+z9Dln1t6Iv75v1S73are/vQPzt0etlP/kJuYh6
tJ/sZX93UMcnzxOOaHu4oJ/tZDVfST3sMPEh/vxBM+fnn816pP/5lTyc5yt/
kCfS/11WxT+XfDiL3JXz67nkPOrT+avi+5G/PVfF7Sn1LIWs8lnOk1JXxdcj
8XW5uR7/PxLyVl5/FVnNK3L9YPIWXn8dWembXH+DWY9cfzN5Dtdzq2G5/jZy
kOvPJKv+Q/abpT93wD7ZZNXPiX1yyO2054PkBs5Pk8x6pN48Qi5lPzadfJJ6
NIOs6rv0B7P0/R2Ih9lk1a9L/Mwj57CePEPW8VZI3sT4LNL2d6I/LCZv5/y3
khyjnr5k/C/zqcv4B+dH5CYnfr9TSc5w4d9rhcn5LuRjjV4/63e9WY/0T2vJ
Uc63zeRi1ttN5EE8D9xi9i968pZerxN6/I7xr8yf75HT2c/tNvaS/meP/j7r
2cfmc/m7n5xKfx/U+eCA/w6beJF8/lrbxwF/dJjvSz94jDzRgd8vHCc3l8G+
v+r9Ub9+N/kjevenF8HZnKfPIqt4EXt1I3fyvKI7WfU3cp52IbmF89UlZCf1
/VJyH+ZrH7KqT7L/fuZz2X8a+VgZ4nEQOcGB+jSEvKkM8TWUPIf9241k1T/I
+4IR5BQH6uWoF+P+kXltjHm+9GfjyMO4n3vIg7ifCfr53E8uubUM/cxEcgb7
5SnGvqLn08gHytAv/dN8Lv55zNxPfm/whLZXGer/XPKhMswPC8iJDsTnQnIm
+73Fxj6iR0vNfvDvc40/5fzvRXM/yWcnudiB/PSSsxxYX4B8sgz9V0jHTxnm
tSrjL+mHa8ltZfg9U6Pxj9hvPdmiPm009pTzkM3kXM57bxr7ST1/m5xE/75r
rpd43WXWJ/naauwl9WgvuakM+tlGjjL+PiMns5/63NhP8ulLcjPt8a2xp+jJ
UXI+4+lHckkZ6sEJcgf7zd/M59L/nybvpb/+VEouw3lk19L4/uV9zFml8f3h
97bkQgfer3QrjdtP6k0SOR314r3uZDUf2/F2NJkcLRP9ufBCspPPu4jcUYbn
XULuh3mt8M/kZLyvjl5KHkR//YU83CHx03GZfj7mnwv6klX/L/rWj6z6RTt9
HxxAns94SCPvwjwTHEg+Tj0bZNZvv09qH2z2J/o+hNxZJu/n0q/XnzOfhpKL
HNJPzfsrWeWn/T7SfyO5jfPozeTRPK+9hTwR+X+mRc7l+dsos345zx1NzuL5
wRiyyg/b/2WZ2n6orxvuJG/CeVBbFrkZenjqbvIczsfjtf+dOJ+ZQJ7J87j7
9PqpBw+Qi5k/D5LTcP6882FykPEzidxEf04h98F8lDGVfAzz2gPTzPPl95DT
zf5EH/LM9+1++vUZJr7s84BDM8le9nOPk1v4e4knTHzb/cCY2eb78n7xKe0/
p8yjy+eRp7H/e9rsT86jnjH3s9vnY8+ST8I/PQq1P7nfRTp/2V8WkVU/KO9r
XyBvRX/iLdb54uK/NyK34n3NgRJzfzv+O1fp/OPvP17S+cLfuziMve14fMSl
4xm/11jkMc+TecBHjvF9YLm2L99XVWj/uiQ+zg6SS9zS/14Z1vmH3/dkRvX1
Hukn/1mt/e2BvWN6/x6p5/V1hiW+GnS+eKAXjXo9Xpm/zlun8xv/XmDwy/r7
/D39Bv18H/LpFfIRH/qLV3U+l8t57trXtD8DUq8+fF3HQwX6lTf181Zjvt+m
4wP/Xj99u44n/nvuHeTBYfzeoEXbNyLfL31fx0cUvw/YRd5XhefvJp+qwfNb
yf5aWf/5/ybPrcN59H+0v9dIvN79idaDtdj/p9pf62QeX7WffN7L6Gc/Iz/Q
jPcnB8l7NsD+n5NTN1lPpaWcKDys7fOq9X/+2K4e
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=150\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798239432122517`*^9, 3.7798241132589207`*^9, 
  3.779824550705931*^9, 3.7798247500152984`*^9, 3.779825856319671*^9, 
  3.779826839991541*^9, 3.7798271190636077`*^9, 3.77989727007172*^9, 
  3.779897850386607*^9, 3.7798982052857976`*^9, 3.779898569659162*^9, 
  3.779898832997468*^9, 3.779900547781684*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"30ab52ed-7e13-4bbc-8885-fa42707fe67c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a160", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0160.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a10", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"a0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aa160", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"a160", ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", 
     FractionBox["1", "GoldenRatio"]}], ",", " ", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", ",", 
    " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
      "}"}]}], "  ", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
       RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Pink"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\"\<\[Theta]=160\[SmallCircle]\>\"", "}"}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.779821761131102*^9}, {
   3.7798239485849514`*^9, 3.779823951019252*^9}, {3.7798241163579206`*^9, 
   3.779824116508485*^9}, {3.7798245589340973`*^9, 3.7798245668364153`*^9}, {
   3.779824755783884*^9, 3.7798247568299475`*^9}, {3.7798268429124947`*^9, 
   3.779826843072356*^9}, {3.779827122616624*^9, 3.779827125479683*^9}, {
   3.779827353053053*^9, 3.779827353875062*^9}, 3.779897846404833*^9, 
   3.779898200745932*^9, 3.779898576084476*^9, 3.779898836544942*^9, {
   3.7799005530627775`*^9, 3.7799005567237854`*^9}, {3.7812186498113728`*^9, 
   3.781218650344946*^9}},ExpressionUUID->"c08cab41-38e9-4f56-83cb-\
cdedfe381f11"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
5zMdv2KPA2p9LvR/h8lpbpwHHdHxLefzHToeRP86yd3dON/6RftT+r0T5CY3
4vc0OYHrP6fil+s/Lxec7YY/Y8lxHtSbOHKuB+fXl5LT3ZivryDn0P59yPHU
u2vJZ1yYt/uRyxjfSeROF/QhmXzIBb0ZQq53YT4eTjbzS84b7iSPc8Fe9+RG
/SP6eh+5xA1/jyO3uqEfD5PHuNG/TiSb8SX17HHyLDf6mafImS7Ux/8ht7jQ
3/5D7d+N87RZ6vkuxNcL5Aw+7yXySC+eN5/c7kR+LCIncn+vkZtd2N9SctiN
+p5HjvHg7xr1Oe35pvrchXy06fvLeZST3N2JeayInORC/+dX8eBCPS/Tn8s8
GCIPdqH+1Oj9S3+4We3fhfl1q7a36OEOZQ8X4vN9cpcT9btJrc9t2Ey5/X43
2XChH/1UxYcT9t5PbnPB3ge0/+T9z2Fyghv7P6LjW/Sjg5zqhN536vVIfftF
7c+JfPmNbHFBr06Te7vQb53T8S/6ct6yqD9lfowld3chvuPI7S6cv15KbqE/
Ll8Wtafoex9ynBvruYZ8yIn19CN3uND/JpEbXajHyeQU2mcIeYYT9hlG7u9C
ft+pnu9EvR5FnuaCntxHbnXCX2PV+lzQrxTyHBfq20S13kIj0t6seWxZ1P6i
N0+R3S7MN1PJY1ysf+RkF/qb59TzmT9ztH1FjzLIpr6IP19ZFvWfzEcL1f2d
mD+XkHc7oR9Llf2cmAdW6OtlvfnkM06st4C8xYl+3UoOOaEvheSGQvjbS85x
oT/YQG5ywr5Bdb0T81Gliicn9C5MznRinq0nZzuh52/r9Ut8bieXMF/e0/4W
vfiQ7HNiXtpFLivE+4Zm5c9C2L9Fx4fs5wu1Hyf28yV5m4v9p/a3nM98p9bj
RH/1E3mcE/X1v8p+hca8yIFQFzlciPw/Rc6if/4kdxWif+i2PPq51Mse5MGF
iP+LyS2FqG+XkDuc0Kve5DQn9ptATi+Efl5Nri9EP3bd8qi/5LxhILl/IfT8
JnKuE/l8K9ldiP7+dnIZ/TtC31/0d+Ty6P4l3+9dHrWX2OMBcoIT+fUQObsQ
v3d7hJxXCD2YRE4sxPuOdPU8B+J5MjnZCf16hnzGgXnlWXKzA/aaTfYVIt7n
anuLnswjH3JA/xeo9Rei3mYrdkCPc8jdHagPy8gjHbDnSvKYQvRna8klDuTL
erJRiH7ETg45MO+79PpEr3zqebR3ifIX469c2d+Bv1V6PZJvtSreHHhf+S9t
X+kP/63iw4HzgQZyvgPzaaOynwPx+xG53Q5/7VH+dGAe3qfi14H43q/9J/l8
kJxSCH8e1uuXfqSdnOFAvneQhxZiPv5Z21fOL34hxzigxyf0eqS/PU3ezXg4
p64vRL9z3oro55HwvyuWvM2O/IojWxw4/72UnG7H70cuJ2cwnvqQCxyYX64h
JzuQn/1WRNcnv8+5QV1vh14l688lHgfr78t52jBybwd+H3OHfp58Poocy89H
r4jaX+rRWHICPx9PbuXnqeQzduhHGrnJjs+fJM/g96doe8nn09X97Ph8JtnB
9f2T3MXvv/j/9pdJnmPH/rPIbQ7Y51XyGNrvdbLPDvsuJ8fQ/qvIZrxKf7WO
HKL/3iKX2eFfh7Iv/e8mN9hxvlxMHuxA/JSSkxyY1yu0fST+qshm/km9qtP+
Fr36l44/ie9tev0S/w3kWXbo3Qfa3tLPfkQe6sC8slet14bzzX3K33bo6efk
Rjvm+YMqfh3ol9u0v2Q+b9f7EX34QftX9PxnHV8yDx5X8WuH/pxQ37ej3/pD
20v065zKLzv6hfPyovsR/Yslt9g5H+ZFny/1+VLN0u9dTo5zoL/qQ06gPl9D
jneg/vfLi/pX+tsbyGZ8yHlXMrk/43kw+RjjaRj5DOPlDvJkO+JhFDnFgX52
NDnWjvOOsWQz/sWf48lbHJjXU8mm/oi/0si77Ubk+K73k/pz6TemkJtt0Pvp
ZFMv5P3uTP08OY+ZTc61w94vksfZ0Y/OI5vxLvNXFnmkneejev/4fbD6vgP9
1jJtD8nvVeRUB96frCWHmT9vkTOYH3a9fol/N9nMZ4lvn/q+Hf1vKbnDjvmz
nJzH+Kwit9lhj1pyGeNvs7KfHf3Ov8mm3kh87dD+l/cLjfp+Ej9NOt5ED/eQ
07jfT8kOxsd+Fe921LMDer+YF3X8yPx2hNxF/3fo+8vvSzrJ29gP/ELOsWNe
/U3ni/R3p1R8M1/Oan/KvNJtZdQ+sp8LVkbtKfu5mDyD9TWenG+HfvUmZ9oR
z39bGfWP9PtXk029kPnwenLYBv8MJB+yof++iWzGo5zP3kpOZn7frtcr53sj
yGa9lnoxkjyH8XYv2dRb6bfvJ7fa0K88RI6jHk4gm/og8TRJ71f07AlyO/Xq
abJZn6S/nkbu64B9Z5CnMT+eJ5vxJf3qC+ROG+a3l8kjbTjvn0/eYkd/tpic
ynh4jdyb8b2UXED9zCOPYD7nk1tssN+b+nqpp1ayWV+knjnJqh55yaZ+SD3x
k838kH4zqPcj+lOp7yfnSWHyGK6nnmzWA9Hjt/V+pH6/QzbjV+zznraf2Gcn
+QzzZRfZYH36hFxvR3z9hzyZ/mrV8Sj5fYicy37jax3fUu+/VflgRz3+Ucev
xM9R8m4b5qNfdXyJ/v5OdtgwL/yh/GvD739iVkW/L/nXnZxtQ/97ITmD9f+v
ZLPeS/3uRU6xY167YlXU/6L3fch5Nsz715Jnsf71I3enfiWtitpD/J+8Kuof
icch5CYb7D1MP1/O7+8gm/Ei89Iosllv5XxntL6f9F9jyWa8yO+JxpOTGW+p
5ATOP2nkLivyMZ1sxrc8bwo5if3uM2p/NuxvJnmwHfPKbPJJG+bXF8lDac95
6vnU1wXkNM6L2eR85lOO3p/E7zL9fNH7leR0G/RmLbnEhnhZr55vw3mwjWzG
i+i1i2zqmZzvFZHD1LcS8jEr+ocytX4b9CKk/G9DPtTo50t936Q/l/lpK3kO
7bWdPJnx9z45x4b3jx+SQ4z3XeRM9l/N2h7Sb7eQ623Iry/IZj8i6/+SXGDD
vPw1OcuG+vad9o/4+0cdP6Jn/9X5JfPrr8p/VvRTJ5U9rThvP0OOt+F9T8xq
sNuG/vB8cqcV9eVC8jjmR0/FVsRPL/IcG/qNK8iZVtjjKnIq/XktebIN9bU/
Od8G/U9aHbWHxH8yOdmG/ncIucsGPR1GHmHDPH4nua8N/dQo9Twr7Dt6dXT/
kk9jySVW1Nvx5EQb5ptUzaKHaZqlHqSTD1kRb1PIjVbozzPkaayHM8lm/OL3
k/pzeb8zlxzL+J1HjrHx/7eRR/J+2WTT/3K/HHIG15dLrrcinlZqe8m8uoac
wP2uJ6fYcJ5i0/Eg+eVU97einyzS14s++Mnd6Y8ysqn3Mn+F9PPEv2GymY+i
N5vIHVb0E2+r9TNetuvrRS/f09fL+9CdOv7kPGyXso8V/fkn+vkSzy06HiS/
W7X9pT87pPLDivOSr9Xn1Itvyf05v/xIPmNDv3JUx7vUh+M6XqT+/a7tI/H1
B9lBPTin7S/1rXt+dH0yv8XmR/0v9vkr2YwP+f3dpeR4K/TqcrLFivOJPmSz
3kh9uobss6K/7Ufewn7nBrLZn4ue3qyY8TiYXGBF/AxV37eiXxmRH7WHnO/e
TZ5mhT7cmx/dr9THB8gp9M9Der2iXxPyo/YXPZ9ENvVR6tET5Bbm19PkZsbv
NLV+K+w5g2zWJzl/eJ5sxpvo3QvkbCv6vZf09XIeM58cskKPF5FN/ZW/r5HN
/BH9WUruoD9XkN18fj65kc8vUP5jfFrIpv5Kv1FINvVM5m+PXp/kbzF5DPU0
QG6jPleo/TE/qlX8sH7X6fiQ/vJfev0Sz9vI26zQ3way2Q/IeXEjuYH5+RE5
n/G3R8UD82mfsocV8/x+vX7RmwPkvoz/w+RU1qcjKh5or+/Jpv5Kv9Sp7Es9
Pqb3L/1eF9nUS6lnp/T3pT7+qZ8v/U63NWCzPsh6e5Cz2P9eRA5b4d9LyGa8
S3xftiZqX5m3riTPon37koey/0kkm/VS+rf+5N0W5PeNZDP/pL++hZzKfBii
7y/xMJzssOL8505ymQ390D1kU2/lfcB95C7Wz7FrovYSf6Ssidpf9pdKHsP9
pa2J2lP040myWT9k/ppCzqR+PaPvL/k2kzzDivP92WSz/xH/zdXPk3ibp+0r
/f8Cstmfy3lftnq+HfbIUfa28f9PqvvZ8D5wJbme/l5DzmN/8ia5jXpmU/ay
oR9zqnhgffeq/bDf9ZPNfJB5PUg+yfyrJA/m+VyY3Mz6WK/Xg9/TkbPZP76j
/S/1+V1lb/a3H6jvc575WNtL6tVeZW/OD/vI8ewnPycn2Xh+q/0n9f8wOZ3n
Ce3KP+xnO8jt7N86yYfoz1/Ipt7I/PwbOZf9zym1Pp4PnNUs/u+2NrofyYce
ZDMeZX69mKzq4yXkThv+9iaHWM8SyGa8y3lSX3IW4+s6ciL7nQFro/aR628k
O3j9IPI2Xn8buZHXD18b9Zdcfxd5GtdzD9msB3L9feRWrn8cOcx5PUXtl/ZJ
JQ+lfdLU/Xle9STZ7N/x/znIcTy/eWZt1J/ir5nkeJ6Hzlb2Z38wV69f4mEe
eSTjZwHZYD1ZTC5gvOWQzfiW+Mwlm/ks/WEeOY/9whq1Ps5jb6r1OzCfWtX+
mS9Ocq4dv9/xks35Wv6/1gayOi8PkttZjyrJqeyfqsnmPC35Xq/9I/V2i4oP
ngduIzfZoCfv6v2IHn+g7GvF/PmRjm/p5/aSmy3of/Yp+7Ge7dfxIn8PkudY
4e/D5Mk8rzlCzuF5xfdkiwX+6FT5ZEE/eEztx4rfL3Sp+LbAvqeUvSzQrz+V
Py3Qu7+sA4csmKd7kLtbYa+LyAlW9Ac9yX2tOE+7bF30+TJfXUkeyXp3FTnO
inxK1J/L/vuTT1qw/yTNEo/J5MFW1Kch66L2k/gaRnZYoMd3kHtb8b5gFDls
Qb0crZ8v89oDZLOeSX82fl3UXrKfRzTLfiaRp3E/6eQtnM8nk81+QfrlaWTD
Cj2fQe6woF96npxK/7xANuNHfm/wEtmMP6n/88m5FswPi8iTGZ9LyHkW9HtL
yY0W6NEKtR7ae7X2v5z/rSM3WZDPFrLZD0h+OsgNXJ+b3GpB/1VMTrRiXivV
8ST9cDk5xYLfM1WRD1lgv1pylwX6tFmt34rzkK16/9K/7SCb+Sf1/H21Pgv8
+6Fen8Trbr0eyddmvR6pRy3kfAv0s1XbQ+LvS/JQC/qpr/Xnkk/fkrNpjx91
/IieHCXnMJ6Ok9veQj04QY7hPPmHiu+30P+f0+sXf/2lAHzGgvPI7mQzfuR9
TA9yb867seRkC96vXEQ2+zupN3FkM19E7nqSSxBvR+MLouuP6M9ll5HdFjzv
cvIIPu9K8iyL/M35G3kM9KbkKnIH8/Fqcizip/Nachnmn0uvJzdZoW/99fMi
6fvkQHV/K+IhiZyE/PHdRI6nniWTzfkz8j6pYxC53gJ9H6LtGXk/N/h28iH2
M8PIeeinFvxdPy/yPtJ5h/q+BfPoXeQ4ntfeXRD1ZyT/zzfIWVac94wmm/26
nOeOIVusyP8HyH1xHr1+nLI37LPpIRUfVul3WlPIu6GHpyeQHZyfJmp7y/nM
JL0f0cPHlL1t0IMnyA3s554kj8P5866nyYk47zg6RdmX/pym/IF5YOh0stlv
R+aZJ2aQE2z4PeRM7X/Rh1lks1+N9NPvzFb2w3lk2xz9PNHrF1V88fz4JbI5
T0f6gQfmkc3+SN4vvqLyA+/7Vi1Q+cF+cSF5Bs+jFqvn2eT98bFXVXzwfUGO
yh/u9w29Pukvc8lzbHhfu5ycj/7EkUdu43n4KrI5r0TC5VC+yke8jzyzVjHP
P95U/ubvXd4iH0M8PmNV9sDvNd6wq3jg+7RC5W+eF7iUffj7No/yp0Pi4wKf
ikf8vuGGDeR2/L5pXIm6X6H0k88H1H4KYe8y/XnEfZUV5KH4fe2uELm1EHpR
peLTJfPXX2vILS7pxwbVqfhxo3/epPKTv2f/l8ovL/qLtxUXyXlu9b/JuT6p
V5+8o55XjH5lB9m3AfP9e+p5fuhHI3kn/z/3TvX8UvzeoIncIyDfL/hY6Xc5
fh+wm/xNBZ6/l9wYwvObyY9Wyfov+Q95URjn0Z8pPaiReJ3wufJvHfb/hdLP
TTKPrz1I/mEz+tkvyT3fNn78/WTp+V+p+H/b+F+ITaDx
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=160\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798239519108725`*^9, 3.7798241170320387`*^9, 
  3.779824757789995*^9, 3.779825859167672*^9, 3.779826843538777*^9, 
  3.7798271260290365`*^9, 3.7798972731010857`*^9, 3.7798978470464473`*^9, 
  3.7798982014206133`*^9, 3.779898577299382*^9, 3.779898837319789*^9, 
  3.779900557436637*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"d847cfdc-77d0-43e9-a2b7-09c3514cbeb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a230", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0230.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa230", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a230", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Brown"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=230\[SmallCircle]\>\"", "}"}], ",", " ", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.779821767038561*^9}, {
   3.779823963552998*^9, 3.7798239666677804`*^9}, {3.779824122061742*^9, 
   3.7798241222851133`*^9}, {3.7798247655640574`*^9, 
   3.7798247770400953`*^9}, {3.779824825918974*^9, 3.7798248483189526`*^9}, {
   3.779826846980432*^9, 3.779826847117426*^9}, {3.7798271291486707`*^9, 
   3.7798271320772667`*^9}, {3.779827357584858*^9, 3.779827357790311*^9}, 
   3.779897842461109*^9, 3.7798981961759014`*^9, 3.7798985819852505`*^9, 
   3.779898841154591*^9, {3.779900562133778*^9, 3.779900563243845*^9}, {
   3.7812186536093893`*^9, 
   3.7812186541844273`*^9}},ExpressionUUID->"168205a4-6db2-4976-8051-\
c3027429ced6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
gAqnyw0fknsG1GnLXZ795D4B1JsvyX8E4I/vyYfKED8nyRMCKmyOKX+Q95fh
eRc8B+7K511CTgygPvUhnypDPxVH7sL93Wi+L/u7hfyfAPRUkccEUN//Rr4+
AHtOJb8VUOH2ZcM0cnxAhcPll8fJtwQw7y4grwlAv9PJyQEVDqcRK8lflqF+
biDPDCBebOR+AfRnPvK0APrpMrNfyadaciDA/pD8TADzQQt5ckCFx8UXPiDv
DyAf9pEby2D/Q9o+ZdCbb8nNZbDHT/p5pWpCWHDPkk+Xqu5hATp/BTirTF0R
buAuJs8vQ773Jqsy6NPV5Hll6DdvILeXYf4ZTo4KqGfDgjWKvJfrG0dO5fqm
rIisT/TsEXJCGfLtH+T+ZdDfp8iTypDfi8lzS2G/THLvMvRb68jpZYinLeSO
UuSnV39eCv0qIbeVwL/V5MllnL/0/kqhP2+SF5WqJeEH7CLfUob5qJ0cXYZ6
9Bk5vgz9/jfmftI/HSPXlGA/Z8gx3M95z9M+pZifYsnDSzHvXE5eWabC7Vr+
VeQJpei/48lVpdDTm8grSuGfO8izS6Hf95K3l0IPJ5vvS318iFxagn7iMfKp
EuT7XHJrCfa/kHyyGPH2HDm1FPmwhjy5VJ3Yaxkol1xRgvrtIo8pQf0tIvcq
gb4HyTklyJ8G8uhS+P918vxi9Eet5GPFqAcfkfuVqKfCBfFT/fxi6OsR8ppi
9EM/kJNLcL7zCzmzGPUxKjNyvTw/OjNyP9GnC8ldab/u5C+L2Z+QVTH6/yvI
3UpQ7/qS64qRL/3Jk2n/QeT4Ysxz15OrirG/weTdxYiXm8mjiqG3iWRfMc7D
RpLTijlPkJtpn7HkacXQ2wnkLsXoD+/X6ylBPieTh5YgPlPIVrxIPk7Xn5dC
72aR80rR78wmP1KGfuqf5NOsT2nkIPujReTRlbh+KTkxiOtXaHtvw/UrySlV
WM9a8pZqrD+HfIrzbS75cc7bNvK9NbCPm3xjDezjI8+uhj23kqOrYf8Aef42
5E9Q2y8If9Vqf1ViXmgkW/2O6Pt2vZ8yxMMbZG8p4qeFbOWv1JdW8teMtw/I
vYqhL3vJB7di3t9H7tyKeD5AXrQV/e4h8u1FqIdHtP+KoPffktO3ol84Sk4q
Qj91Qq+/CPr3Czm7CPXorM6nIuhB1AvgMUUqvN3555MnFGHe6EY+WIj61p08
uEiF5TD1UnLPIuh/b/LsIsy/fcmjiqDfA8zzZJ4fRH6/EP6/nvyfQvhziGY/
8u9m8h+F8E8i+YEi6NOd5K5FON++mxxfiHo+Vq+nEPP6RHJqIfr5+8nZhbBf
MrlXEc4HHiaPLcJ8OZ1cVahmh//NIocKMY89QXYWQq//Sa4pRL1PIzcXIh8W
kU8VIl6XktMLUX9XkL2F0LuV2t6FiKe15FI/6msOOYP7y9X+K8R5nY08shD1
003eRH/7jH+l/9tKTipEPxog31SIfA+S8/zwXy35iB/9TgPZXoj+fTt5eCH0
/w29Xz/Oc98mV/ix3lZyGtf7AXm7H+v9iDzDj3ltH7nFj/8PkJUf+vE5+aQf
en+EvMYP+3aQ4xg/P5jnheU9/gQ5uhD5dIrs9qP/+Y083494iFoJzvXj/Cia
3OSH3l24MrJ/0aM/ky/3w149yYn07xXkoX7k/5Xk7n7MB/3JGX70B4PIM/2I
x+vISX7o+WDyI8y3m8hpfujbreR5BfDXSPLf+XxFLvZDT+4165V5fAI51Y/5
bjK5F/c/lRznR31+iJzl53xCnkX7P2bWK/Z/nDzBj3ycS17hR7+xgDzGD71Z
SD5bgPxKJz/jx/uaDPIkP96PvUDuXQA9WEMOFaAfXG/sL3q3mez1ox94ydhf
+l0n+XQB/JlPbirAfFVIXlSAeCo1n8t+Ksk1PuynmnyNH/sJkYf70E81kZt9
6E9fI4/0Q+/fIu8ogH7vJKf4UL93kfMK4J8P9fU+5Ec7+ZgP5/ufmPXIvPsZ
uc2HfvpLsiqAfb4mTytAvH1PDvqg18fI6QXw90lyRgHeh/5KjilAffldr9eH
frXLKl6fj3p7AblHAeaTi8gdBXj/1YPcXgC9u4wcLIA+/4V8yId+tB95LPPh
anJCAfrxa1dF7CP+SyBb/gubp2Aoub8f/cMIcqAA+n2beZ7cbxS5mfe7h3zE
h/WNM/uR9U0i5xZgfUmrIv6Q+HqQnFqA88JHyMkFOP+YQXb6YL9/rIr4Q+L1
CXJcAfqDeeQ5BegP08jKh/O6Z/X+8+HfZXq9PpxvryBP8uH8aJW2TwH6u7Xm
etGHHPJwxt+L5PE+5KfNrFf0zk0+6EM/5yOfzUe+byV785EfAR0/PuhXkJzt
Q/2o1ff3oX9rIOflQ4+3k1vorzc058Nfb+v48MK+reZziffdZH8+6vFH5KE+
5M+/yWNoj0/Jp33o/z439pHzoMPavz6cz3fo+PZB/zo15+N867i2hw/93imy
pYcSv2fIKcyvc+Qsrv+8rMj14s8YshX/Um9isyLPl/PrS8iJPszXl2dF9iv2
70MO5EPvriLH5GPeHkgen4/4jtfX+6APCVkRf4jeDNPry8d8fAs5NR/nDbdn
Rfwj9rqLPCkf+noPuYn+Hk+e54N+3EcO+dC/TjH7k3r2d3JcPvqZR8ixPtTH
/9PP86G//Ye2Xz7O0+aQ++cjvp4iJ+TjeU/r++XjeYvJSfnIj2VkZz729zw5
l/tbZfYv9T2bHJ+P/zeS0/NhzxfNfiQf7fr7HpxHuclWfsg8VkDu4UX/t1X7
y4t6HiCP9GIeDJJTvKg/tdoeXvSHjeROL+bX7eSofOjhG2b/Ep9vk3d7Ub9b
9fc9ym7J7Te7TXxJP/oR+awX9t6nP/fC3p+Ssz14//O58Y/s/7CODw/0o0Pb
0wu979Tr9aK+HScXe5EvP+t480KvzpAXedFvnSOneaEv562mP7yYH2PIWV7E
dyy5txfnr5eQQ/THZasj9hF970Pu8GA9/cjzuJ6B5KAX/W882fK/1OMEch7t
M8w8T+wzwtxP8vt2cpsX9XoUudUDPbmHHOuFv8aRZ3qgX5PM/qW+TSGne1W4
vdn4IPmIG3rzCLnFi/lmhlkf6p9enwf9zROrI/6T/Jmn2QM9SjPPE38+S47x
YD5aSp7jwfy5gjzcC/1YRc7wYh5YSz7pwXpzyOO53lz9fQ/6dZvenwf64iJH
0d8+stOD/qBI24v2LSP38mA+qjTfF72rIffwYJ4N6XjyQM9f0f5mfL5O3u9B
vryl48UDvXiX3NeNeWkXOcmD9w1t5E7av13bx4P9fKLXx/18Rm53s/808S/n
M1+Tm9zor7439pX6+iM5260Whg+ETprrJf9/1f71wD+/k0d60D90WRPxh9TL
ruR4xv9F5GY36tvF5EwP9KoXOcT99l4TsYfo51/JbW70YwPWRJ4v5w3XkK34
Fj2/fk3EP5LPQ/T63OjvbzbXi38TyfPc0N+R5Fw38v3uNf9tj7FmPZJfE8hD
Pfi92/3kSW7owVS9Xzfed6SQd7gRz9PIaW7o12PkHm7MK4+TnW7Yay65vxvx
Pp+c7oaeLNTrcUP/l5APulBvM4w9RI8zyTPdqA+ryR0u2HMdebcb/dkmsnIj
X7aQF7nQjzjI492Y9z3kFBf0yk9ud8HexWQv46+cHHDh/yptfxfyrc58Lu8r
XyYXu9EfvkrOcOF8oFk/3435tEV/34n4fY+c4IK/PjD+kXl4LznOhfjeR452
I58PaPu44M/PzfOlHzli7C353qHjy4X5+Ad9fzfOL47r+HFCj0+RD7nQ354h
ZzMezpFj3eh3zlsL9rtUOPzviCGnupBfsWsj95Pz30vIxS78fuQy8kwX4qkP
OejC/NLPfF/ycyDZ68Lvc64lx7ihVwnkbBficSh5pAvnaSPIISd+H3MbOY+f
jyLvcOHz0fr5TtSjceQ5/HwiOYGfJ5HTXdCPZHK0C58/TG7h96eTO/n5LPJp
rm82eQzX98//+XwBOZGfLyIfdGL/6eR4F+zzHPmIE/Z7gWzFq9h3Dbk/7b/e
2FP6q836fk747yVjT/Gvk9xK/3vJWS6cLxfq+zsRPyXkY07M6xXk4Yy/KvJQ
F+pVvbGH6NXL5GQn4nsHuZcL8d9MnueE3r1DtvJR+tn39HqdmFf26Phz4nxz
L7nGCT392KxH5vkDJj6kXz5knifz+RHyNCf04Vu9Xwf0/Adypgvz4An9fTf0
5xS5yYl+6zfybif065zJF+kXzssGe53QvxiyFS+YD8kBB+rzJeQ0J/q9y8iZ
TvRXfcjR1Od+5JMO1P+B+noX+ttryXOcOO9KMM+XeB1K3u9EPI0gW/VD4uW2
7Mj+JB5GkTOc6GdHky39lPOOcWRLb8SfE8lW/Mm8nqSf54C/kslWvIaP73o9
TLb0T/qN6eQ4J/R+FtmKd3m/O1s/z4nzmLnGXmLvBYalH11ItvJR5q90vT4n
z0e1P5z8fTDZimfpt1ab6yW/1xv/yvuTTYbFXi+RezmRHw5jb4l/r7Yf49uv
/eVC/1ti/C3zZzl5POOzimzptdijjjyS8ddItvJF+p1Xzf4lvt4w65H3Cy3k
Tgfip9XEk+jhB+RD3O9HZn2y333aPy7Us08NY14k5zoxvx0mR9H/HcZ+8vuS
TnKbA/8fN/6QefVncowL/d2v5nrJlz8My7zSZR0424H9XEBu434uIuc5UV97
kIdSv3qR052I57+QrXiQfv+vZCu+ZT68mjyN8XqN/tyJ/vv6dRF7yPnsEPI8
5vfN5LNOnO8lkjscqBcjyTGMt7vJzU702/eSrXyRfmXCuoh9RQ8nk636I/E0
dV3EH6JnD5HTXNCrR8lJLvTXM839xL6p6yL+kfx4UtvTgX71KfIOJ+a3Z8gt
Tpz3LyYH2Z8t189nPDxP7s/4XkW29E30M1v7x4V8zjHrEfu9SO7hQD21GXtJ
PXOTY1mPfOTerCdbyYlO9JtlZr2iP5VmfXKeVEPuRX0J6e+7oMevkA+xfr9G
TqV93iJH0z47yZbeSr7sIlv1S+rThzpe7Iivf5GdDvhrP1mxPhzU/nOg3/iC
XOxEvf+KfNKOevyd2Y/Ez1Gy34n56CeTT6K/v5h8k3nhN7KlL/L7n6j1/L4D
+RdNHs/+90LDoo9/JsezfvckH3RgXrucPJJ634c8yYF5/yryHAfq30DyIQfy
J359xJ7i/wTyfjvicRg5QHuPIDc7cH5/G3meA/PSKHKuA+c7o9dH/CH91zjy
cCd+TzRxfcQfEm9J5BY+L5l81oF8TCFb9UOeN53c6kC/+5jZv+xvtmGZV+aS
ox2YXxdo+zhhz4XkoAP6usTsT+pjhrGn5FOmtgfjd7VZv+j9OmMv0ZtN5FQH
4mULOcaB82C7+b7otYfc5MD5XgG5B/WtmBzH/iFAtvRM9CJI7sV8qCX3d6C+
N5CP2DE/bSdn0l6vk5MciL+3yZ12vH98lzyU8b6LvNuBfG8j5zjQb7fr/TC/
PiEX27H+z8h9nZiXvyC3s759bewl/v6OnO6Anv1o1ivz608mX6SfOk0+acN5
+1nyGCfe90RtoP0c6A/PJ4+3o75cSLbyV/KjOzlkR/z0JNfY0W9cviFif7HH
lRsi9hJ/XmWul/oatyFiL9H/eHKmHfGfYL4v/e8wc3/R0xHkg3bM47eb9Uk/
NYo80gH7jjYs+TRO75f1diLZyh+Zb5LIKQ7oYTK53Y56kELebUe8TScvov48
Rrb0VfJltlkvfj9JbrLh/c58civvt1Cv186/byPH834Z5GzeL5Oc4cD6sox9
JZ7W6c/tmFc36s/t2O8WcqwD5yl2s17JLzfZ6reknywgp1EftprniT8C5IAd
81fQ7Ef8W0OOo940GP9LP/EKOYvx8jp5GvXyLWMveR+6k3zIjvOwXWQrf6Q/
/5CcZEM8t+vnM7/3kxMd6M8OkjvsOC/5gjzHDr34ysSz5Nt3Zr/Srxw1/pf6
cEL7z4H69ws5gfH1m1m/xOs5sz+pb9E54GQ75reYnP+2z5/JQTt+f3cJeTz1
6jKyFS9yPtGHbMW71Kd+ZEvvpL8dSLb6Del3riUfoZ7eQD7NeBxKnsn4GU72
sl9JNNfL+e6d5GY79OFucqod9XFsTsR+4p8JORF7iX5N1p/boOdTcyL2knr0
kN6vA/n1KPmYHfE783/smWrWK+cPT5Knsf94yqxP+r2nDct5zOKciP9Fj5eR
F9nx//NkrT+rtL34/LXkEJ+fo6+n3uaSU+yIzzxyjB39hss8X+bvfLIVb5K/
hWQrnkVPS836xf4V5IPMj2qyVa+kfteb70t/+TI514543mHiR/S3mWzls5wX
txh7SH6+Z+wt8fcBOY75tNfEh8zz+8hJ1JtPzf3xewFtD/rrMLmN9vrGxIP0
S53kJurnMWM/6fdOGv9LPfuV3Jf18Xfzfel3umwEW/2GrLcr2dIH6X+7kZPo
34vJzTbE96UbI/6XeesK8lkb7NuXnM7+of/GiD+kf4vbGPG35Pd1+noH+usb
yVb8SD4M08z6egv5kA3nP7eTe9jRD91l9iPvA+4hT2L9HEdupz8mkU9yf0lk
xf0lb4z4X/TjYbNfmb+mk4fboV+PmftLvs029pLz/bnkkfTffHIr420hOdGO
/n8J2dJHOe/L0NfbYI9MslXf8feTZr3yPnAdOZr+3kjOZX/yIrkX+307OdmB
fsxt7Cf13Ue24lX63a3a/g7M62XaPsy/SvIOO87nasgJrI8h8iLWsya9f/aP
r2l7OVGf3yTPZL14x/hL9OV9cm/Wqz16vZwf9pLz2E9+rP3F88AD5CjON5+T
rXyU84QjOv6onx3kOPZvneQg/Xlcr8+B+flnsz7pf341+Yi/ZzP2Ff932QQu
Zj50JY/h/HqR/pz18WJyJ8+rem2K2FPqWW/yPDvOk/qSh9oRXwPIqex3BpGt
eUmuv46cwXgcbL4v199E9vL6W8hBXn+Hvh/r611k5cT195CHc/3jyVb8yH4n
kfX5SBI5h/UzmXyI9nyYnMD5aTq5L+vNY+TT9NdsfX/q0VyyNV9KfzCfbPUn
Eg8LybmsZ0vIPVhPlpOt/JR4yyTn2RGfWWSrXkh/mE2Od6Jf2GjWL3r6or6/
E/OpTdtbnx+R9zvw+x0fOcuJv9cq0uxAPpaRdf9QadYj/VM12ZrXJN9DZj1S
b5vI/amvO8jp7I/eNPYUPX7HfF/mz/fIvXleucfEh/Q/e816pJ7t0/tlv3KA
3G6Dvz8nW/2S+O+wsbfk8zc6PuiPTrLVn0g/eEyv34bfL5zU+WSDfX8lZ9qg
X7/r+LZB7/60GRzFeboreR77k27k3nb0B93J1rwk52mXkhM5X11BrmG9u3Jz
xL6ST/3JTdx/HNmq17L/eLLfhnhMMOuR+jSMXGxDfI0gn82DHt9m1iPvC0aR
41gvR+vPbZjXxm6O2F/6s4nkjjzs535zf9nPVHLAhv2kkBfZ0M9M0/u1oV+e
qe1lg56n6v3moV96ktyaB/88Ze4vvzd4muy0of4vJh/Jw/ywjHwoD/G5gnws
D/3eKuMP0aO12t+09wazXzn/20wew/OcPL0+G/LTSbb6LVmfl5xmQ/9VSB5v
w7xWYuwj/XA5ucWG3zNV6e/nwX51Zj2iT43GfnIest08T/q3N4w/pZ6/TZ5J
/75rrpd43U2eZkO+tpFjbahH7eQcG/Rzv7le4u8zHS/sp74w65d8+oocQ3t8
Z+JP9OQoOY/xdIKcwvOKU+S2PPSbv5Hb89D/nzPrEX/9KTeyXzmPjCb3tuF9
TFfyvDz+3pZs5Ze8X+lGnmNDvYklW/Eictc9N7KecLwd7aGfB/259FJykM+7
LDfiX3neFebz8H+ZfyEfzBO9Kb6SHMqDv/5KTkX8dF5FtvQsvP9LriZnU9/i
yFa+hdP34WtyI/aUeIjX9nBI/vivJ8dQzxLIVj0Mv0/qGEyOtkHfh5F32OT9
3NCbyWms7yPIPWzSTy25lWz12+H3ke7byKdtmEfvMOuXengneTf0+XxFjuf5
22hyLzvOc8cY/0j+jyVnwf9bxmt/2sU+DRPIHeh39k8iJ2H+PzNZ39/Bvy/X
/rbhfGYquYn6/qB5nujBQ+Rk5s/DJj7C6931qI4HnHccnU7OwTx7yUzyNMwD
w2eZ9YfnmYdSjT/l95Cz9f7Zv8whH0E//dpcslUfwucBh+bp+GP9WUDOY717
WvvLLv3A2IVkq9+S94vP6vzB+fv6Jdr/7BeXavvwfcVyw+H2+dhz2p98X5Cp
44H7Xan3y343y7C8r12j94t5x5lNHs7fn6zX8Yn3NQdzyJl4H3l2E3kR/fui
tr8DevYSeT/eHzxm04zfa6x06Hjl+zSXeb7kj4fc7MR8k6+f55L4uMCv94vf
N1xbpPeH3zeNL9b56ZZ+8slSzR7YO6D96ZF6Xlmh/edBfAV1/HigF1X6+fky
f/25lpyAvxcYXE8emY/+uYEcW4B8epl8Nf/e7hUdv/h7u+pX9f0LpV59+JqO
lyL0K2/o64sw37+lPy+GfrSQ9/DvuXeSVSl+b9BKnlQm3899n/xlOX4fsJsc
FcTz92h7VeH5bTreamT9F/+LvKUW59H/Jj9aL/E6+WPyphD2/4n2Z6PM45sO
kLc1qW7FCwfEH9T6/Ir6f+w7mwY=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=230\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7798239677729387`*^9, 3.7798241228491287`*^9, {3.7798247739696236`*^9, 
   3.7798247904737253`*^9}, {3.779824843639393*^9, 3.779824849142766*^9}, 
   3.7798258622597246`*^9, 3.779826847611277*^9, 3.779827132697251*^9, 
   3.7798972759444237`*^9, 3.779897843456388*^9, 3.7798981968177204`*^9, 
   3.7798985831150336`*^9, 3.779898842034977*^9, 3.779900564056383*^9},
 CellLabel->
  "Out[379]=",ExpressionUUID->"d353e293-2a8b-4368-a7ea-7e2c14d4fe8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a240", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0240.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa240", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a240", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Gray"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=240\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798218099742312`*^9}, {
   3.779824960057335*^9, 3.7798249708350487`*^9}, {3.779825040543232*^9, 
   3.7798250411791563`*^9}, {3.7798268504490805`*^9, 3.779826850577641*^9}, {
   3.7798271357470636`*^9, 3.7798271387915044`*^9}, {3.7798273608358912`*^9, 
   3.7798273609837503`*^9}, 3.779897837645341*^9, 3.7798981892059016`*^9, 
   3.779898588085248*^9, 3.7798988462348375`*^9, {3.7799005674532623`*^9, 
   3.779900568427271*^9}, {3.78121865743293*^9, 
   3.7812186580322695`*^9}},ExpressionUUID->"410431aa-3ce2-4b72-82ec-\
37b442a3c0f6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH981WP/x3cnGXZnEpIw/TJMinKH5CrU1KQ0DKt7ZTLdyVJq1WRq1cqq
6fzcOWe/zjnbzn60zjKZJEkYJZNkKt9SuQ1hkYTo+znv1+s61+Nx+6fH8z6f
8/lc1/vH6/1+X5+z++qpzzzwRKeYmJjbzo6Jify7o+Kejb+MnqNiIv/12aC+
7NvlRccE8k0bVEf1e2P/9Rh58wbV6frll3yRSW7YoLo3jP5qwUzy0UZ1zaDY
+l455L4b1K1NLXO3vEj+v0aV8q8VIzJeIn/aqCZvujeuk4Pc0qhm3XHe54FS
8oeNasnWDyvuCZG3NKovdv028UgjOa9RHZvQfOXSN8iHG9XIjK9be79LfrxR
pR6p9G7fRZ7VqGqP775vahv5wUa1eY6tR+fD5McaVbfIA78nj25UWS//kHvn
r+QVjWphZMN/k32N6pPe+39fFPsc+I8w9t+NvLJRPX/nkMmbLid/EFaf3jc1
Pq0f+XhYXZu+ZtuvA8hTwuqF6daKhpJTw+qznG/7DxpJrg6riPl3jSV/HFbv
JoSfzXqQnBxWl99oefDf5Pww7JlFTgkri7LveJa8MKwi5tq/kHx9WP2xyFrA
UnJRWFnWeajrGrIvrKzVxNa7zXrFP37y4LC64tHM2w/WkeeH1cZf/tqT8yp5
TFjFRQLoLfK0sKrybk8It5Bzwypirnt3kzeux/32kwfxfl+Tnw+r8atcM7v9
RB66Hus7Ra5aj/V1mgt+dj32ez6523rs92JyeoOKmOe8q8iqAfZLJA9uUOMs
9916E7m1QX3zZ83x3beTY9bDH/eQMxqU30qvv8aZz28/eP8qVxo5oUFdZpn3
hqnkyQ3qZKIVEP8hr2xAvDxHPm+9su7+8g+LyF0bVGT7SwrIyxpUJHx6rCW7
16mXZlgr9JK7NCCeK8lrG9SoiEEbyKfWqT5WOE9vJteuU3dHbvA2eec6dXVk
ATvIp9ch3z4zfNXS7yc0/x+5/zr4s51sXwf7H9frX6ci5s3+k5y4Dnpw9jzw
xnrkQ1dyR70q72kFeA9ywjr1tuXejVeTa+vVVwusBL1+XvR+oleDyfZ67G84
eWo99jdaP2+dCllyt2IC+USd+mDulrKej5FVPeIrkzy9HvEwkxxfr56JCMg8
cnY9/PciuahOnbDC99uV5NvqVVpEIO3kD+ugR6XkrXXQ42pyZh3s3aj3W4f8
2URuqUN+bycvrsN6PjL3l/V8Ti6sUxE5/voQ+YE65bNu9+x35MF1sM8v5NZa
2Ocv8uE65PM5OeC/a5Ev8eROdYjvnuSb6qCHfci+WtXP2t5dN5A7atVHO63/
btHX16qInD6qyL3roP/3kjfXKuvbL82YSD5doyLh9Xs6eXgt8mMauahGRcIx
Lps8uQb2nU/uUqMi4XvlEvLRkLphQ8lP1YXkMTXYj5N8SQ3ir4ycUoP8qiFv
qlXxEQdvIM+pUactubhvM7mlRgUtufn8XfLWGmVVg8T0j8n9a+CfNvKhEOL3
MHlbjZL6/T352Rro46/aHiHoz99m/WKP2PngPTVqfiSgu5HjapDfl5P71sC/
/chpNdCvAeSkEOrdUHJRCPVzBHluSP1thXv/seTCEPIn1dxP7Dl5ftSeEdzw
JPlACP3HLHJbCPqyYH7UnhLv+eSHQug3Vpn9iD9c5O016AfKyQU1qA+1Zj8R
d7/3Cjk9BD15k3xlCP58j+wOQd9ayY+GkG9fkJuqVal1u7FHyANCiO9jen0h
xMNJ8r5qfP8MOYvfP3cBeG81vt+NPI3P77Ugen/5fj9yeTXWfyN5WA3WP5R8
uAr7H6m5GvVnLHlcNez3IHlMSLmt8Nk6mdwpBPtnLYjuV/J7FrmwGv5bSHZW
q4hcNuWTk0Pob1aTl1WhXrnIK6sQPxXkjiroSy25f7WKuDOhiXyySnmKrf/e
JP9cifh9n5xbpd6x0mtNq7ZfFfRgH3lLFfrJI+QHqlCPfiD3rUK/e5L8UBXy
7wx5cyX06NyF4LxK5G83claV+jHXMlAv8t+VyP9+5OmVKtLu3H8j+dFK+osc
W6net+R3xEhyUyXsPZa8Kahujvz3IHlnJfRrsmGxV9bCqH1E/2aR2yvR7y0k
D6+CXuSTb6tEPVhF7laF+u0iZ3O/5Quj9pP91pK3VKJfeoXsr2R+kfdWqoi8
bX7P2EPio5W8LKg+tuS/8gtjX6nPR8gng/DvMW3vSv7v5F1B9HtnyN8FUY9j
c6Ms9aYbeVMl+u3LyXGVyId+5F2ViOcB5O6V6E+GkrtWIh5HkHcH0V+OJY+s
RDylkk8E1QNW+H0/iZweRD14kpwVVBHztmaTa4OIhwW50f0nRwy6hGwPop6t
yo3aT+zjJOcG8G85eWoQ/qwhnw4oy7o3frmB/GGQ9YucHITevkveGFSRdLn+
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
/06c988lz2B/tpC8k/HwgrY/43sJOY/6WWDsK/lcqNdP+71MPsB66iBbei/1
zENWrEel5IGsJwHtDyf6zWpyO/Wnjmzlt5wnhclBrqdJxxf1+HWzfqnfb5KT
aZ9tOn7ssM975Fjq5Q7yUQfq08dkK38kvj4lZzrgrzazP8nvA+TNdvQbX5HT
We+/JrtZj78jN9kRPz/q5zkwH/1irhf9/Y0cw3nhT7Klt/L7n5iV4DbqZ2ey
1X9K/3su+ZAd+vhPcgLrd7eVUX/LvHYJOdYJve9JHu/AvH8VudmO+teHPIf5
k0g+Tf8nka16IPE4iNyL9h5i1ivn97eSCxyYl4avjPpXzndGki19lP5rNNnS
J/k90ViypU8Sb+PJx/i8VLKVT5KPaSuj/pLnTTLPl353Crndjv1NM+uReWW6
eZ7Mr8+Y+4k9Z5PtdujrPHM/qY+52n7Mpzyy1T9L/C7V9rRD71do/7C/Wk3u
zHhZSz5lx3mw09hL9NpLtvJLzvfK9Poc0LcgWbF/CJGt+Ba9qDf2kXxoNPuV
+v6q2Z/MT5vIA2mvLeRyzpfvkC29lPeP72v/2BHvO8g631vNeqTf3kOOZ359
QS7k+r/U8WHDvPwVOcaB+vZfsz7x93fkbOrZTyZ/ZH79Rd/Pjn7qlMkHOW8/
TU6z431PzEt8HvvDs8ltdtSXc8mtduRHV/IBO+KnGznBjn7jkpei+xV7XE4O
2uHPqwxLfe1LzrdD/xPJRXbEf5K5v/S/g8jb7dDTIWRLj2Qev41s5bP0U8PJ
YTvsO1J/n/k0mtxiR70dS862Y74Zb9YnephKtuJH6kEaeZgd8TaJnEv9mUKO
Y75MIyfb+ftJsjUfyvudmeRYxu9ssz78fRt5IO+XSz7F++WRZ7Be5ZP72hFP
K8jKjnl1lX4e97tW+9eG8xQn2c788mj72tFPlhn7iD4EyEdt8EeIPMeO+ave
2Ev8G9bxZoPevEq28kv6ideN/yVetuh4pV5uM/6W96HvGfvKedgOcoYd/fnH
Or5siOc9+nPmdxu53Ib+7ICJdzkv+crYR/Tia70e5tt35F7sV34k97CjPvxM
zrGj/v1Gvpvx9af2J/XgDDnRjvrWuTB6f5nfYguj9hf7/JPstuP3dxeS06lX
F5MtPZbziZ7ku22oT1eSLf2U/rYPOYn9zjXmeaKn15N9jMeBhdH9SvwMNs+X
fmUo2cpfOd+9g5xLfRhBtvRK6uMospWP4p8x5Dbq1zhjD9HziWSrX5F69LC5
v+TXY4VRe0r8ZpA7bLBnpvm+nD88Ra6n3j1NtvJH+r1ZZn1yHjOXHKIeLyBb
8SH/vEAeaof+LCHn0Z/LyZY+y/MLyVl8fpG5v8SnnWzll/QbxWQrX2X+LtH+
Zv5WmOeLnlaRrXgT+9eSj1Lv12v72lG/XyFb9V76y9fIOxnPm8nldujvVnM/
OS/ebvwr+fkB2aoHEn8f6XhkPu0mW/2ozPN7jT9Eb/bp+LLx9wLmeWKvI+b+
Yq9vzH6lXzpm4kn0s4Ns1R/p904Ye0k9+93YU+rjXzp+7Oh3Oq0CJ3G9XchW
fZb+9zxyIf17waro/iS+LyLbbZi3Ll0VfZ7YtxfZigfpHxLIsezf+pKteJb8
vpbcyv76BnIL82EQOZXxcIu+vwPnP7eZ9Ug/dCc50473AXeRe7B+jl4V9b/4
I4Vcb8P+xmt7cH+pZKseiH48Qk6xY/6aRLbqg+jXFPIc5ts0cqID5/vTtb3Y
r8809pB4m0229Ef6/3nk8Xac9+WSrfoi9sgjx9Me+cZf8j5wBTmB/l6l/c95
72VyL/b7ThMP0o95yAWs76Xanux3A+S+nNerzX4l/+r0fng+Fzbfl/rYRD7B
+G8265H+8U2yVf+kPr9NDrFevEuO4zzzoYknqVe7zPMk/nab50k/+bm2P/Vo
v45XzjcHyVa/LOcJR8k7qZ/thqUeHjPxJf48bvJB5udfTTxJ//M72eqP8Pds
5Gb6v9NqsM6HLquj65f59XxyO/XpAnIy9bz76qg/pZ71IFv5IedJvciDGV9X
k5s4X/Uj9+D115KteVauH0CO4XnlTWQrHuT6W8z95PrbySlcz53kAt7/LnM9
9kEOOrDfFHI55+Px5CT2p6nkPJ63PGLsg7/nIM9hvZlCTnPAX9PIIerRdGM/
6Q9m6v0xHmaTW22In3nkXNaTheS7+b4kjxzL8698bX/2hwXkrZz/VpHTqacv
k63+WuZTB9nSa5wfkeOd+P1OqbaPE3+v5ScPZT5WG39JPaojuzmPrtf7syPf
m8j1nJebyXbq62ZtX+rJ2+RE6vG7Jj5l/vzA+EP6uV3Gn9L/7CZb+ij1bC85
g/GxX++H+XPwf/x3xPhL8vkb8jEb/HGMnMB+sIPc3Y7fL5wgN9tg39/JPhv0
6y8dXzbo3T/W0N92zNNdyHtssNd55GE29AddyRk2nKddRN5sw3x1KTnLBn2/
XF/PfEpYE7Wf7L/vmuh6Zf+J5FQb4jGJ3N2G+jSInGlDfA0hhzlf3EpOs+F9
wXByL/YDI8ntazGvjSLHsz8bS3ZzP/eTW7mfifp+NuwnjWzVU+ln0skpNvTL
GeTta6HnmeQD7JeeIlv9r/jnaXKLDb83mGX2J/V/LnmgHfPDAmM/ic9F5GQb
+r0lZCseRY+Wm/vj73P1+mw4/1uj7WFDPtvJVjxKfrrJx7g+n7bPWvRfFWSr
f5R5rdKsX/rhGnKuDb9naiAn0n4bzHpFnzaSC204D9lEProW/dtb5n5Sz98x
6xf/vm++L/G60+xX8rXVxLvUoz3kbBv0s037h/H3Jdnqv6Sf+krHE/Ppa70e
2uM7nV826MmP5CTG0896v2tRD06a+JJ+80+zXun/z5DH01//KAJb/aScR3Ym
W/Eo72O6kPW8G0vOs+H9ynlkPX/HkYeiXnzQlRyySbz9GE9OxnnGRReZ+8nz
Li6K+lued6lhuewy8gyb6E3wcnIL/XUF2ZrXIuY9dpX5fmT/F/Ymn6a+9SWX
26RePNKffIrxkEgeiPwpv47s5ryTZPYXeZ/UPsDsR/R9EDnHLu/nBt6sv898
GkLejPOFef8y+4m8j/Tcaljm0dvJVr8u9fAO8jHo89mKbPXPct4zktyZ57l3
k+OZ/6OM/yL+X5tMTkd9fXWMtg/6o7YUY5/I4/8YR97O+WkCeRjPZybq51MP
H9T7pR48bJ4n+fMI2ZrfI+vd8ZiOR6z3x0nkBMyzF2Zo+9slHwZPJefbZZ55
ONPYW34POY3czP43y6w30k+/OZ3cgfPIQzPM/UWvn9Gfs97NIjehHxg1W3+O
eMh6jpyFeXTlPHJf9n/zdX7xfcVC7T+HvD/ueJ6c4kR+5ml7Y/4ZvJi8k/1l
Prndgfe1y/T+0J+4C3Q8Ofj3RuQCvK85UKjthfnm9Gpyd/7+42WdPw7omU3v
D/3ZFIfON/TLi13kQr5vLNbx60T+eM39Zb4p0f5GP3dOubYvft9wjZ+c6ZJ8
Tw6STziln3yqSu8P7+tXhnT+uqWe19Vqe7oRX/XkHsXQiwb9uUfmr382kpPw
9xoDXiHnetA/v0qO5d+rvab9x7+3e12vr0TOc9e/oe9XKvXq4zfJW0vRr7xF
nlqO+X6bzp8K6Md28iL+/zO8R97ox+8NWsgNQfl+0YfkfZX4fcBO8pYqPH8X
+XAIz28lz62V9V/wKbl1Hc6jPyP7GiRex31Ofi2M/X+h86tR5vHV+8nnN6Gf
/ZJ8pgnvTw6Sv9sI+39FHtyszp7vT9t7WPv7dfX/AumtTQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=240\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779825128730356*^9, 3.779826851074151*^9, 
  3.779827139389623*^9, 3.7798972786673126`*^9, 3.779897838674071*^9, 
  3.779898190068592*^9, 3.7798985894269767`*^9, 3.7798988470045285`*^9, 
  3.7799005691931553`*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"4a71ab5b-3f08-49f4-89f4-69a85d13d83c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a250", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0250.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ab", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0250.csv\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "\"\<List\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "86"}], "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Max", "[", "ab", "]"}], "\[IndentingNewLine]", 
   RowBox[{"aa250", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a250", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", "Cyan"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=250\[SmallCircle]\>\"", "}"}], ",", " ", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"515", ",", "545"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.779821816536106*^9}, {
   3.779825060983597*^9, 3.779825074058627*^9}, {3.7798251654498744`*^9, 
   3.779825175432871*^9}, {3.7798268536570415`*^9, 3.77982685373412*^9}, {
   3.7798271430119033`*^9, 3.779827145927997*^9}, {3.7798273645807858`*^9, 
   3.779827364762247*^9}, 3.7798978336767964`*^9, 3.7798981845759025`*^9, 
   3.779898595052472*^9, 3.7798988504647427`*^9, {3.7799005749175987`*^9, 
   3.77990057592494*^9}, 3.7812139428500547`*^9, {3.7812143039339666`*^9, 
   3.7812143117800245`*^9}, {3.7812167903105145`*^9, 3.781216867948004*^9}, {
   3.7812186616431932`*^9, 
   3.7812186622411184`*^9}},ExpressionUUID->"93bd604f-74b8-4c44-809e-\
b9ea8e5d5386"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
aCfqQ1pZLP6y3tyrxiPvx4PptQ48b/gTPZXxepQWrK+P0fFc79F0VEP9eIJu
d6J/nUC7nDjPniqLrbfsZ6bQ5n6T5+Nf1euyv322LLZe8nlaPt2sIb9eLIut
t/y+OfQgft98ulDD/lhIJ3B+r9G5TsxvqRq/PN9XqPWR/66ij2mI52razAe5
H530WA3Po9zq++R9rIY280X2f0H1ujzPo/b4NdwHG+mTGs6fdfQsJ/rDDWr8
8v66kU7UUA83q/WR+fmRvb4OnN9tdI4mnGa5/Xq7ir/sR3fRnQ7Eey/dVUO8
D6jX5d9/jtr5x/mfsMenoX6csvNBQ73vsNdfw/l2TsVD7pcf6VYN9eoXO94a
+q2r9vpoqC/XlHN+Gu6P8eWx9ZH5nVAe+z75/PWm8li85HrcXB6Lt6zvKfQh
7t/edAvHcwd9VkP/25/ur+E8TqMvaYjPvXQ74/MA3Yf7+0/0Cg3ndWZ5LH6y
njxGGw6s16jy2HrI+jW2PLae8nybQC/WhNXerJpM99NQb6bQRRruN3l0usbz
j27U0N/MoBM07J9ZdMiBelSg5ivXcx59yoH70QLazBd5/yyhm1g/lqrvl/eB
5XQGx1thf78T461U45H9umavt4b6UqUs19tHVzrQHwRUvsj4RtT6yftRg4q/
rHdrVTzlfbbJHr8D9fyftIP5uYku4375UMVD1otPVD7I+9I2O94O/L2hnd7j
QPz3qPHK+eyn13I+h2mz3qH/pNM0PJ/5SsVT9len6eE8X7+3888hXrYeCHXa
+4X7/2f1eXJ9LtNDNPQPXZZxvg6cl9fRRcz/G+kOB86339IVDtSrHvQQzjeZ
TnCgfv6ejtPQj/WlPQ48b7hzWSz+sp7fRV90YD8PXBabn+zv71fjk+ubQeez
/g6hmx3Y70Pt8fD8GUm3OLC/xtBpDvz/buPseLyNejCRNuuj/HtHjpq/zOdc
et/bqF/P0OZ+kPeV5+ixjNdMe77/EFlHVic98gI9/Z/if++MXMw=
         "]], 
        LineBox[CompressedData["
1:eJxdmnt0FdUVh1NMaYoRUVEQUKOkEmuqoUINinhEChQojSWtQYMrsFIWUgQU
ClSjxgImgbzuzOUhDwkCAppiikFQUSMigiBSpIIFFrCAijZSVFQQ0J7Z5zuz
V5s/yPq4d2bO3vu3H+dMrh4x7rd/aJGSkjLP/hP9btfpvI7bxj1pUqKf4pfN
OwNvrrhjAtyUNG0KejRungzXJc3ZlZ/v/HUJnDnLfHzG/kcpPCZpPvj1iDYF
0/31oXl9UYcb91fAfUIzyN6+qBreEZoIjwZwXtJ03nv6sdFz4Oykaf2z1Qv/
Mx/umTTfPjZ6/cQ6vb7sso+2f7MUzkiaCaMSn5WshNOT7vcquFPSNN+17srp
q+HcpPnzJ9d2TVvr7Umalk/MunPmq3Ayab7YaQ1qgk8E5nH7+HAjnJ806S2u
L7tsC1wQmnlP2Z/34Jyk6dI1rb7TTrghNI2bJ72+6EN4bmh6Fx3dcc1eeHzS
vP/NkMPLDuh6Cms2fJV1xMcnaaLl1h/z6wnN5MjBnyk/O39jRsPncHNobop+
voZPJc2b7y7+5UvfwgdDc2L5poE3f+/9H5pHb+9+3yvnlTlumzT1ne4pvjUN
Lg1Nj8iAdNgkTeTu2y+CS5Jm7tiLpzZdCrdPOj11gI+EJv/wsvkbr4S7hWZq
k11QZ3hFaGy0l2/qUhb789DDbVf1y4Zr0WNOWRzPaLm/6q7rGWcf/24PuCh0
n/eC14fu895lcXyeto8b2M/by+cD4eLQfZ4HWz28t83+5MNpXD8UzuL5w/T7
8vmI/3v+SLg/6/8jvIfPx8H7WP/EsjheYv8UtVf88yh8Ev89AacknX+fhHfh
/xn++tD8JBJ8DTyR+IUaL4nvXLiO+C+Abb622r1k/G2L4XT0swy2+TLYloMe
z8FWj6K/VfCU0ES37/6i6iX19zbj16o+RN/r4YzQ6b9Jr3/lVzYD34ZtfkXl
YvkWb39o6mz5ydwOnwpM5N7FO+H60Ez/ty0Iu+Hc0Jyy6Td/r9dzaKJ0b39Q
9bY/0zrsiNdj6OrDJ/Dm0BTfeuA3VZ/Bx0ITuafVFxp/qT9f+/gG5r7IgDNw
Zujq1/fwtNBE1eH0eeWOKwNX/9Lg8tA8EBXg9PLY/1H5GnMRbPN5tsWPL4Vz
QvOcLd8jOsATqc9Xwra+ROXqns5w+9D0fenLc7u6wONDc09kYDZcgF5z4Cb0
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
Nmz1FL1POnYDvCvh6ntX9U/0fi7npto4npJP3WGb/9E8NflmOM29j5zXA85n
P3orbPUk/fA2fV6U/z80uh457+kN1yfceW4fuID87+vj786jg/4aj8g/awbA
bdy8s2eQri96/LeD1b+i17s0HnI+MwQupx7+zl9Pv75b7ZH8Ger9494Xbr0X
tv1M9DMMtvOyxLNI1xvlQ7cR+vxoP3N3MWz3s1F6TRkJn2V+GQWXunn6tdFw
gzsPODgGbqT/jIM30u8e9P52+62+E/x6Avd+8U/K0bg+YzK8jfnvz3Au51GP
wFMCeX984lG4kPcFpV7/bv/T7S+qD5kvp3l/Bu597ZNwNzefzC1X/0m9n+H1
4N7X7Kv063F/X3G22ucH5x8J9Z/UsxBuG4oeh8/yenbz9V/mwBmh2w885fXE
+8D5Xn+c3y/0enX6+FEdvM/9fUOXZ+Ad7ry0/1LYJGWevP9Zr5+k8/cK73/3
/v/553y+uL832loPZ81y9WKVv/8s2X9d8Def/7NkHrvhRR/vWW5+XuPjNdvl
01ofjzluvnjZ18s5cp77wqs+H+ZKv3r/NV9vnnLzyhu+Xsxz+/sN/voFrn5s
9Hpd6PrdJl8fF7m/N9gM37JYrq99F059xv19wDY4e4l7/nZ46RL3/B3+fstk
/Rd+4P253J1H/8PX75Wi18G7fb7VO/s/8vr5q+zHq/fC5ze4eXY/3Nzg3p8c
gLusdv4/BL/woqufR+CyNW4e+5fX01rZnw84Bl+/zvwXWnMz/Q==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {515., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{515, 545}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=250\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           RowBox[{"table", "(", 
             RowBox[{"(", "\[NoBreak]", 
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
             ")"}], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.779825068749305*^9, 3.7798250747831163`*^9}, {
   3.779825168818983*^9, 3.7798251766169276`*^9}, 3.7798268542459235`*^9, 
   3.7798271465361557`*^9, 3.7798972811485343`*^9, 3.779897834746728*^9, 
   3.7798981854919615`*^9, 3.7798985961608834`*^9, 3.7798988511647954`*^9, 
   3.779900576566717*^9, 3.7812139443356156`*^9, 3.7812143134050455`*^9, {
   3.7812168406532383`*^9, 3.78121687186769*^9}},
 CellLabel->
  "Out[254]=",ExpressionUUID->"b95f65bf-7453-4299-b11a-db7a7c8b28d9"]
}, Open  ]],

Cell[BoxData["|"], "Input",
 CellChangeTimes->{
  3.779827146276014*^9},ExpressionUUID->"3c77b3a6-54fe-4240-aaba-\
f8d58f39dd35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a260", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0260.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa260", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a260", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Red", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=260\[SmallCircle]\>\"", "}"}], ",", " ", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.779821822300395*^9}, {
   3.779825080866009*^9, 3.779825093289818*^9}, {3.7798252160794234`*^9, 
   3.779825219928502*^9}, {3.7798268576716423`*^9, 3.7798268578165607`*^9}, {
   3.7798271522846565`*^9, 3.7798271552641907`*^9}, {3.7798273685534344`*^9, 
   3.779827368672694*^9}, 3.779897828916513*^9, 3.7798981800750656`*^9, 
   3.779898601780401*^9, 3.779898855764448*^9, {3.779900580832553*^9, 
   3.7799005813566666`*^9}, {3.7812186654092875`*^9, 
   3.7812186661207867`*^9}},ExpressionUUID->"7e78ed74-ba33-4e96-9f5d-\
8157ef841352"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
SET388PhdOL9QnhYtfrzUjiD/LvcjSf+yYK7IqpPV9v5R/R8+1q4PKL1/Ea4
IKL79YnwgYj28zfDhyNqv1y4N6LnA7fBORHdX06xXO1Ni/83FTb6Ivuxu+Ft
EdXrP7v7pd7PdNclH2bDFRGN13lwXkTr7yK3HtG7JXBxRONpBZxdrfW1Ak6p
1vUFLEf0vK7a+VfqZz2chb+b3e+l/2uD94e1H11n7RfWfO+AIxH13wZ4dET7
nWcsV2v/vhH2qlX/X7D2D+t57svOnzLfbmcvme8bNt4iOt+34D0R3a+97Vj+
7oYPhlU/9jp/iN7vt+OF1b4H3Holfr6Ax0e8uLynfw13hzWfDtnnR7T/+dHF
v8RDwhLlWETPjxLhsojq3Qnw4Ijq0S/gkRG110A4O6L+PROOhDX/z4K7wro/
GAb3hrU/GA5vC2s8/tpyRPX8Ejgrovl2GXx9WPXtN/DMsPpr9BLfHjK+B6eh
Jzcs8e0j+/EJ8Oaw7u9ugjvCuv7JsBfR+nwrnEl858ODsP9dcFFE7f9HuDis
+TgdNnoj/cZ98I6w6s0suCSs+VUMm/iQ9zUl8Kawvh9b7OwterDczV/6wVVw
FL2rgo3/pR8I2/FD2u9G4c6w+rPJzUf2Vy1wbljj6S/wMNbzOGzyQ9bzJJyM
XnTCWWHtp7rgtLD2p8/B2WHV+5fc+kS/X4VNPEr93gpvCal/3nT3S37sgk3+
yvn+u/CusO5333frk376QziAfT6GBxFvn8MJYdXrfmdP8fdBO7+wvg/9Hh4f
1vryE2z8I/3qgKW+PaTeHg9vDun+5KSl/u/l/VcKbPRV9O502Oid6PMv4ZSw
9qND4TLy8VzY+Fv68QvgvrD6L8M9L26eNZlLfXtI/zAKTqA+XbnUX688b4x9
Xkifd52db0jnNw7uYn7ZcA7zy7HzD2l83QK3h/W88HY3Pzn/uNNySO33Bzib
eL0b3hPW/mAGHAtrfzgTTg3red2DcAn+ne/8I+fbi+DZYT0/WgonhbW/WwGP
Dqs+VMDpxF8QTiY/q+FoSPWu3tozov1cM3w4pPneZseLaH6ss8+PqH51OHtI
/djg/C392zNufNHjjc6/4q8X7HXq/cvOP2LfbriQeN9m4yGs9fgtOJH8+Rfs
YY/34Iyw9n974YKwngfts/ER0vP5Ay4fRP/6XHzL+dZX1p8h7fcOwcOI3x/c
82X+R+H+kM7/mDJ/fuLPJLgzpPUmucy3n5xfnwqXhHR/fQbcHlL7D4F7Qqp3
Z8P7Q7rfPq/MH1/iOx22+pBR5q9P9GaEfV5Y98dXlPnrlfOG38ImvsRe18Db
0Nfr4LyQ+ns8nEy/9Hv4YEj710lwJKT17H/gorD2M7e78aU+/i+8KaT97R9g
owdynlYE5xNf98DFjHd/me8vGW+Om5/kx3xnP1nfQ+5+Wd9SuDGk9b3czUf+
VsIJ2DMIZ4Y0H2vceuU8qt7aL6T7sTXO39L/tcFJIa3n6+zzQ7of7IB3BbX+
bIArQtofPguXh3T/uhEuC6kevgBHic+X4dEhrd/dbr01Rm4/2QYXhrQffQs+
gv6+7Vjs/Z57vrz/2Qtns/59Nv6Dqh8H3PxE7/vc+qW+feWeL/nyrfU/evWD
je+Q9ltH3fxFX45Z5j9f9o9JsNEbie9k+GBQz19Pdb8Xf5wOd4dU34fAI5nP
0GX++DKf82ATP9L/psOlQa3HGXAa9hkBR4Nqn1HLfHtLfv8WzgxrvR4DeyHV
k+vgDPw1Dk4OqX5lu/Gkvk1a5tsn3t5U3gIPQ29uh019lP3NnXBRkPoHdwS1
v7kbTiB/Zjj7iR7NtBxUfz7oxpP90Tw4FtT95yJ4f1D1Yyl8OKj7gRXwYOZb
AWcx3wA8KKT9ejW8Jaj6UgebeBd/N8O9Qe0PWq29se9aODek+6PHnf9F79bD
BUHdz3bCe4Kq53+D24Man8+78SVfXnL2Er14DQ4Edb+01a1P3jfsgPux/y53
v6znXec/Wc/78LoQ/Sds9FrOZz629g1of/W5e77U1//AB4LerPiB0EFnf8n/
7916xD8/uevSPwxYrjwjpPXyODiJ+D/JsdS3U+C+oOrVoOW+fWW9g+F+9PNX
y/35ST92DmziXc4bzodNvIqeXwibeJJ8vnS57y/p7y9f7vtb/JsFd6K/o+Hk
oOb7tXAq9rgR7glqfk1wz5fv3W6GN6EHk2ET7/K+Iw8uJ57z7XqDql93wSae
ZL/yR7cesdd02OSjxPu9sIkn0ZNZ1j5B1f+5sKknUm9L3PxFj0vhIwGtD8vc
/MWeK2GjX9KfrXbjSb6EnH+lH6mFs4O6329w/hK9isElQbV3OzyI+HvUzieo
f59w9pB8ewq+PqjvK/8KpwS1P/w73BjU84HNbv6yP93i4k3i93U4H3+94eYn
++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
/lzh7CHjV7jrMn4ANvko8Rlx40u/UQePZv/dBA8if1ucPURP/wJXYP/H4GT6
oSfhTOr303AO/eVf3fwknjfBR9DfzbDRVzkv3gKvIz9f/3/x94azj+TTTnt/
le7n33b2Eb15D84m/ve6+BR77XPxIvb6BE5i/97n8kP0s9/Fj/R7B+EC6tn3
zl5SH39y16XfGVCpbOJD5nscHKH/PRG28XVKpW8Pie/TKn17yn7rzEp/PWLf
VDiV/mEYXEb/lgaPJL9/XemvV/rriyt9f0o+jLC/D2o8XFHp+0POf34Lz6Yf
ugY29VXeB1zn1if1c1yl72/xR3alb09ZXw6cyPpy3XXRj9vc/bL/mgIbPRL9
usvZR/JtGtxfpef70+F2/HcvnMb7kVmw0Qvp/+e658l5Xwk8mvwotfbmPKwM
Nvop7wNX2vHxdyXcx34vCPeiZzXOntKP1cP2vK7ZxYf0u21wQZXu19fCCZzf
PA6Xcj633s6vSutjJ7wLvehy90v/+Jyzv9TnF934Yu9X4G705R9wPvVqu/u9
xN9O5y/pJ9+By9Gj3c5fUv/3wkaP5TxhPxxAPw+4+6Ue9sEz0Y+vXH7I/vlb
l0/S/3wP2/OBn+Es/D9gte8PyYfjYKP3sn89ybHo0ylwAedVg+BU6tlgeBDn
4alwGfF1DtxOvzMcTuT86dfwen5/CTyM31+22l+//P4Kd11+fxVs9m8yn2vg
wfz+OngX8x8Pj2e92XA/9smBM4Jqn1w4hj1vg/Poh6bA11Nv7nLzEX9Ng9dV
qR5NhxvpD+6Fy4mHWbAX1PiZC2dTTxbY3/M9SincQXyW2fkEtT8sd9elX6h0
/hQ9DcJGv2V/Wg0fZL9VDycH9PudZnh/QP+9Viu8hXxc6+JH6tHjcDHnzU+6
9Ui+d8JJ1NsuN1/R101wKXryImz0W/T4Fedv2X++Dhu9ln5uu7Un/c9O50+p
Z2/DmcTHbjd/8fdeuBf/7YNnsF/7BE5jP9kHZ9EP9tt4q9LvFw7C+dj3e7iC
/v4n9zzRu/+ij8qq0v30cbDZD4q9ToR7V2t/cDKcwHnaaXAZ+6szYROPou9n
wXvIp2FV/viy/jQ4g3qaDhcQjxlwCfVpRJXvD4mvUXAEPb7SPV/eF4yp8v0j
9XKsm6/s126Ec9i/TLT2YD03u/FlPZOrfP/IevJgo8/Sz+TD0dXaLxfAxeh5
oZuP9Et/gpOoL/fAxk7yvcH9lqn/c+Bc9g/z4dIqjc9FcCH7p6XOH6JHK9z8
9d/nuvHk/K8KLqrSfI648SU/o86+Mr9GZz/pv1rgzCrdrz1i10c//Kjzn3zP
9IT7vdjvKTiwWvXpWTiF85CN8Cb6txfgLur5y7DRJfHva85eEq/bYBNnkq87
YJM/Uo92WUY/e5x9Jf7ed/6WfuoDOJt8+gjOwx6fOXuJnnwJpxJPX7t8knpw
yNlb+s0f7Xzp/4+6fBF//VfAt5+cRyYG/PHlfcxxAd+f+r1twH+evF85Ee6u
0nqTDBdovXj9ZDinSuLtyxQ4UfXntNMCvn1lvNMD/vxlvDPhTv1b+ku4XM/v
2s9yvxd//cqNHzdv39lwkq7/1HPhAPqWZrlK6sVt58PFvF9OD/j+kv9dyoVw
B/udDNjke/x90oFLAr6/RN9HwGb/H38/l3k5nEJ9HwX3aD819zewqSfx95H1
V1r/sB+9Ct5EPbwanqn5f6wHD+a8Zyxs9rtynnu99Sf5f6P1t/o/NN75O26f
ZybApp7F+52ebHiH6uEPN8G9xOskOML5zGS4ET28xbHowa1u/ZI/t8Gefi+y
9Q7nf4mfKfBs/Gn7vl6tFyOnOv/E9zO3Frp4ke8hp7nrog9FcLv2089Nd8+L
nwf0zoBj6PV9cBfnx/dbf+r7wRtnwQc1HooedPkUb9dXzXXxLv3fPJs/nEct
gE29jbfP/Qths/+T/Cx18SbrXWLjm363zNonqO9rl8PX6/uNaLmbn/57I5jz
rD0VNn71feSR1W594t+giz/RszC8TePxrmoXr3F7Lam1+cP7tDp4F+8DG+Aj
7G+abB+v32MfH4P79f3QBa1Wf/T7nvHt8AztJ//0F+tffV+/ap3VH/1e+fHH
HEt8ddj79d/X9D1h7aHfp/xig52ffk95ydM2Hvie/hnrj7Dm01/hBP693d/s
8/TfZz35dzhb/z3Um89ZvarWfuUFO79q3d+/ZPOtRvVji31erda7V+39Uf3e
oNv6p17uD/zD2qNBvw/YBo9u0vG323hv0vF32HhZI/M/5Z/wopieR/8L3tki
8XrTO/CcNl3/u/D57bIfX73bPv8R7Wffh5ev1fcne61+Par2/wD+8jHVz/3w
6g7txz62ev2k7M8nHICHrvf+D3E9aYk=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=260\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779825094034484*^9, 3.779825226682264*^9, 
  3.7798268583323765`*^9, 3.7798271557545176`*^9, 3.7798972844006004`*^9, 
  3.779897830006753*^9, 3.7798981810656786`*^9, 3.779898603050357*^9, 
  3.7798988564945335`*^9, 3.779900582291172*^9},
 CellLabel->
  "Out[385]=",ExpressionUUID->"de0f6d2f-5075-4cad-8f1f-9da37e0f847c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a270", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0270.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa270", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a270", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=270\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798218290820103`*^9}, {
   3.779825240067571*^9, 3.7798252589393225`*^9}, {3.779826861112287*^9, 
   3.7798268612826242`*^9}, {3.779827160696325*^9, 3.7798271632788525`*^9}, {
   3.779827371955951*^9, 3.779827372141055*^9}, 3.7798978238603745`*^9, 
   3.779898175330388*^9, 3.779898608555151*^9, 3.7798988611945925`*^9, {
   3.779900586556505*^9, 3.7799005871153045`*^9}, {3.781218669096713*^9, 
   3.7812186698003035`*^9}},ExpressionUUID->"a3b16936-21b5-4501-908e-\
a2c774a762bb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
5PcX4ETMG18K29zvv1amfvy9xifFz09gU69pf/SrxhvV398lXrBf+FOvp+//
xK1gzkP+dVzh2pvm37PApt5SfTwXXI3+3QWciP3ahStce1O97ybreXm/fxm4
BfNezxWufSh/UnV98n/aCte+FI99wHWYB/rp/XR+3x+cgf3SwBWuP+h8Z7Cu
T/PXMJWXvk80UtZHvGWCk/G8LHCJl/MxW/Tz8fPGg9sw707Q+0m/SSKPl/cr
k1Ue2r9OVf3IntNlPS/X19ngIuwXC4UxnxYpU/wuUf2p3i8HV6F/+UQfxEsQ
bPKPzoNLVX6q1xXgfJzvPSvX43xlLTgd80O1sJfrRQ04E/mwQfzr4/6+CZyD
/dNmjR+y1ztyP/aX74NN/aL3jx+Cm70c7zvANvK9Ua+nebtJ9Pdzfu0T+3lZ
/gOiL/bLX6q/qL99o/Yhf3+v/qd69rM+n/avv4o/PDxPHZf48/J5+0n1H21v
455xr6f58HSwiVfqL2eBh3s5PzqBbS/HT5dn3PVp3rgQnAF7dAcn+difl4Eb
PNxfU3Q9qv+p4GzMz2nKNP/20eupnvaT53t4P34LON/L89RAsNnfkX0HizzI
32HgOi/325HgTC/vbzLB6einWeBm9INstQ/F23hwIurPBJEH+TJJ1sc8MRlc
7eX3O1NEP8TvdLEX9qezwaleXq9QP6f1itTeJF+x+pPiabnah/arXrDp16Rv
EFzr5fOUUrUf5Ve5+pfmyWf1eqoPa8ReXvZHNTjex/uvGmHMG7V6PdWbTbIe
5ok3wUXYX7wDPox6+Z76h96HbgdXefk8bIfEt5fn893gEpxvNqm9KL+bNR5o
PvtC9aXzki/Vn1Qvvtb8oXz7XvOB5pWfNF6pP/yiz6P+97syxdef6i+K11Mq
D/W3jh7I7+X9W7zHtS/Z51yw6ff0/bvOHte/VK8uAGd4+Xyim9zv5/50KdjU
N5pve4JN/6N55yr9nOrpteDjiO90cD3ip6/H9SfNKxlgU//ofPc2cBzqwyCP
aw/qj0M9rj/JPyNEftSv0eA81POxYNPPqB/dp0z59aDYw8vxm6P6kD1zwWa/
SucPj+nzqN49Cc7HvDdN9aHzmFlg43+qx3NFfy//fRp82MP1Z7Hah56/TPTx
8vM94AbUW1v8j/OBsPqP5o0yXZ/23yv1esrf1eAWL9fTF1Q+sv9Loh/q/Svi
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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=270\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.779825255139038*^9, 3.7798252597179985`*^9}, 
   3.7798268617127385`*^9, 3.7798271640042896`*^9, 3.7798972875609045`*^9, 
   3.7798978251966476`*^9, 3.7798981762959723`*^9, 3.7798986098200417`*^9, 
   3.779898861939726*^9, 3.779900587763536*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"a25f8e3a-9e27-4b46-a72f-8abcc311f9ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a280", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0280.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa280", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a280", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Blue", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=280\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798218353381987`*^9}, {
   3.779825272948325*^9, 3.779825293304224*^9}, {3.779826864823938*^9, 
   3.7798268650402746`*^9}, {3.7798271681719117`*^9, 
   3.7798271710589314`*^9}, {3.7798273750913897`*^9, 3.7798273752828283`*^9}, 
   3.779897820196362*^9, 3.7798981702761364`*^9, 3.779898614868241*^9, 
   3.779898864861738*^9, {3.779900592141143*^9, 3.779900592804927*^9}, {
   3.781218673105383*^9, 
   3.7812186736808405`*^9}},ExpressionUUID->"7891a1b9-2594-4241-b1cc-\
82b438147dd2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH2cVuPWx+ckDJKRMCoMFYNkQkwku1CpZDrlGJRnSpKkJr1Nr6b3qftt
3/fM1CgyFI30YaJIopCMUzE6ySQ9RSGEIimi59q/9Vt7fZ7jnz7fz3651vta
17XvcdGA4f98sF5aWlr7E9PSgn83PnPba792GeWlBf9NnOvtbHHSlPJe5Noy
78CSDd2vv4/cZ65X74pZ52wfSG4112v8Upcvxw8jp5d7l7ZJX9asiLy73Gu3
ombM21PIGXO9HtfP7lgQIWeWe/evvr1BvXLyoXJvxE2nfrZooXKZN23dv5+5
rYqcU+5t/+j33nuWk7eWeft7rbpgxpvkoWVep4Kvay9+n1xX5vXZ89yC9R+p
PGXe0oNb7hhQp/eXe2tGlWbW/4p8oMxrFCz4A7lxuTc4+ePEm38jbyrzJgQK
/00eXO59cvGOo5PTRwvvLRP9G40Or0+6ue39q5uSvTLvP3cMyMhvSR5Y5l3W
N/Hub61Hh+s9PsRJlEvuW+Z9WvTdJW06kbPKvcD8H3UnV5R572dVPzb4LrJf
6jW9ynnwf5TLxJ6DbT1HhTc9Rl5V6gXm2jGB3KLM+2OyE2CGcrnnrPOvhgny
xDLPSZO+rIJcn/551q6ff+/AG3e9SG5W7r32619bi1aSc8u8BkEArSVnlnnP
L1ifVV1Dbl/mBea6fQv5Wr5vBzmN7/va1suLzRvW6Gfyk6Ui3xHyilKRr96Y
0J7Q9zRyA+p7NnlFmReY59QLyRWMx+wxoXw9nfvaXU0uK/W+/fOFg1tuJNeV
ij9us+vPuvT6qyd5Tal34647Y/PyydWl3nnOvFcOIE8v9Q5nu4B4hHysVOJl
9JjQX+7tyR8nk9PKvED9aSX2/iB8MlPkmpQXGeokXEBeXCrx/JzJ2zkw6Evk
TaVecxfOQ1aNCe15a/CCd8itSr2LAgE2kg+VSr59Si4u9S6c8UOvVf9LHlgq
/txH3s14O6j2LvUC8xb+SV5WKvXgxLHC9UslHxqSa0q9yiYuwDPt+jvOva9d
NDZc78vxLkGv0PtTUq+uJd+aEv06kDOpX5exoT5VrtzN7kWenvI+HPP2003u
Ix9JSXwNJKelJB6GkWtT3vCggIwlF9B/U8j7Ut4hF77fzSEXlXr5QYEsI1eU
Sj1aSK4qlXq8hHwsJfZeTl6fkvxZTT6QkvxeT15DeTaTC1Miz2fkrSkvKMdf
7yYvTnlPutc99r3qmxT7/KrypcQ+f5FzSiWfTy4K9UW+ZJAnpiS+m5C9lNTD
5uTsUq+lU++WK8nrkt7mTe6/68iNU15QTu/1yHtTUv9vJ49Kee7pyNDetl4Q
Xkf7FoX+Rn4MIlemvCAcGxSSNyXFvuPIDVJeEL4XTCN/kfKufOWpn5dEyRVJ
0WeuypOU+HuaXJeU/HqhKLR3RuDgV8jRpHfMlYs71pAPJL3Frtx89r6+P+W5
bpDd92OTB/6pI9cmJX6/ImemPPTvH8jrk1IffyPXT0n9+Zs8nfZIHxeuPy4I
6EZkPyX53ZRcnBL/thwX6oP61Zq8Pyn9LpdckpL+2XFcaP+/Xbhf0p1clZT8
6TPu/9vz/nGhfwJ85SFyi5TMHyPIQ1NSX8aTDyUl3qfbepg3YuNC+8Ef88gu
3jEPVJJXJKU/LDUO3L3hVfIXSaknb5FHJcWfG0xf1Lda8r6k5Nt2souHhe51
3feYvRHf+8mtUhIPh1U/Pn+cvI7PnzJeuNqX5xuR85OyfrPx4fvxfEu9n/Jf
Ra7zRf5cex76dyJnp6T/dCdXMp7vGh/qX+HCZ9395Ftp/8H2PPJ7xPjQ3/Df
BPLgpBeUyxXTx4f6Yr6Jk2uS0q/mkfskJX6eIfdNSn1ZSu6a9AJ3Zq0gH/G9
+U+4/94ir/clfj+w599z6ZWoVXv5Ug8+J5ckZZ7cQ/aT0o9+JNdPyrx7mHxt
UvLvOLkwKfXolAnCmUnJ30ZkV09/mugM1Iy825f8b2kcjDt3XjUhtIf4i5yV
9D5w5bdjJ32fL/buTk5PetcE/91FPuRL/bpf3+eLvQZPCPVF/RtBzkjKvDeB
PDAp9WL6hNCf6AcxsosP9O955FbUt5LcjPouJe/zZV561Vjyy+QPytuaDeQe
jI9asovfj135f2472cUT+vMe8jFf/Luf7OIT/x4mr/Nl3jtOrvClH6dPDO2D
ftNoYrg+5u2mZBcvyIeW5Epf4rk1ucqX+STX3od47Ej+wpf5sju51pd46kPO
9b1/uvD7oR/Z5Qf6wUNkl/+BeWsLTR7Ew3hynu91DQw6jbzGl34WI++mfeaS
u9I+leRi+vMFcuOk56x71c5XTF/pX6Yf6u375Ft9L0iXKz7W+5PeEeeuBXUq
H/vNV+RlSfHHDyYP4ueQ6ReYo9ffap+krHfyJOGipKx3Jnm/L/2piV73ZZ5q
MSmUF/pdSR7oi37XkZf5Uk89cjr7++32POzZm7zC94LxJdKXvNf3gnD5/UGy
yz/sd4dPCv2N+l1EdvUpCKe2U43RPyP2POKlfFJoD8xnC8kuXjBPLyEXsN4v
J7v6I/PhpNB/2B+sJzfwvWC7OGUzOYv5sM3uh/136/tZb74j19Eev5Kzfa9b
UHCPkdOSXsOgAJ04me9PeucGA9wZ5Gzme+bk0J6oTxdPDuXHvHkF2dUn7H+u
Jbv5YHRQsDqQ3TwC+bqQXfxCvl7kHNaze8mufiDfHiC7eoj6++jk0J7I7zEm
H+xXTC7ivDWb/AXjKWX6Ij+fJHtJqV/PkfPo35fJaT73X+S6hNSfd8iLfW9s
sMBGcm1C9kdbyS6e0Y92ktv7Mu9/S+7jy/x0QNdPiD5/kF08QZ8THg/fh/1T
A/K6hOx3ziGP8r1gXHvqQnIPX+bvbPJE1tOryYWMnxvJ1/pSv2+z66iHPcmV
7I932/qYJ/qTcxOS70PI+dR/5OOhPRFvk8hVccmHmeQM3/tlizOQTy5ISP9+
grwvLv33WXIL1vdl5Gzmz0pyRUL8/7bKk5D5qMb0RT/45PHQ/o8GDfFzcklC
6utesstPzEM/kgcn5Hznd/JQX/pjWrHwEa5fn/wk69Mp5CzaryE53ed8QvZ8
mf/PJeckpN81I9ckJF+yikP5Yf+W5DJf9nOXF4f+gX6tyeviEi/XkLsmpN7m
kgsTch7WnuwnuJ8oDu0P+3QmZ8al3nYjF8dlPrxT149LPvfR+xmf+bY+8rEf
uT3r3QDyqoTMO4OKQ/9gnnqEXJWQ+wvt/bh/FLmA94+z9+H+yaof759qDHlm
kVdwHozadcjvk938BH3LyXWMn/nkZexHC9Vf7C+L1J/sd1UWD8ifZeRWzO/l
5Pq+7BdeI7t8Q31fTd7NeFhr/kf8rNf4Skh/qVF7xiXeNiv7Ul+26PsTst/f
pvEYl3jeYfGOeXe3yp+QfrhX/ZGQev+drYd54Se9Py7z1C8mH+rf7+Yv9KNj
5MGsB2lTwuuBusNOJPsx2W+cSnb1A/2tIdnlX1AOB56lz8el/mdOCd+P/W8z
8u641O+L9Lov+/mWU0L7wv+XTwnlhz+vIlfHJP+uIa+jf3LJhXGpTzepfHE5
3+5Iro1JP+9MLorLfr07OTsu8/yd5CMxsV8f5bicD9yj8vmyv+ynz/veoOC/
AWZP7McesvehXj+i8sel3xeSXT1HPoxSfVlfxpErE9J/J5s9Ue+mmr0QT7NM
XvTXqN4fE/18XT8m53Xl+v649M/5ZBd/8PdCkw/z3yJyTUzm0SpyBuvPMpMP
/ltu/sG8s5Ls4hfz+2qzF+r/Wr0/Jue575Er4iJvjcZjTOTdrPdT3k8s/rBf
22b64t8dFg+oH7uU41Lv95q9YN99ZJe/iJ8f1T9RLyjv2b+QDyQknw6TW3D+
+dPiG/GQNpXvi8v5Uf2poT1Q704hZ8SlHp0+NdQP9mpE9jg/navvi0n+NyWv
isn+IGtq6C/MBy3JLn8Rj5eRC+JSz1ubPMi3q8lFCalv15Nd/MJf7VUe1h9P
n49JPbmNXBeX/Xg31Scu+7ueKh/17012/kN/vls5xv0J2fVD2L+/vj8m9n+Q
3ID5OITs8g/zxnByDuvNSGPkV5HaMy7fayaa/Pg+NoWcwXowk+ziHfPgHHse
9S6h9o7LPFBKzuS8W0HOY74+pfaOy/7qGXse8fS8rhcVfV40eaDPy+TKmOiz
wuTHPLVK14/LfPqWrYd6/y7Z5Rfq9wZdLyH9eyPZ5RP88zG5hPV1K9n5C+f7
2/X+qOx3d5JdPGKe/ors4hX2+Yaczn76g8obk3p9gOyzfx0ye+J76FGyiw/0
l79UnrjMq/WmCbt4R789meziEfuT06aF8uH7VwbZ1VfUu7PJdVGpz+eRXb3A
PHoB2dVP5MPF00J7YR6/lNw1Lv5rNS20V2Cep3PIrh5hfmhLrmT9bmfy430d
yFWM71tUn4TI18X0gXw9lKMiXx7Z9VfE111mD5wX3ktOi8v5x/3k3JjY7wHV
l/H6kD2P+WCoPY/5sJDs4gvndaNtffh3vOmH8+3Jav+4nB9NI7t5A/PdLH0/
+1+UXMz4S+r1mORnObkoJvVuPtnlA+a5haYf8n0ROYf5UUXOZ/1aRnb9D/1j
ufo7KvPbSr0el3q82uIJ/lpLzmK/f0/9HRX71ph/Ee+bNH5i0o8/sXhB/nxq
+sMen+v1qMx/u/R6XM6D9pCzY3I+v8/8gfq33+IV51sHzb+Y9w7r+xMSv39o
PFP+46of5T9hOtejP9PJtZzvGpBdfuP8+kyyiy/sr8+ZHtoL9m9CrmO9u9De
h/12c1sP8Z09PbQn6kMrZdabNuScmOyPryMfiMt5ww3kPNrrZnIR6+st00P7
w99dbX3UjzvILn4wv/bS+9nP/qXrRWWeuZfs4gn98X/0ekzm2wd0/Zicpw1W
+7E/PErOiMl6I8heTNYbQz7C/Bhv+kC/x/V56jeNvC8q/b3E9MO/MX0/7Zkk
u/xHPs5Vf8bkPGq++jMm+7GnyS7eMP8t0vfHpJ9XkV18YT+4zOIF/Wc52fVH
zIevqTzcv662+EE9XGv2RXy+p/pGpX/X6P0Jb64rt99u0vU4P39CrmD93Wb2
hb0/N3/g+88utQf132Pxhvqxz96Her/fGP3tIDmX+fKb5Qfq1R+aD1GZt46b
/1FfTpgh7PID+8d0cjHju8GM0B44fz1zRrg+/HE2OYf1vQl5X0TkuWBGuD7k
aU52/Q3zbzbZxSv6casZob1hnzbkGtqnrb6f+X0DuSQq/boDOTsq9eQWsssP
+KuLyh+V+tXD9EN/66Xvi3nBeBO7y66j3txLdvmO/c395GrWtwfILn8w3zxE
zmX+DCV7rEeF+jz9OZrs6hH2R+PUHtx/TiZncr81jeziB/uBWWSXP5A3qvan
vL7aOyrzern5B/XlCWP4e6HZA/PBs2Sf9l1CTuf+6EXzL+pdteofk/3sCpWP
9fwNtRfj823yKubLu+SurBcfaLzFZL+0UeM1Jt8baskFtP9W9Xdc9Nluz0Of
nRovOn+S3X4T5zPfkPM5r/1g8qK//mzxMDI4EDqk+nOeO2r2gn/+MvkwP9Sb
Kez6CfrlSeRaxv9pM0N50N/OIFdwfmtMdvUW+maSi1g/z58Z+gfz2EVkVw9x
3nCJckzq+eUzQ/8hn68iV3K+v2Zm6E/4N5dcwPPK9nY/8r2j6sd62Jm8Kir5
1Y3s4hW/d7uTnMf5vLfpj+8d+fY84rmvyY/61V/twf3Kg2qPqNhrCLmK8T5M
9YlLPRmp9ud8MtbuR7+daPZBPS5WfdkfZqg9aM/Z5JyozGdxZeZLyvTDPDJP
n4/Ifn8BuY71qtLkg70XmzyIvxfILt7w70vk/Kjk2ysmH75Xvm72x3z4pumD
84F1ZFffsD9db9cRvx+SM1i/N5PdPID98BaVn/uZbRaPyOcdZNdv4M9dFv+Y
R/aS05jv+zSeorI//pHs8hHnFwf1/azHhzWeYjLf/mHyIx6OW7xg3jlhlrCL
hyD8b0wnZ3C/2oDs5m2c/545K5QPvx852xjx1ETfF5P9ywXkauZnc7KrX/h9
zqVkV29Rr1qRKxmPObNCf+E8ra09j9/HtCMPjsj1DrNC++N6p1mhvdCPupCL
eL27ysfrecaoH33Ihbx+z38930+vcx4eoPaKyvVBZJe/kO8Rck1Erg8nV/D6
KHI29/dF5Cr2p0n6PO03xewP+84ku3iC/eeQ86IyXyXMfvBfKbkgKv6tMH3g
/yfVP1E5X37G/IX4eU7Xj8p+fan6Lyrx95LKw371qsYX69XrFi+I7zXmb8T/
OmPUu/fV/lGZZz9U/0dlv/IReR3PN7eofqynn5l9sJ/fYfpiXt5t9sT+fC/Z
4/nhd+YP1PMfya6/YD/4i/pnjtSfw8qct/60fEL9Ok72OS+cUBLqi/qXTq7Q
/SHZ1Tf05zNLQn0w752tzPmqCTmd+5cLSkL7of83Jx+IyHx7KdnVM5x3tSLn
Mp5z7P2Ip7b6PsZLO/I6xkMH8pGIzLOdyMU87+hSEtof/uxOLuF+Pa8k9C/8
1YfsRb3g+K7xPeQ8zoP9SkJ/o94PUHvF5PvuIF0/KucxQ0pC/8Hew3V9zqMj
7Tr2X0Ulof/lfFTXYz+covbjvDXD5EF+z9H3xeT7SVztT3uVqv/5/WieXUf8
P2n2R3xXmryYf58ju/qO/ecLJj/i8yX1B+3xij2P+HtN4yUq886b5g/E11qy
m8fxfWE92eU/4qfGrqMebjb9oe8nKh/P97aRa9jPPjd5Zb9IruT+bY/6Pyb+
32fy4/cl+y0e8O9BfZ7fT36zeMZ8d5Tclfnyt74/LvuVerND+0Ofk42hz2nk
LM6nGeRqft9oTHb1CPF8nt2Pef98sosn7A8vJrv5H/65hFzD8+HLyYMTcj57
FbmY+X2NXuf3jNzZoT/QL9or0/4dVR6eJ91G1nmlG1nPK3uSVzGeetv6qGd3
k12/Qb26T5nzdYHaJyr2HajvZ/97eHboX8yrj84O/YX922N2P877x5BzEjKf
TTB7Ix4eV/tFJb6nkUtYP0vIafzeETX9YL8kOZvzTDk5Py79bL7Kx/q10ORF
P1lEdvGMeXMJ2eUv6s+L5DqeJ1WTCynPCvMP6vEbJh/691tq36Vin3fJDy0X
+2yw+EK+bNT4jUl/+phcwP3df9Q/9Fed2Rv5/QXZzSuYN740f6Pff232QD/+
XuM5KvHzk9qT53O/6vvY7343f2C/8KfFA37/kzYnXA/5V59cxPP4U8hu3kN9
PJ1cxf7daE7oD+zXzpkT+gv1vgnZ7Vew37+Q7HPea06uZr3ONnng/1a6HvcL
bcjFtHdbsuu3OL9vRx7M8+wO5Dqe73SaE9of81cXXT8mvyfqbvog3vLmhPbE
en3mhPZHPuaT07k/60cu4X65v+pL/QaR83meMoTs5mHsX4eb/WDPkbY+6utY
0w/9cSI5m/Npsa7P/J5B1u8Bs8luHkO9iZMrGS8p9XdEzoPn6vPsPwv0/qic
7z2t67O+LbZ4wfxQZfqhXiwjZ0YlH5ZrvPH70Uq9HpP902qzJ+z1tq2P+HtP
/RmR748fkAu4P95o8iDfay1+MG9v1fUikl/bybURkX+n+Q/75S/VPxHpb9/Y
+vD39xrvUalnP2s8c//6qzHmqSPkdRE5bz9G9vi9Jy1CfSIyH54YCe2J/nIK
uYb50ZDsRyR+Gun1iMwb55B30x5NyRUR8eeF5LyI9NcWZLd/Rf3PtvUQ/62M
Mf+2IRdFpJ62JedzP36D6hOVeaoDOZv27URex3zqovJGpN92j4T+x/4mj1zN
etiHXMt5NN/ej3jrR/ZYf/qTNV8GkY9wnhhCdv0B33eGkYsj8r6R5DS+byx5
MN830fTH+4ptPcg33eyLeJpt+mO/GiO7eIO+KXJXnqfMtfWQX/PNPpgnn1b5
WB8Wkevojyp9P/dfy8jp9G+12iMi9Wal+RvzxBv2POLlbbLLB9TLdy1+8T10
AzmH52Ebzb+Yzz82fyGet9r9yO86u4757Av1f0TOS740fVEvvjb7It++N/kx
r/xk8qM//KL2iUj/+518gPH1p9kX8Xpc7cX+Vp/nZsXcv6Ur0z6nk129xO/v
zoyG/kS9OptcwPOJJtFQXvSnC6KhvzHfNo+G9sa8c2k01Bf19ApyPuMxh5wV
kfi5luxzXsk1eXG+exO5iPWhIzmT/bGzXYd/uqn8MalfPcnODqjnve06+tHd
5MqI5Nd9ZBcPiN8Cssfz6YGqH88fHrb7Ue8eJbt6hnlvBLma5zFjzN6ox+PV
Hvz3cZMX9Wea2Q/rzyK7eQPrR8l1XF/PTY/w/LaM7PbjmDee0Pu5/35K1+N+
8Rm1B+vp83Y/7L9U7c3z/5fNX+jfr9rzmC9fV/0Zz2vUXqy/68x/OC9eb/ZC
fn5IXsX5aDPZ9Ufk0xaLN+znt6l9I1JvPrf4kt8LkHN4vr+HXMV8/pbs6inm
pf2qD+vxAY33qMx7hyz+0c+Omvzoj38ZY96px31sFuU9idyV8++pZFdf4N8z
yKsY32eR8/n97VzyAZ4XN4uF9sf8kKXPc3/cguzqOfL7MnIJ5+srVT7+nqAN
2WM8XEd2+Y/znxv0/ojMQzeTXX7ie8AtsdC/6J9dyIX0Rw9j6Kf7fOdf6NeH
XMH6cU8s9B/2X/3sedSv/mQ9/xxk+uN8fwi5jv4bRnZ9EfE20vyD+X8s2c0z
OO+baO+DPYpNPvn7SX0fvwfONvvC3zFyHvd7SdUnIvVsrr0f89h8iwf094Wq
H+fdReQMnj8uMfmRfy+a/Difqyancz+xwuwpv6cju3jG/PiW+R/9+R2LN9j7
fbMn6su/dT32q4/Irs8j/rao/JwnP1P7RHh+q+/n9/ddpg/OE/bqehGpn/vI
br5EP9xv74M/D1o8Yv/8m8UL5p+jZDdfyN+zmT/h/3rxUF/kw0lkNy9j/3oa
OZ398Qyyzi2N46F90M8y7XmcJzWz9yO+LiJnc3/V0t6H+y8jF/D+1uTdPK+8
mpzJ8/bryJW8/0ay279Bnpvjob1w/y3/JX9Xsquv0LeHPk/75Nl12KcPOY2/
R7uHXMx5qJ+ux3mxPzmf9X6QrY96NIScw/OyYfo+nr+OVHuxn40lu/qMfjKB
fITfS4rJhYzP6WRX7zAflpg+mBdi5CrW06TKF5X9aTnZ535rvvkPv99ZSHbz
E/5e61nzH/JxiemHfvSiysfz5pftfuT7Cl2P++VVau+o1Nc15K6cj96xeEA9
fl/Xi8r+80PzD+a5j0wfzD9b7H70s20mL/7dYevB37vItewneyxekM/fkvX7
1X57P+bBA3Y/fr9wyOwN+x41f6N+/UX2WO/+kQgZ++mTyLmcT04l7+Z+pCG5
iOdpZ5EruV87l1zL7x1NE6G+yKcscjr1b0HOoP7Z5GrON63Irh6jP7Uh13G/
31bv5zzSjuzqE74XdFB52C87JUL/Yb/W2fTHfNadnEZ97jR9oU/vRGhP6JNP
zuT+vK89j3m5QO3Hej7QGPPSw4nQf/DPo6Y/fm8wglzF/j+GnMPz0vHkdYzP
yeQs7p+mmf6oR7NUfn4/iZg+OP9LkPOYz2XqP+ZnhcUD5HvS7In56xlyIfdr
z5l9MQ+/YP7H75lesvVgv1fUv6xPr5l8OA9ZTa7geedai1f08/fUnhHx7we2
HuJ1E7mA+Vqr+kWkH20lu36O+lln9yP+dpp/ME99afIjn762fIA9vjd/oZ78
ZPGBePrF7IV+cNj8hXnzT3se8/9xje854q9/+MJuXsB5ZH1yBX/vcBK5eg5/
b0t2+YjvK6eSi9hvGvih/VHuGvrh+kG8/ZRBdvUxqD9nnUXO53pnkzO4vz5X
r0v9Kz7PD/0Z1JvFTVVe+ut8P7RfYN79F9r7A/3PvJicxfrWguz6Z5C+91xi
jHjIJg+W/Km8nJzH7xmtTJ/ge9K+1nY/6nsbux58n8u5Ru3F8/i2fuivYJ4a
e736Q34/OL8dWf/+4Ubybv5+9ya9LvPliR7ZzXM47+lE3sfvb7eaPMj/zmaP
wP+prsrye4OV3YyDeaeuh70vWP6PnuRV3J/3Uo7K+UxvlZf18C6NB9aDu8m5
nOfuUflE3o33mX0QP/3M/vBngcVjkA/XDlD7y37t7oHkEv4ecpDGF+vDYLNv
ME+/NcTkC84Ddg81+VGvh5s90O9GkAtlHug80vTH98XRZE/O3+eMtfzC/DdO
9Y/JedQEy59gfD4wyfyL/Cw2faDvVIsnzJfT7Tq+1860eMGfC5VofvA8fA6Z
51lfRC1+g/g/Ftd4on+Tqk9c6lmp+kv+XrJ/ub0/sNfUefo89wNP2PuQPwvU
3vxe9ZTJE8THyZXkGvk+eOmzWo/k901dF5NdfQ3myYeft/yBvavIR+T7/4tL
zd6Ir2Uqj/w9zP6X1F5x7L9OX671QL7vtn5V5ePfm63U+IxLPr2u/uPvKd4w
+wfnuS+/qc/L30N9/Bb5Vv798FqNZ/49/rtqb1/qx3r1D///DBu0HvL/V1Kj
8ZnE8/6/dX3+/y82kZulZP2P1J4pWb+W3KIU8p/xH5WnVM6jP9XnyxCvPT8j
F5eJ/tvJZfL/S4zvUH/MlXl2p+o7T76f7CKvmSf2/1Lz4wmpn3tV/idkHvtG
82s+9ufd9pH3L/D+D5HjWBY=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=280\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
                    Rational[2, 3]], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
                    Rational[2, 3]], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798252941038218`*^9, 3.77982686543879*^9, 
  3.7798271715620384`*^9, 3.7798972900956936`*^9, 3.779897821247714*^9, 
  3.779898171306093*^9, 3.779898616027057*^9, 3.7798988655547915`*^9, 
  3.7799005934784126`*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"7d70adf9-50f2-40af-9853-f5401e2ea818"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a290", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0290.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa290", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a290", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Brown", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=290\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798218410645757`*^9}, {
   3.7798253288278084`*^9, 3.7798253487246466`*^9}, {3.7798268776699343`*^9, 
   3.779826894086629*^9}, {3.7798271748522596`*^9, 3.7798271785791397`*^9}, {
   3.7798273783812113`*^9, 3.7798273785075145`*^9}, 3.7798978158668976`*^9, 
   3.7798981647146597`*^9, 3.779898620655483*^9, 3.779898868975664*^9, {
   3.7799005980606856`*^9, 3.779900599115402*^9}, {3.7812186764014335`*^9, 
   3.7812186769599333`*^9}},ExpressionUUID->"06381212-acc0-40bd-9cf1-\
c2e957a9a783"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH98l/P6x3cShmQlTHUYFUOyEIvkLlQqWaccQzmrk0yoJWr9XrVq9fl1
fz7baopEaOhBUUxKQzKnMJ1kiW9RGEKR5Gff9/26Xtd9PQ7/9Hg+7s/9vt/X
7+t63/ecNXzMP+5okpaW1u3otLTg382PXvfij73v99KC/9pXep+0P2ZG5UCy
X+ntX76p3+W3kTMqvSYXzD11xwhy20qv1bO9P500mpxT6Z3bOX1F22Ly4Aqv
6+q68a/O0OsVXv/L5/UoiJCnVHi3r72+WZNKclmFN/aq4z9ctoTcqsKbVfuf
R6+r1udXeDve/XnQnlV2fd/AmjNmv0JuWuH1LPi8/uw3ySMqvMF7nli88V1y
xwrv6QNbbxjeQN5S7q27vzyz6Wfk3EqvZfDAb8h7y73C5LdTrv5J5a3wJgcC
/0neVu69f/bOX6alPyBcWyHytyTfU+5NvbrL7WvbkNPLvf/eMDwjvwPZL/fO
G5J4/adO5I3l3vRRbke5yhXeB8VfndO5Jzm/wgvU/24/claF92bWyvsKbyI3
q/DaXOQs+C/y4XLRZyG5vsJzVHTVfeTsci9Q187JZK/C+3Wa28BsckO557Tz
z+YJcsdyz+0mfUWV7i8l9nmM3Krc+/utI67c9Qy5oNx78cc/thWvsf00Cxxo
A3lKuffk4o1ZK+vseqCu67cqp2S9neQ6rvc5uabcy4stHN3ye/JK7u8wObNc
9tdkvHBZSuQ9gdy+XOQ9hfxxygvUc/yZ5GbUX/b4UL4BznxdLyYXp7wvf3vq
wNYryVnlYo/ryPnl3mMuvP4YQHb+cOWuG2ML88nO/0536r1wOHlEuXco2znE
3eRtKfGXB8aH9nKrJ7+dNj7UTyD+rLLxoT4D98lMkTPKvcg9boeLx4f6gD8/
ob9Peb0ChT5L9sq9ds6dR9XY/q8NFnjN9nNWsIHNpg/E2wfklSnvzNnfDKz5
P31eSuzZSC6lvx0gd0x5gXqLfiPvTkk+OHqCcEVK4qE52U95S1s7B88kX5vy
XnPmffEs8v6k9+kkF6AXTAjtiXx1KXkw5etOXpES+XqToymv2qW7eQPJzl/e
Hv/qI61vmxDKB/8aQX48Jf4wmnww6Y0JEsgEuw77zbD1Dzr3/Wo+uTbl5QcJ
ssLWRz5aovcnJR8vJ+9Nib5XkbulJH7WkhtSEt8byVUp2c875Bzu50PyiJQX
pOPPd6t+k95Dbrn7vrb1oZ8fyXlJ0c8fyimJ52OLQ3kRLxnF4Xrw79bkZinJ
h+3IRSmvgxPvmgvJfVLeO1vcf5eR01NekE5v9ez3yP/Xk/cmPXd35J5B5Pqk
F7jXL0PIW5ISHyPJtUkvcMdmReSl1O9Eck3SC9z3jFnk1Unvwucf/n55lJyf
EnkWkKuT4n+PkFckJb6eIvdPeRmBgZ8nt016v7t0ccM6+/3jLt18+CZ5StJz
1SB7yHtk50+wT4PtD/77GXm/76F+f6PPS0p+/Mn0j/zzJ3kb9ZE+kftJeRMD
h25JPpyU+G5DjibFvh3ILr6QvzpNDPWHepdLzkpK/exBrkh6fzp3P6cfOTsp
8TOYnE7/uJ1cl/QCfP5Oux/9x1i9n/llEnlEUvy9dGJof/QbMfJBX+yxkFyW
lH5gqe0H9eHpiaH+A3NveoGcxnyynnxpUuy5iewlJb/VkzMZ/zvIGSlviVuu
3x5yn6T49z7yPfSHQ+Q83n/E5Mf9x02ifny5vyW5is9vS+7P+zuQD/uy/4sm
hetj/7mTQvkgf09y+6TUn37kIfTnm8gVvlfl3Kf2dvJS6r+QnJuU+B5L3ueL
/SaT7/e9IF2uLiW3Skp/EycXJaVeLSQ3o/88Sv7Yl/zyNNnFX2DOrNXk331v
0YPuv/WTQvvCf9+y+99w4ZWoJxf4kg8+Iu/1pZ/cQy7zpR59S/Z96XcPkbMY
f0fILh6Rj46bLLw7IfHbklzse99NcQpqS270Jf47TA71E7Q7N15ErvFpL3JH
33vLpd8ePcmZvui7H7mV710S/HcTeYUv+ev2yf+rr0Ky8w/kv7Hklb70e5PJ
I5gvSu066kFscqgP1O+F5Czmq6XksoTI+/Tk0J7ol14gV9A/108O9Rekt3Wb
7Hnwj3pyre+959L/EztU/qTU5z1kl19h330qry//HiLnJKXfO6L2SEo9Tp8S
yoN605K80Zd+uw15KfNJB3Iu/bnTlFDf6E9yyU3pjz3IQ3zpL/uRi+hPg8ku
X/3Dud83Q8nOH1AP7iRf63uBeuuLyHX0h0nkQt/rEyh0FtnFA+pZbEooP/Sz
QJ+foFzkPrTnU+RLfc9p96JPnidP8Vm/TF/It2+S+/teEC4XvGf3H3bmWtxA
rvel3nxGTqc9viG7+ID/HCR7vheoY+Cfqk/m92Onhs/H81qQG3ypT62nhvZC
P9V+avh8yHcheR3lu4zs/Av51CO7+ER9v56cTn0OUk56QfsSGUJ2+SRwl5/v
IO/2Zd4dY/tB/i4mu/gN3KnLTHLUl/oZIau/VE4N7YP+bAn5cEL66eW2HuJp
Fdn5i/SH5Md9mQ822vOCcXHGO1NDeyEetqv8CdH/bnJNQvLNV+Rc6uNH8j2+
1zdIuL+TXfw0DxLQ0dOEt/jeaUEDdxLZ+SPiPXNaaB/kp7PJ3dhvXjAttA/m
n0vJrr48ECSs7uQa5sPe5P3c30DyNl/y2a3kKsbbv8l7mX/vJbv6gfgePy20
H/RXQnb1Af3WPLsf/pQiu3yH+HyIXMj89YTJC/s+Rx7sc/7S5zP/vKbPj3sT
ggdsJjv/x3y0jez8AfXoE10/If3+l2SXj9A/7SevTIg8v+p+Kc9R02nfhMxP
zcilvsw7p5LzEl7Qrj18JrkhLv139vRQP8inF5PT42KfK8ku/yF/X6f3JyQf
DiBnJKQ+3kxewX5iGNnVV8T7KHIh5R9n+4G/TSV/zHiYQ85KeD9sdQryySUJ
qd8PTg/1j/r7GNlPSH5fYfcjftbY72H/V6eH9kJ/VKfyxqUevD89tMe9QUH8
iLw/Lvl1r62Hfuhbcr4v5zs/k6viUh/TSnh/Qp7flFwdl/x0XEmoD+ivOble
+5OSUH/o/08jO39CvWur6yUkXrL0/rjovwO5KiHz3PlkV/8hXydyn7j4yyUl
of6Qb3NLQnviPKyb3h/nPGEM/fQqCe2BfNuX7OoZ+sMbyTmM58HkNF/8M5/s
8hvicSi5I+vNcHKU/c5IXS8h/dTd5DzmxyK9npTf36/X2X9NtPXw+2nkpvz9
THIx88Nccn5S9h9Ve3C+9fV+ztuV5BGcJxaRM5KinyXk1ZzPlpGv5fxQrfIn
JX5WkF1/BnutIrflvPCi7R/5fa1eZ/3dYP4I/9lI9hJSX+rMXvC3d9Q/EpJf
ttp1zPvbyQX0552qn5j0u7vVnjGph3vNv5HvvyJnJqRf+I7s8hv6qR/sech/
P5u9UY9+V45LPkibQf36XiDu6KPJdTGZN44nV8WkvjWfET4/SIcjTianxSX/
Z5J3x2T+bWu/R/4+i+zHZJ7vMCPcP+x/vu6H8XSRXo9L/F1CLmK85s4I7YH8
dJWun5Dz7R5kVx9Qz3uRXT7BvN6P7PIV+vkbyS6+ob/Btl+cD9xCdvGI+XKo
yhv3Rgb/DSe7fIN57E5yfUzy9d3ktqz3RXYd8XA/uSEm/jpR109I/Z1GLotJ
vptJzouJP81V/SSkvkbJjZTPJzv/w3ldpa4Xl/q5SPUZF3svIdfEpf9bZvpF
P1qt6zH/rFB/iYv9VpEL49LvrFF549K/r1V7M/9vIGfF5Tz3Ddsf9ltHXsp6
/w65mP75vu0X89p28x/8u1P9ISb5Y5c9D/l+r+kH+m1Uf4mJ/3xLLol7QXrP
/kH1FZN4OmTPR//zm/kP/CFtJteLy/lRU7KzN/LdcTNDeZGPTiSvpL5aKsfE
vqeRM+MS/23Irj/BfJBFro1Jf9DBrsMfzyPXxCSfd1KOSrxdTM6JSX67nFxH
e3Uje3y+Z/Ign1xn8mAe72vPx3w3YGZoH8g/iLw7KvX5ZnIh8+UQsqu30P8w
8n7msztmhvZBPI4iu/yEfmOMrYd8M47s4g/xVazyxeR9zRTdX0Lej83Q/cUl
H8whH45JPzhffx+TfJcw+dAPlKs+49LvVpn+Yc+Hyc6fMV89SnbxDX96UuWP
iTzPkJ1/QZ7nzB6QZzU5Oyb9VI3Ji/50PbmW+f51srMP8vcmsvM/1O/N5Ez2
T++RXbwjPraZfnG+v8Pkw7z7icmPfvoz8tKo6OcL1X9U/O0bcgPz9X7dX0Ls
fVD3E5P3ob+Qq1lf/jD9oF9tMit8PurtsWTnL5hPTpgV6g/vvzLIzt+R704h
r+S8cDo5Lyr96Bl6f0zi4Wyyq+/ox88lp9F+Hcmuvw7U80iOckz6hy6zQnmR
v7vOCu2H9bobY71ryIWsH73JWeyX+6s8UdlfHtlnvrrJ5Md54a1kl69w/nE7
uYr9yr91PfrrneSCmPQH95BdfkJ/WKT6iMt53QNk1+/AvpPILl/gfHsa2fkn
zo9mqf6j0t/NJdew/kVNf/C/pNqH81ql6R/5bhF5f1T6uSV2P+J9Gdn1A4iP
anJRTPLXCrKLL9SPVeTDUenf1pj8yMdr9Xm01wbbP+z1BrmY+q2z/cPft+j6
rMfv6/WYxM8HZn/o4yOTF/3fLrLrz3AetMfkxfl8o8UH8t8+8wecbx1Qf4lJ
v3dI4ycm/vur+RP2f0T9Myr7P6o0XA/2TC8N9YV606w01BfOr1uUhvJhvj6V
nE/9ty4N10e+O7M01B/m7XZ2P/w7uzTcL/JDR3IW61tncnZc5uPLbL84b7iC
XE19XV0a6hv59RrdX1Ts3ceej/xxgz4/Kv3rQHJGTOrZP8lF7GduJaezP/hX
aah/9Lf/Jrv4wXlaIbmA/nVvaWhvPG8sOY39y3jVN+vXJFsf8k2365Bvll1H
fS8zfeLfGHkp9ZnU/UUlHheQXT+B86hFZNfPYB57xBj93zKTB/W8muziB/Pg
CpWH/dkqsstH6A9fVH3GZX5dq+szX28wfcM/39D1o1K/69T+UW+BS7dfbiHn
sh993+SDvrerfjiffKT6iMr7n13kGsq/R+3L84ZG8wfk+322P9S3A/p8xstP
5Nqo5KtfLT7Qbx0x+yO/HDVb2NUDzI/pZJdf4d/NZof2xPlri9n/a49TyGVR
ye+tyRq/Z8wO94/9tCMXRKX/zSa7/g71uKM9D/rpTM6jfrrodfYzV5Cd/VGv
u9vzkE+uIbv4hL16k11+QP7qb/Kivg0kO38N2pvYTXo9KvnmVpU/KvPN7eSw
/qk87G/uJNdFJH7u0fWjko+KjGHPB0yfmI8m2nXMn9Ns/8gfs0xfmAfmmr6w
3yjZ5W/s1ye7fh79eqWtj/zyIDmN9l5C1v7lMbUf9bvcGPPRM2RX/5DvVpIz
ozLPria7/Ih8/jK5OCr++So5nfHyuvkT8sVbpn/MS5tN33jfUG/2g/636XqU
Z4fai/3OJ6Zv6T9NfpzPfKH7Z3/1je6f/en39rxxwYHQQbUH4/8X82/Y5w/b
P/qHJnMoH+vlMWSXT+D/J5A9zkcnzQnvR75qRd5PeTPnhPpD/vw7uZ792Fl6
PSbnDefY75HPz7friOeL7H7095fMCe0H++bOCeVF/u1Grmb+6UGuY/3pRc5m
fPUlu3jF9243ksvYnw8iu3yH9x355BrG3xDVT0zy17A5oT0wr9zxF32NIuez
no42eZBPxpFzmP8n2P2ot1N0/zw/KZkT2hf1YTa5lvVxHtnlO/RncbKrD4iX
FLmB/chCsh+VeX+xyYd8tZScxnr3uP0e/veUPQ//Pqv3RyXenjf58L7yJbVv
VPrDV+z3OB+oJbt+CPPpRl2f8+Hb5Crm73dUn1GZh7eS+9C/t6t9GM87VX7a
c5eth35kr8mLeG80xnz8rfkDzi8OkN38hXx8SP0pKv3tr3Y//OGI7Rf9zlFz
w/0F7n9lOtnlf8RXs7mhvnH+28IY34+cQlZ/ak3uE5X55QxbH/HZbm64X3yf
cy65ivmqIzmH/XIO2fkbztO6kF3+xPcxXe15uN7d9oPrPclu3kM96k3eH5Hr
/cglvJ5n6yN/DCZn8/otJg/uH0rOYr84XJnXR6q8Mdnf3X+5Psb0iev36/4p
fzG5MSL6mTo3tC/0N+Mv+p3zF/3P1+sR6a8SJh/sV273w75Vpn/Y/yHbP86X
H1X90X+eMPkxrz9NTqP/PUvOYL16wRj56iWTF/69zu6H/9eavyDfvUl2+Rr9
7NtkF/+YV941++N8c6vZH/n0Q3JNROb5nXY/+uXdpg/M53ttv8gPX+n9Ucnn
39rzMA/+YPZC/jlEdvUB/dZvFl/IX0f0+Tz/PqpMOJv5L528W+dDclFU6nOL
snA99HunkPPZX7XW68zPZ5C1/rcjV7G/Pbcs1AfOuzrqeoynHLLPeb8LOYf1
uKvdD3/oTnb5Ff1sT2Wed/Qmu3oDe/YjO3/FvJ6nHBN7Dbb7g+O7Vrfo/tlv
DNXfRyXfDy8L7YX3uyPJzt9wHjOKnEZ9j9H9x6QfHUd2/o75q5hcouej5Gqe
d84w+6Hfmk3OZPzPJ7v8j/cncfJh6quc3IfxsVD3x3nlIbLLH/DvpSYv+t8n
TB+YP5/S/fD91LO2H+jjeXI6/e9Fu45+5xWy68/gXxvIbt7G+4WNpl/4T53p
C/nwHf095X3fngd5t5P1/dBH6t+ch3bZ7zG/7TF/hf0bzR74vmSf+Sf+PWD6
xLz6k17n+fov+nzGy58WH5hXmswTzqc8x84L7Qt5TpgX2g/1NcMY+asVOY/n
T6eTG9jv/51cyPcjZ5Mz4mKfc+aF9kX/ff68UN84n71In8f4voTs8Xwv1/aP
etGNXEz99yC7/IF++7p5ofzoV/qavMiHA+aF+oQ/DSJnMp/dTK5mvrptXmhP
9NcFKj/1O2JeaF/Ex10qH/vVe8kuPjG/3Wf7wXn/eHIj54vJZJcv4Q/TyVX0
71m6P843Zfp7xnPU9AX9JU2/qKeVah/Ws0X6e9ajJfZ81JNlqi/2m8vV3sw/
z5D1PGml6Q/7WW36Rj5+WfUTkfq9Xu3J+fZ19RfqZ5PZG/GyWfXF+vSe7Rf+
9V9yCc83GsgFjO+Pzd7oNz5Vf2O9/9z8FfX4a9sf/Oc7tR/nxR8tXpB/f1Z/
4bzwm/pLTL7/SZsvnMZ80pTcyP73uPmh/ZAfTyTXR6R+t7T7Ma+dOj+0J/J9
a3IWz2fPJFezX2yn9zN+ssk5rF8d54f6gj92nh/aD/ruYr/H+X1XfT7Ps7vr
83i+05Ps8in6r94qb0S+J+pnDH/LIzdw/hms8sckHvPnh/bB84bOD+2BfncY
uYbyjSTvjsi8Mors+jHMr2PIdTzvGqf64/w8wZ6H+jjF7IN4KrH14L+zyc7/
kO/nkWsjkm/iqj/W6xR5ZUTOgxeo/pivF5NdvOF87xGTB/ntcXIuz5OqbX3k
ixXkIsbDKrIfkfq+xuTD/LSWfJjz3avkTM6Xb5i+8f7xLWP4+2bVP/uven0e
++1tJg/ia4fdj/1/ov7E84lP1f6sb1+QPdr7a9M38tn3pg/Mrz/a+uinDpt/
4bz9d/N3jLdpEeqf88bRkVB/qC/HRUL9Iz6ak/PpPy0j4f7Rb5xKzqE+2pDT
eV57ZiTUD+pre11/vuT/7Ei4X/h/x0hoD/S/ncm1zKddjDGPX0Hez36qeySU
F/rtSXb5APHUm+zyDeptP/JKzjd5uj/mw8HkwxGpB/m2PvxtKDmP+WeY6Q/x
MpKcy/cpo8h9IvJ+ZzQ5i/V3nMkvf99GzuZ6U1R+rlei11mvSlUensfPU/1E
ZF6N6X4pb4rs/A3nKQvIrr9HfC2y+9FPPmL+g/ywTPXD85FqWx/z1wq7H/Zd
Sa6KSL5ZQ3ZyoJ942fQNf3nV7IV8+Tq5OCLvQzepvBE5D9tMdvUX/fl75Eb6
8zbbL+K7wfwf/dnH5t84L/mUXMZ88bldR7x9rf4bkX7lO5Mf9eEHlY/172fd
H/3rN7V/RPz1iMmL+taU52Z1EZnf0sn1jKcTo+F6+P6uRTTcL/LVKdFwfzif
aB0N7YH6dIbeH5H+th25MCL9zrl6/3zJpxdEQ33CH3OioT7gP5dGQ/2iX8m1
/eB89yqyx3zfg5zH+tjL7od9+ipHJH8NIPvM54PIWaxHN+vzGF+3kXfTfwvs
edDniGhof5w/3GXrI9/dS3b+hX5vrO0H5zHj7X7k40nkbP47nf9Ws57PIqdx
Hp9r+sbzo+SciDzfV/1GxD8rbP/oNx40e2L+ftj2g/h9VO3HfPqk6oP6f1rl
Yz/0nO6P/d4LxugvXzJ7w5/Xmb6Rf2v19xE5L95o+0F8vq3yRsX/3rH1EE9b
7feY57eT9bzsI9OnfC/wF3vtMYa+vjRGv7TP/AH5cz+5gP3eQfMn1LNfTL+o
j3+QXX+EfqcJ51jnH9jvMeQa9r/Hk4vpXyeRG+nfJ5NdvsW8dRo5l/ptS3bx
j/4hi1zC+bh9LNQ/4vu8WCgv+usLY6G9EQ+dya6ewx8us+fj/OcK8mH2Q1fH
QnvifcA15D6sn71NPtijv+0H8uWRMzlPDibXM3/covvh/DWUXMj3d8N0PZ5/
jiR7ETnfH0XOo/1G6/P4PcI4/T37/wkqL8/7ppi+oA/9TqCa+iglZ/B94DzT
J+wdU2Z/klT7M58tsOehH1tk9kV9X6LP4zy/jJzFeX256Rfx94zqj+dzK9Wf
WB9Xm/zyPZ3Jj/5xvdo3IvX5NXs+9P0mWeeZ/5g+UK/eVftExP+22vPRT36o
/hLl+a36C/u7XWYvnCfstd8jfzbaflEP99n9sOcB8x/Mzz/pftmf/UKu5fnA
n6ZP2L9JPLwf8XBMPLyO+fWEeCgf8tNJ5FzW5Vbx0L6oZ5nxcL84T2obD+0F
/zqLXMf5qkM8lB+/P498mL/vRNZ57GKyvl++jJzN7wOujIf2wn6utuv4/TXk
fM2jxpC3P7mM+snT69TPYJMH+ryFXM1+aChZ36cPs+uw10hyAfPRKJMH/cFo
cg79YRw5g/4zQddjPZls+oG/lZDT2E+Vkqv4vVyZrYd+IUb2OY8lbb+YTytN
Hjk/Iqfz+50lqt+o/L3WY7YfxONytSfr9zPkEr7ff86eh3hfrfqJSL2tsevI
r+t0feaT18i7mY/fNHti/nzb9o9+7l3TD/qfraoP1rPt5v/4d6f6O+29S++P
iP322H4Qz1+a/8Me+yx+0A/ut/3i+4WD5CLq9xeLB+SvP8huvkO++1siZMzT
x5CLeb5wPDmd/UFzsosHnKedTF7Jee00cgG/32lDzmD8ZSVCfUD+9uQ6+m82
Wf2xo/5dL/vBzolQHvhXl0QoL/JxV/s93hd0T4T6Qb3sSfb5frGX7pf9WT9y
PuW5Ue/n+5tBKm9E5Mknp7GfGUJ29Rn9coHKy/OgEfq8iPRLd6m+WV/uJWfz
+6+x5BzW//Fk199hfphE9uif02w99HuzzL7IR3NVPr4fjOh++f1RwuyLeK4w
fSA+q8jOf7G/h/T37K8fNX1hXntC5Y9IP/yUrY/vmZ4l63nP87Y+8tOLZk+c
h6xVe8+X/m2D+Sfq+RvmP7DvW+Q+PP/dovphvNarPlmPtpl+kT8byCX0v09s
/+inPjX7I54+JzewH/3aGPnkO3Im/ekH1S/rwSH7PfrN38ye6P+P2P5hr7/x
/wvg8TyyqR9ex/uYY8g676aTa/k+8HhyI883m5H5PuLt5rZ+4G/fZZAbJP+c
fDK5hM87hVzE78VOIx+W/FdyOtnNZ0G+ebwNuYDx+HfjQL37zjQO5G9xNjmL
+a29yhNDvbjlHHIf+kO2yj8f8bP0fNsv8llHP7Rn8D6psRM5j/m9M7lMvjfJ
ucT0i3jqYusF/dSEy1Vf8j3eoq7kOn5PcCVZ6+FV5AzJz0d7tn+c9/TU5/F7
wmvJVYz/XiqffE+V6mPrBfpZ09f2G/Q7Df1N/8Hjfx2g99NfB5r8OJ8ZZOsh
H95EzmY+uNn0g/i5xZ4X7Hfzbaofeb/z3VAyvw9uUaDySL24dLjpJ5hnbh5h
+sD3kCPVXnwfXmj6CPrp9aPs98F5wO57zH+Qr8eYvlDvxqo/xdAP9Br3v/5Q
+ICuJ+/75k9QfbD/m2j6xHnUZHte0D7vn2rxhvgsMX1B3pnmL+gvS01feF87
x+IHfy5URvb1741sP4G7fBy1/Qb+/3ucXEP7JslurkE+K9f1xB+HVZq/Bvqa
udDsg3ngQVsf8bNY5eXfyz2sv5e/Bzp2qeWToJyf+5jKI9/b9Xlc5Y2jn7zr
SXIm9a3/35Nqef//zNO2H/jXCnKOvM/c96zmM/ne8MRVdj3oxzq9QN7Nvzdb
o/InJJ5esv2jv3hZ8538/wqee0X3m0C9em+96jch/coGsvM7zPevq3/J3+vn
bNT1+Pfcm8gj+P/zqCNfmsT9/n9Uf0n5PmALuZv8PfV775KjKXl+vcpTjv2f
9F/y/eVyHv0BeV05/HXAh+T2lSL/DnKrSszj8Z3kwgXSz36i8b9Q3p/sUntV
if4/VX+skvy5V/2/SvqxL/T3izCf923UeFzs/T/RDVV1
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=290\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2666666666666667, 0.1777777777777778, 
                    0.0888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4`", ",", "0.2666666666666667`", ",", 
                    "0.13333333333333336`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    Editable -> False, Selectable -> False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798253517364483`*^9, 3.779826897114876*^9, 
  3.779827179137087*^9, 3.7798972933667936`*^9, 3.7798978169941244`*^9, 
  3.77989816569947*^9, 3.779898622015003*^9, 3.7798988697446976`*^9, 
  3.7799005997721605`*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"597fd9f4-80da-49d0-a319-8d837847f356"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a300", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0300.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa300", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a300", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Cyan", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=300\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798218471371613`*^9}, {
   3.7798253654097257`*^9, 3.779825387534479*^9}, {3.7798269008844414`*^9, 
   3.7798269071518264`*^9}, {3.7798271826548576`*^9, 
   3.7798271853781805`*^9}, {3.7798273817296376`*^9, 3.7798273819099317`*^9}, 
   3.7798978122922106`*^9, 3.779898159596423*^9, 3.7798986276766205`*^9, 
   3.7798988738240657`*^9, {3.7799006053987155`*^9, 3.7799006079063683`*^9}, {
   3.781218679913*^9, 
   3.7812186804884577`*^9}},ExpressionUUID->"93ecc372-1b5d-4d76-9188-\
8b36016faba7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 
           Rational[2, 3]], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH2cVuPWx+ckDMJIGOkwVAxCIQbJLqlUMp3GMSjP6CQjYYiaasqkSZPu
l32/zpRkkpdBH4qQhBDGKYxOiPI0FAZhkIToufZv/dZen+f4p8/3c99773Wt
l99a17XvcfyYW/9xfbucnJw+++bkBP+uW3zJcz8PusPLCf7bUu992m2/mZkR
5KoFXtujbw499xpywQKv3alzjvx4LLl0vtfpyUGfTb2FvLTeO6lX7tIuleRI
vXfeiqZJL88kL5vvDTt3br+yeeQB9d61qy7t0C5DPrveu+3CAz9asojcfr43
a82/F1/SSC6r9z5+99eR25aTm+u8HSNWHjv7RXLbfK9/2RfNJ7xBzp3vlWx7
+L6175Jr673Hf9xw2ZhNZL/OW31HKr/952Zvx+CB35JL5nvlie+qLvpF/VHv
TQsW/Bd5TZ33/gmbf5uReyfXVyfr70ieUO9Nv6j3tauOIRfUe/+5bExeaXdy
Y5138qj4a7+cTm6q8+4a7ywqIlfXex9Ufn1ir/7k5novcP+7Q8ml9d4bBctu
L7+CvCfrHXOGi+D/kNNZ8Wc5eW2d56jiwtvJHeq9wF2bp5Efynq/z3AGzCZ3
qfecd/55SJy8vs5z1uQurSdvqZP4PGjP//vVYy/Y+oTaW+c99/OfGyuf1fVm
vQ5BAr1yZxjvR+5bW7CsSZ9f5wXuunQDub5O7reZnMf7faH+znrF0bpbOv5g
9sK+3Xp/2tdukvDKrKz3IPJGrvcIcqc6L3DPgceRV2TEf4Xkyqw33IXvvDPJ
q7PeV3889uOGC8gT6iQel5DXZr0HXXn9OXxS6N8Ltl4erSsl59Z5Rzv3njbG
7NtV6BLiJvKorOTLneTdGc/dPfHdDPLSrBcsf1YteUfWC9InP0len/HmTXAW
3kfOz0o+P2z2DAwc+iS5LeN1dek8fiU5kvUGBDd4lVya9Y4PDFhHrshKvX2g
/sp6x83+dsTK/yUvy0g8W8l7MuL/H8l+1gvcW/GHfj8rerDvZOEtWamHQ8ht
Wa+hs0vw/Mmhf1514X3ueHKHrPfZVFegp5LLsqJXZ08O44n19SU3cH2D7H6N
Tu7mjiBXZ723J738QOdryDVZya+x5Fzmwy3knhnv1kBAJpMLGb+Z5MaMt9Ol
79f3kgdkvdJAINPkCRnRo0XktRnR40fJ2zPi7+XkpozUzyrywqzU99rJof9h
zzvkSEbs+Yi8MeMFcvxFi/oj4y10t7v9G/KmtPjnZ71fWvzzJ7kqI/W8f6Ww
x3rJI4/KSH53JpdkRA+7kgszXne3vItPqwz9985699855IVpL5DTqz1yU1r0
/9LK0F/u6nkTRpLXpr0gvX4bRfbTUh/jyCvSXpCOHSr0eWnx7xRyfdoL0vfY
WeTStHfa0/f/8GiEPDgt68mS16cl/x4gF2Wkvh4jb097eUGAnyavTHt7nFxc
tpq8Ou095OTmozfMP64bFI56j9yQlvhsIrelJX8/JzemPPTvb8nD0qKPv5C3
pER//iLX0B+5U4TL0t6UIKE7knekpL6PmRL6B/HtTi5Oi36dTt6dkn5XNCWM
D/pnP3Ik7f3l0v3Eofp5SuqnhNyD+XEtuU/aC/DpG8j5aZk/biN3SIu+TCV3
SUu+19j9MW9EzX7Eo46cl5F5oEE5Lf3hcfKotBeE+81nyK0p0ZOXyIWM55vk
nJToW/OUMN6ot4/J9Slvkbvd0G1kPyX5vUOvZz7ssvXg+r32fVx/wFTax+s7
kpfy+V3IBby+O7kP7T+D3Ej7i8jDUrL+/uQ1Kek/Q6f+f/9dQXb5Ue/SZ821
xvB/OXl3Uur7NnJZSuI3jdyS8gK5XFFDrk3JfBMjF6WkX9WRB6ckfxaTK1Oi
L4+Tm1NeEM6CFXb9gvnuv5fseuTvW+TWpPe6K694s30fevCJrjcl8+Q28h0p
6Uff6f2SMu/uss9Rf3vJ5SnRowOmCW9JSv12JDclve+rnIO6kGtSUv/dycOS
XjDuXH4GuVOK8ZoWrv8tJ7/9+pN3JMTfQ/XzpHdW8N8V5I1J0a9rp4Xrg7/K
ySuSon+3kSNJmfemkbenRC9qyBNS0g+iZJd/6N915FKut4G8iet9nOzqCfPS
M+RirS/7fiBvq98kr09KfjSTa5Pee07+H/6Y3D4l/XmbrR/x3WHrx7+7yGuT
Mu/tJY9NST/OrRJ2+YB+05HcnJR5+xhyYUrqoXtVGF/k8+lkLyXzSVFV6A/k
Yz+9Pinz5VDyTuZTSVXo/3+49Pt2NHltQvrBDWSXz4F7myvIucyHqeQ+SW9w
4NBZ5E5J6WdRchv9kyU30D8N5MakxPOxqtD/zrtnfPq02pNk/yK7/IHevkEe
kPKCcjn1PfKEpLfbheu+TVVhvNBvPjdGPL4lF6Qkf3aSXb0E7hjxF7kH9X3/
6cJlSXneYWRXH+hPncn5SZmnuk0P14P1nTY9jCfWdw55YVL01CMXJ6W/X0qu
pj9HTg/XH4wv80aRRyW9IF1+vZ7cISn73VvJLh+g35Vkl89BOvW+m7wzIf1z
nt0f+ZIhVyVlPltEzknKPP0ouS0h9bTc7JX5kJyXkv3BWvLYpBdsF2e+Q26f
lHr4kNyN/m+ZHsYXevM1uYT++Jm8O+ENCQR3j31+SCBA+84Qrk96RwUD3KHk
Naz3fHIO9emEGWE8MG+eSs5Pyf7n7Bmh/XcGgtWXfAf7zyByC+0bQXb6Aj27
muz6KertX/Z96O/N5JWs70lkl2/wXzW5ICnz1lx7PvIpSdb6XEiupH49bOtD
fJ8iu3qX/Re5nPrzKrkm4U0OHrCO7PQE+6ONZFf/6Eefqr8TMu9/pfYlZH5q
0+f5sp7f1b6ErGefu4Rdf8H+qQPZ5Rv2O0eSnV4E49r9x5GXJWT+LiS3JkRP
zyQXs19dQPYSot+XkNckRA+HkxsS0h+vJPdIyjxxHbkkIfU+nrw9IeufSM5P
SL5NJzclpB7uIacT3k8bnIN8cm1C+vd8cktC+u+D5NyE6PtSsx/18yy5C+P/
MtnVI+ajJvVXQvrB++TChHdz0BA/Ie9JiL5uN39gHvqOPCwh5zu/2vPRH3Oq
Q8bz25OLEqJPB5ArEuK/Q8gun2Q+IbdPyPx/VHXoH/S7LuQB7E8F5FZf/N+9
OvQ39nOnkHdzfadXh/FBvpxFLkuI3haZ/TgP60PuST3sVx3GD/4ZSG5OiN4O
McZ8eDnZ1RPquYRczvwsJbv8Rj2Org7jA70bo/YkZd4ZR16YknnqJnIL9bGC
vJHz0R3k9fz+FPJDafn+DH0+99d3k4szYs8c8tkZsT9Cdvtt2O9rPHi+lyEX
ZMU/C9TerPhnkfo7I/5cov7h+Uwj2e0/UT9LyW5/jXgt1/hxv/Ac2e3XoO+r
yE7fkQ+vaPw4L621+KC/NKl9zLd31J8J0ZcN5BUJ2e9/aPFDPm9WfyZk3m0h
5yWkH24nu3qF3n+t/kzIvPC9Ps+Xeeoncgfq369WP+hHe8hbfNGDnJnCjb4X
LPeWfWeG12O/cSDZ5TP62yHkhb4XyOHYw8nbfdH//Jmhfdj/diFHfNHv48kb
fdnPdyd3Y76fMjO0D/E8wxj1dxZ5Deu1aGa4PujThWSn/zjf7keu8KWfDyQP
8GW/PpS805d5/nLyWF/8V6L+Scj5wFV6f1/2l6PJzb43LvhvDHmlL/uxG8jD
qNc3kVf70u8r9Hms5zssHsjXKWpvQvrvDHKtL3p3NzmX+TSHvMKX/hrReHB9
vq0P53UZclNc+ucC8gRf4r2I7PQR898Schdf5tFGcg/qz1Ky6uFyctqXeedZ
sxfz+ypyoS/6/4rFF+e5r5OraW8TOZ/9/h3LR9j7PtnNA9ivfUgu8eXfzbY+
6MdWcktc9H675Qf826rrY/58p+tPeIG8F/5k8UU97dJ8iMv884f5C/mQc7dw
uS/nR+3Jd/iidweQvbjo0cHkYl/81ZG8kvE9ilzK+j+G7OKN/UHB3eF6MB90
J/fxJR9P1uf5ouenkx9ivZ1JXuaLvp1LLotLvPqQl/L5nq0PenKJrQ/78SFk
l0/Y3w0nr+f6R9rz0Z+vvDv0n+xPyFW++P86chH17Hr7PupxPDnXl3njVnKO
L3ozkezyD/VVSa6My/uaKrs/3o/NVH/HRQ/usc8xD95rz4fexe1+mAdS5Oq4
zLv15GGM5/3q77jsrxabvcinR8gRrucJcg+u5ylyGdezgtzNl3lqpdmL+fQl
cp4vev8auWdc9PtN8mBf+vc6XT/j8559jvrYaPbgfP9j8wf2u5+qP3yZpz8n
O/2Ef74k5zLfvrX1Q6/byNsZ7532fLwP/Y08iv3lT7Krb8yr7WYJ745Lv92f
7Mdlf3LQrPB6vP/KI5fHRe+OmBX6F/p89KzQn5hHjyUXxqUeTiBviss8fhK5
MS7x60F2+hW454GeZKd3mB96zwr9Cf0+jzyY9+tLLmA+XExuT/sGkWtp3zDy
MNZrsa6HenWF2Yvzwqv1/nE5/7iW7PQD/vsX2ekH8vUGWz/mgwnmb8yHFeQ9
vpzX3UkuZnyn2npxvj2DXB+X86NZZJd/mO/mkAdQHyK2PuRfwvyB+syoP+Ki
dwvILv8xzy1S/7Lel2g84lIfjRo/6tdScoMv/WM52eUr5rdnyW0x0eNV5KWM
1ytkpw+I1+v6feZnk/kH+b5e/ct+/L4x6ucD8jL64xOyqyfMf1ttPTgP2qYc
k/P5VqsH6N8Oy1ecb/1IdvqAeW8XuTUm+fs7uZn271V74mL/PjXCTYxnbk14
PfpNB7LLJ5xfH6Ycl/31kTXh8+H/zjVhPKF3x5HXxGW/3ZXch/pZqM+Liz70
IC+Lid70qgnjh/3xOeQOvpw3nE/OjYu/LiLXx0RfL9b7xSXeg8nF1I/LyK4e
ML+OIJ/NfvZPsqsfzDNX6/pi0h//h+z0FPPtv2rCeOE8rVztob7cTG7Pefk2
sqtnPG8S2ekJ6mMq2dUf1neX2Y/1zbL7o7/Xkovi8m/U1g9/Juz7qMes+s+X
86gF5g/sxx6w72P+W0JuiUk/bySvjMt+cKnFA/1nuX6f8+xz9n3sX1fZ/aCH
r5DLmJ+vk8eyfzeRXb1kndx+tV7zIy7z6PvmH/j7Q4sH/P2JPj8m73+2kt38
gPVvI+dx/mw1e6D3Oyw/0d9+tO+jXn6x+0Gvfic3xGXe2kuuoL7sM5v2xWT/
mEt2/Q353YHcHJPz18PIHufxI2aH8YW+d54d+hv2HDs7XC/s6To7tA/zbyF5
U1T6cQ+y0xf4p5d+HhP/9J4d+h/1fT65KSb9ui/Z6Tf05GK9nvEaRG6lfg0j
r4lJfxuh18e9YLyJXmEMvbma7PQF+5trzT/S/3T9MZlvbjD7UT8TyG5egB5V
2PcRzzuNsT+aYv7F/nMGuSEm+jFL4xeX/cAcvX9M7I3oemNir2/rxbyeIQ+m
vswnu36DeC+y9WI+eJDchf59lFwZk/3RE+QC6t0ysutH2M+uMH9Az1/Q9TA/
X7b8Qb28Zs+DXryl9sVkv7SOnB+X9w3N5Ar6fyO5ky/r+Zicw3nnU8s/mT/N
PpzPfGnPw3z1reY/5/cfNP+i3sTgQGin5ktM6v83tY/7tT/t+Zgf2t0jvJL9
cj/yJub/QeR69rdDydXUq07kcs7T+eQK6uffyZXcPxxvjPOGE8kt7FenmD2o
5zPUnpjM92eRaxnfIrIXE/3tc08YD9R7P/Ia6uFAtS8m9TWE7PQNv3e7nOzq
CXowUtcXl/cdpeQC1t+oe8L4QL+us/Vhv3I9OZf+Gm/fR77fQi6MiZ5MtPVD
/yeTffbbKvMH9Lja7EN/mE3uSX/OJTu9xnwW0+ujUi9JsqtnzCN1Gu+o7Pfv
M39DrxrUn1Hx90Nkzb/HND+i8u+T5FLW29Pq/6i8r3ze4of58EVyY0zOB9bo
82OyP11LLopJ/r6t8WO83tF8isp+eIP6Oyr5/aGtB/W82fIZ8dxKdvWDeWS7
PQ/13qr+jcr++Dt7Ps4vfiS3Uo932eeYb38nFzMf9mr8YjLv7DOH9sa8IP0v
yCX71JMOZJcvOP89jOz0D78fOcIY+dR5Tvh87F+OJTdHpT67zgn9j9/nnEQe
zH7bg6z52NOux3la7zmh//D7mPPIbv7E533JLfy8/5xwvehHg8j5/Hwo2eUn
Pi+266EfJeRWfn7Vf91/tNmPz8eQl/HzceZP2HeT+jsqn99KruDnd9jzsP5K
cgP9M52cQ//NJBfExL/3GMP/95JdPmO+iut6Gb8UuZjxrVd/RSX+C219OF9e
bPYifx7W+0dlv/442dUn8u9JzY+o9KtnlKlXz2s8mN+rNX+ikv9rbP3QuzeU
ozLPvm2fY7/yruZHVM43N1i+QE8/Iju9wn5+s/kH83ILOS8q+/Pttl7ow9fq
H85L35m/sR/8SeNH/dll9YF56w/yburXXr1/XOaFfWpDf0L/cmvD+Mj+kJzH
/nwYOYfz3hH2OearzsbQ52P1fuz/XclOfzHfnkR2+Yfzrh7kCuZrT7LTY+RT
b3IR9eI8vT4u+dCXvCwq82x/stMTnHcMIrcwnkPJK6OyXy+uDeONeJWoPXEv
OL7rdBXZ6TfmjdF2P+j9GPsc73fHqX9jch4znlxJf99K7sl5dKLaz/1XpbGc
j5L9KH8frByTeWu2+ov1fS/Z9Se8P4mRXX3BXyl7PuqjTu2PS/4v1O/HJb8b
yE2cfx/WfOB+/jGNL/PzSfVvXPzxtF2P/HvO8gXzzotkN58gv14hu3zH+4W1
Gu+Y5E+T5Q/08B2NH9f7PjmX6/3Q8hf97BOzX/aLZg/2b9ts/Yh/q64nJr8v
2WHPx78/6vq5X/1F8z8u891v5GrWy19k1x+wX2k3V7iC5x37zw3twXoOIju9
Qn/Nmxv6A/rViez6K/L5aLLLR8z7fyc7Pcb+8AS7H+Jz4twwfpi/T1F7YnI+
e4Zdj/o+a24YT5zvFZGL2C/6zA39B//3I7t6wLx9Cdn1N8wrQ8x+6OFwvV9U
8mnk3DC+0LMrdf1R0atr7H6Yr8vMf/DvWLLWx432PMyrN5t92L/dTnb1hfP+
SeTdnM+mkUuZD3eRi5nfs2z90M9aci7rOaL34/loQtcTkX6aseehny0gV1O/
Fqn9UeknS8g6bz6q10dFf57Q9fA8aZnFF/asIDfHRY9fIOewf79k64V/XrPP
4Z837fmol3WaH1HpT++RC7m/+w/Z9X/Ea5PZg/reovnGee4zy0/0+y8sv9GP
v9H8YD/9Xq/n/uhnstM76O+v6g/uF/7Q/InK739y7g2/j/prf2+4Psy/B5Bd
f4E+HkyuZP/uSK7m+cyR5MHU+856P57PHmf3Q//rSs6nfhWS3XyJ+PcgFzAf
e90bxgf+7q32xOX8/jxyHvdLfe3+ON/pb9dj/hqk9sfl90RD7XnIt2JyGeNb
Qm5jPZaSW/m80eQczrvXmT+xvnFk14+xXxlPdvWK/eutak9U/DnRroe+TjZ7
0B+ryG6eRz1V6/2ikr+z1d9R0fu55GLqTcyuR74k7XOcB2fNH9Dr+8xenO89
YOuHvj1k8cX80Gj+gl4s1fxgPSy3fEF/f1bjFZX906r/8tfLZFcvyL/XLf/w
/vEtsusvyPd1Fn/Ue7PdD/P2RnJuVOrrY/MX7P+U7HO//Jn5F/3tS7LTH8T7
G3I99ewHex72rz+T3byDeWq3Pj8m5+177HnY3ubMC/2B+XBfstu/or8cQG6O
SH0cMi+0H/nTkdwWkXnjSLLOo8fY9YjncfPC+KO/drP7Qf8L54X2If97kF1+
YP7tRd4UET3tTW6MyH78fLLTL8xTfclN9G9/XR/radC80N/ot0Nt/djfFJPL
qIcl5i/0g1JyPfNttF0P/blO7We9jCMPjvD3k7Z+vN+5Re2NyP0m6vepZ5PJ
RRG5X9V/3a/a/Af7asgVEcmnueRq7lejFi+sN0l28z/OU7LkPPbjBWYv5skH
zP/QhyXqT56PNJJd/mP/tVTzgfFdpuuh3jyr/ozIPPGCxRP58jJ5N/XyNWO8
D33T4o3zsHW2Hszn75FzopLPG8nlrO9N5NKozGdb1D8ROS/5zNYDvfiCXMn9
yze2Pswr3+v62B9+snxB//uV7DG//jB/I1/3av5FpL+1j4TPx/4tl9wzIv45
OBL6C7+/O0w/Z38+guz0AucTncluXkN/OpZcwPm2K9nlB+adk8guP6Gnp5Lz
Oc/0JPvMn7Mjof8xrxRFwvXifPdCsw/60E/Xx/440O6H+Ayx70O/hkdCf0PP
R0bC+KEfXWn3Q31dY+tH/paRXf3An2PteTh/uJFcxvnjZns+5r3byI1ROY+Z
ZPZAj6fq+vnvXXr/iOjPLHIb4znH4ovnR8iqtz65JSL5mbb1Yt6YTy7i/vt+
jQ/742K9H/X0Ebse/n/c1o/6eErti0j/foa8m+cPz1v8kc+rydXU3zXqX54X
rzX/oT7ftnxC/r1j9qGeNpg/sJ//0PwBvfnE8lV+L0DOYby26fO53/rK7MW8
tEP9GRX9bCPnRWTe26nxZz/7zeKN/vin2s/9ejvuY72I2Lsf2eU95t8DyWsY
30PJy6g/h5OdfmG/dZReT73oYoz5oYDcyPmtG9npJ+r75GjoL8zXp0XDeKAe
eun1PF86JxrGB+c/55PLOQ9dRHb5ivcBF5PLuF8dZPdHPIaR87i+Yn1eRNZX
Eg3jBf24Su8Xlf3XaL2e+nUduZr1Ns78gfP98eRaxu8WcjPzbSLZzQ+Y/yeT
K6Jy3ldF3k1/6HuKBr7frSE7/cD7wLnqb+ZnVNcTlfkkYfGEnmU1P6Iyjy2w
+6G/LzLGvLvE7MN+/VFbP+rvCXJLXM7nlpFL2R9XmP/l93RmH+bHl/T+fN/1
qtrH96Vv2PqgL/+2/EW/etfyBfm3weKPefIju7+c35r96P9bNf/5vmC7rR/6
qedCjZzfdtjniOePZFcH2D//YvZg/vmN7PRM/p5N/cX4t4uFz0c97BcL44X9
60H2OfTpUHJP/tvJvo9+lk/O53lSl1hoL/LreHIt553usdB+fP9kcjO/f3os
9De+fya5iN8/h1zP8+oLyA205yJyLr9/cSz0v8TJ7MF6h5ELeT5STN5N/5SQ
2+jPq8ibOA+NNn+g31xHdn0L8Rqn10dEj8abvZgPbiFXMB8mmr3In8n2PPST
aRYP5Fs1uZXnXzXmT8yHtXo/vj+LkssjoqcJtS8m+9OMxV/Oj8hu3sPvdxaR
XX7i77Ue1HhHpB4ftfigHz0RC/2O+ekpWx/qfQW5lPvllZof1NfV5l/oyau6
furxG+Qy7j/ftnhhnntX7Y/I/LPB8hX97EOyx/zYbPmGeG9VfzJ+29T+iNTz
V+r/iMRjh60P82Cb+Qe/X9hp+Q///mafQ7/+1PyPiN79jb/bquB+er946E/4
60DyJu5HDiEXRuQ87XByKfdXRymz3x1j90M9FcTD+GH93ci72U8LyY3Mxx5k
n/2pVzz0F/KrN1n1+Dyym8/wvqCvPp/zbn9yMfdrA9UezmdDyS3cf14eD+OF
9YwkuzkX6ylV5jwzSu2PyLxcRvao52PVnojMSzeaPYjPzfEwPvi9wW3kJu5H
Jpm92D9MVf/Nk/ycQe7J/dMssuvf0KM55HL6e57az/O/uMUT9Zy2/EB91pNz
+XuIhWov56/F9jzs1x42ezEPP2brw++ZnlR/R8R/T9v9oU/P2fU4D1ml8ed8
/IrlB/r563o94/uW5mtU8nW93R/12kxu5by80fIH+rnJ8hn59ynZ1Sfmqc/I
OZwfvrB6gT++sfhCT77X+3P++cnihX6wy/IV8+YfGn/O/3vJDRGJ19/88H44
j2xPdv0A72P2I3vc7+aSa/l+5UA/jAf6TQcy54e3DyG7/Ary7fs8/b7oz+GH
K/P3FUeQXf/B846y58FtR/vh+gK9eegYP4wv4vV3P4xP4N4dx5HLZf2HnaDr
pb51I1dIv7jqRD+MB/KhkJwn83PDKWoPfx/Qg+zqPXif1Ho6uZn63otcJL83
6XkW2Wc99dbPZZ6afK5x8D5ywXnqf74fvoDs6gv98EJyo9T/vh7Z5QvOe/qb
v3GeO0DXF5P6H2j+CuKfHKz2yXnms0MsnsG8s2mYPl/2D78P13xh/Y6w9eN8
ZqTZCz28wvwNPbiS3MTzjqvI/D3JumvITi+RP6P1+4xnmeVvUA9nj7HPg/3M
lWPJrn/h95DjNB+oD+Xkank/8NJ45SjOA1omWHyh17ea/9DvbtP4yHnlwInm
L7xfvFOvl/3ovZPtfpj/ppg/cB41jVwg74/bpmt+sz6rLV5Y793qf/4+r8bi
h/e191i+48+Fai1e8vdG5v8gXbZEtP7kfeSemOUf4pswhp6lzH9BPl6X0evl
7z/urrP8x35gvuYr6+c+ciHP7+/XfJHfY+/fYM8L2vlJD9r9g3of/JD6L4Z5
8sZH7PvwdyO5xEc/f+Jx9Z+8j163VO2X95k7nlR/ye9TDl6u35e/1zj9GbMP
8/OzGm++f3xe9YG/33xB61H+PuupF9Ue+Xvs914ir03IvPKKxp9/j/+a3k/+
/xU915IH8P/P8Kbax///TBN5aQrX+//W/EnL7wPWk7ek5fnvkkdl5fnNen0W
9h/6H/LYOjmP/kDtm498Hf4ReXW9rP9jje8C7Mdjm7X+Fso8+ym5apG8P9mq
9iwS/39GPnCx6Od2jc9imce+1OsfxP58SKv2lyXe/wHNjWGI
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[0, 
           Rational[2, 3], 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=300\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7798253820784607`*^9, 3.779825388310852*^9}, 
   3.779826907970307*^9, 3.779827185861173*^9, 3.779897295990993*^9, 
   3.7798978133667917`*^9, 3.7798981605361257`*^9, 3.779898628940258*^9, 
   3.7798988745346794`*^9, 3.7799006086303988`*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"f0a3e51f-351b-41b2-b339-3a8243b011fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a310", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0310.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa310", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a310", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Orange", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=310\[SmallCircle]\>\"", "}"}], ",", " ", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.77982185326877*^9}, {
   3.7798254019259396`*^9, 3.779825417515901*^9}, {3.779826911770047*^9, 
   3.779826912313292*^9}, {3.779827215073*^9, 3.7798272180441556`*^9}, {
   3.7798273852688513`*^9, 3.7798273854614124`*^9}, 3.7798978073087716`*^9, 
   3.7798981534833565`*^9, 3.779898634365088*^9, 3.779898877975215*^9, {
   3.7799006122118835`*^9, 3.7799006129709687`*^9}, {3.78121868390582*^9, 
   3.7812186844486785`*^9}},ExpressionUUID->"2fcf5f6f-a494-4724-92a0-\
6cabf4463504"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnHt0VNXVwFNEjUoxImqKKaIGTTVqqMHGinpFBCqphhJr1GAjpUgpYiwI
ASIGCRIgZJ7JTN4PUKJmKWi0lKKiRowFNVKqKPiBBTVqtKiIqCjfmb1/5561
yj9Zv3Xn3nP2e+9zZzh7yt2/+1O/pKSkUccmJSX+bm297pmvxs3xkhL/Pmnz
3ks/bnH1RPjdNu/A2i0TfnUb/F2b1+/CZae/MxXe3uYNfnzc+wtmwelt3vkj
kjvSSuBzVnuXd3bPfW4xXNHm5f5q+TVFK+Hj2rzbN/5mQL9q+FCrd8+VJ769
ugluaPOWbP5n63Xt8P5W753Xv5m0bz38YqvXN3HD0KX/gAvavNFFH/Sc8zI8
s83L3/dQfdfr8AOt3qNfbP/tlJ1WnlZv05xIav//wIvavEGJBT+Fz2vzpoc+
K736a/jDVm9hQuAf4UFt3pvn7Pp2UfK9yjtaVf5B8O9bvfuuHnn7xjPhcKv3
r99OSSkYDue1er8oDLz49cVwZqt3/wyzoxy4oNX7d8nH540Y7Z6fUP/rE+Bz
Wr2Xh6376/Sb4CGt3pmXGAv+AfbQ53R4S4tnqPjKv8JDW72EunYthG9v9b5b
ZDawFE5u9Yx2fj8wANe0eGY3yR1x+GCL2qcN3tzi/fzWqVfseQz+vMV75qsf
dpQ8fa+v/wEJB3oeXtHiPVzfNWxdNzym1Uuo6zfb4S6et8utJ8/7AP5di5e3
KjZr0H/hCvZ3GH6d/fWbq/zPFpX3JLinWeU9DZ7T4iXUc+JZcHmL6i9jrr/e
DcZ8l/8Szm/xPvr+kS+2XwHHW9Qe11lu9tpMeP1wA1zU4l2x58ZVsQJ4TLP3
M6Pei6a45x3KMA7xF3hms/rLvW5/5umhzxbBKS1eQvwlFfCaZi/hPqlheFuz
t3Km2WE93NKs/vyQ+/zYhEIfhzOavXONO8/YAI9v8sYkHvACXNjknZ3YwFar
n2aNt3/D6c3eWUs/nbjh/+CuRrVnL7yzWfX/hX1es5dQb/H3cGeT5oNj5yl3
N2k8DJznX28ZYhw8FQ42eS8Y8z5zNry70Xt/gQnQC+G0Js1X2XBHo8p3FXwA
+cbB+U1eu0l3yyfCpc3eq3Ofax5yG7yhWf1rqr3epP4wy+3n7kQCmQdnNKn9
FsOHG72Dxn0/XgEnNXkFiQQZheNNmo+a4Iomzcdr4cFNqu/1cG6jxs9G2GvS
+O6CdzTqfl6DZzbqft6G8xq9RDr+YK/TR4N53F8/gac3qn6+grMaVT8/wKmN
Gs/Hl7D/Ro2XFLinQf17CFzYqPnwXMtN3nAj3rUXwZWN3mvbzL/L4LRGL5FO
b/Xg9gbN/78p8dc3d6+cOQkubfQS7vVtIZzfoPExDT5Q5yXccUAxPKpR9Tsf
PlLvJdx36BK4f4N30ZON/11bCR9Enho4WK/+1wxX1Gt8PWLXq/dSEgZ+Es5u
8I6YdPHbTXb9Bm+NSTdvv2z1Ue+ZapBR+IbVX73aZyfcW6/++x84o8GT+v0p
PKdB8+PX8LoGzT8/wsnoI3m+8rZ6b37CoQfBa+o1vs+Ex9erfYfDRQ2avy6G
u+u03uXAWfVaP6+Z7+vzR+Pu502AO+o1fvLhaJ3q83b7/HovgU/eCR+u0/7j
HrisXvPLAriyXv29HPYatN9YZeWpU3vE4LQG7Qda4MH1Wh8ene/bM2HuLU+5
/Uo+eRbuqVN7boEb6jW/9cB9dRpv78AVdV6TedyEfXBpnfp3H7yuTv3h0P/c
fxSeWq/3n7AAe3P/IDitTtdPg3Pr9f7hcHKd7v8SeB3+mAOnI/9ouKRO688E
uAX93QQX13px4z6bb4dT6lT/0+E5tRrf98CHa9V+C+HeWi+RLjvL4f512t9U
2efXab2KwX216j+t8JhazS+PWn3UeglzDuuEs2q9ulrz71m4vVb99xW4o9Z7
yYRXoAfOrNV88C48s1b7yX1uP1KPPnP7l373EDyqVuPvKNxTq/nohIW+/BK/
g+CsOu/zUqOgNNj4g8T/cLgl7iXanRsvgbvi2AvOqfVeMen3mtHwYPQ9AU6u
9S5N/LtpoW8vyV+3w6noazqcVqv57x44GNd+byG8Ia75ohzOi2s9WLXQ16/U
75h7vsjbYu+vVXkfhfvi2i895far8QUfiHuJ9LZpC9wdV//ogffXem+Y9P/Q
O/CwWq3P+5y8Yt8+eHdc/x6CC+La7x2FU2q1HieXKifVar0ZBBfFtd8+E94U
13gYDu+Iqz9f7K5Lf5IDj4qrP15T6q8n/eUEeE1c/SkfNvb/nXG/TyeX+vJL
Pbiz1NdfQr09xfBg/GEBXBr3xicUusTuL6b1bFWpbz/RT02prw9dF+6Nqz0f
cesb7V7y3pNwT5z6VerbT/Lty3BJ3EuEy4VvwNlx77AxV/1Ou/+Y1pv/WP3E
1B6fwp0x9Z+DcHHMS6hj4o/w5piud/x9yntjut4p9/nySX0aAu+OaT+VDuci
30VwOfJdBm+KaT714Iq41vffwMVx1eckt16ifVlZCB+OeQl3+eZPcGFM5927
3eclf5fAXsxLuNPIB+A1Ma2fK+GSmPpLNXwgpv1ZE1wZ0356LZwd03haD0+P
0R/a58V1PuiCc+JeYlxc/BrcG9N4eMvKi/73wmlxzTcfwyno4yu4NOZdn0i4
R+A5MW9gIgEdu0j5SMw7I9HAnQx3Ee+pcEZc89M5sPEf6TcvhLPiOv9kw/lx
795EwroKPhjT/Y2DB9Tq/ibCmeSzWxf58kq8/RHeH9P8execS3zPhXtqVH9l
cFJc+63li3z5xZ/C9vMxjc8Gt77kr4esfNj3CbtejPkLTotp/nnB6qvGm5dY
YCvcWaPz0Q54WI3Wo/fg9Jj2+x/Bxh+kfzpgn48838EtNSrPMfcrezU6Pw2A
+2p03jkdPlDjJdq1xrPs9WrtvzPggpjm01/COdjnCtjEi+Tv6+CdNZoPb4Cj
NVofb4Y31Gg/cQecGtN4n3G/v3+RfzacUqP+dp9dr0bj4UE4v8b7crtRUBAu
rNH6XQsX1Wj9bYOn1mh+74A7ajR+noZLa9T+z8EN1dofdcNJNVoP3rT6qPHu
ShTEd+Ft1Zpf98M91doPfQaX1Oj5zjdwZY3Wx6Qy5d5qXb8/vKla89MJcAb6
GwhPr6Y/gQ9Xa/9/BlxcrfUuzd0v8TIMTqlW/Q+Hu6t1nrsA7qpW+S6Gd0fV
Xy4t8/Ut+TYH3lmt52Gj4Gg18wS8Af2MhQfXaL69vszXl/SHN8JjajSe8+1+
Y+qfBXB5jcbjZNgj302x8tPvTLPrx7Sf+ovVV61+vhhOr9PPz7H31+vn58Nm
fpbPL4L7c/7wgF2/UfezDM5u1v1XwuObdf9BuLJZ5a2GB7aofurgmc2qnya7
n2bV52o4uUn13w5XNGn8dMADmtRe6+HUBp0XnoHNvCD5faPdL/X3eWuPmPpP
l9UP9aXbPr9G/e01u1/yy3a4qFrn/bfgzfjzLri9Wvvdvc5fpR7uh9OqNd9/
bP0tqv3C53b/Ue2nvoSHVWv++waeGtV6dMT6f1TzQdJi5cyolxB31rHw/qjO
GyfC66Ja3wbC8aiXSIdTT4Xzopr/Uxf768v8mwY3RDV/nw3PjOo8PxwuiKr9
L3DXxZ6XuOsSf5fC06Nqnxy4OKr56Up4Z0TPt6+Bt0W0no9d7OtD5vUJ8I6I
9vM3woOjqr98uLBazwdugfdGdb6c7PQ1LfFvCjwmqvPYne75kq//AndHtd4X
wx1RjYc5cF9E/XU+3BnV+rvIyS/57gF4d0T9aRmcHdX6WgnnRlW+IDwqqud1
1c4+Uj/r4PSI2rsJTopq/7caPhLRfrQdTotqvHfAPRG133rrDxHtd56GD0a0
f98Ir4lq/n8eHhDR89yX4PER3W+3k1f2+xpcxH7fdPaXee0ta6+w/t0Ft4c1
f+yx9o1ovt8Pl0RUv73Ov8V/PoOzIl4ivWd86fQj8XQIDka0//ne+ltE/SHp
AewZ0fOj/vCGiOa7E+BoRPPRTx2LvgbBBRG17xkP+PJI/J8J94/ofDAMroho
fzAczscffwGnRDSfXwyvi2i8/RI2/iD57VdufbHXKLiX9T13XfLJdXBxROfx
6+EDEZ3vboB3hFX+SVYfYa3PN8MZ+HchPB393wGPD6v+/2SfH9Z4nOH2I/3G
3XBeRPPNbKuPsMZXCbw7rO9rSt3n5f3YYrgrrPngQbdf6QdXwHPCmu8CcHdY
+4EIfDCs/W4czsKejXBOROerVrs//OlhOAV5HnP6E3megE08iDydTn7ppzbA
nWHtT5918km+fxFOjmj+3gJPDWv93ur2I/Z5wz1P4mMHbOJHzvffgRsiOu++
Bxv7ST/9H3gN+vkQtv72KXwkrPn6ANyLvQ/C5RF9H/ot3BLW+vID7IW1X+23
RNnYV+rt8bCJT5lPToLTIvr+KwU2+UPy3WlwEvn5Z/D+sPajQ5f4+5d4OAeO
h7UfPx/eFlb7ZcIm3yXU05wFj4lo/zAS7k99uhw2+VSedxVchD9c654v+xvn
7pf95cJ5xGueXS+s/nUTXBnW88Jb3XU5/7gdHo/+/gjn4q93wiZepT+Y6fQl
/WGx04+c190LN2DfBbDxZznfXuTkkfOjJe5+6e+WwRVhzQ+VsIk38b+QY4nP
aree5Ls62MSv9HNNTj8S76thE88SH+1wFvmrAy4Oa/1YD08Pa//2NJxNPt4I
78T+z8MF2OsluAP9dlv/xN+3OZZ6/Kbbr8TPv91+RR/vOnml/9sDR8N6HrTP
+lNYz+d74S7yXx9cGtbzrS9gE3/S7x2C14XVf7+Dc9j/UfhISPd/TLm/ntgz
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
8N4q/b7BPS6vSP2fa+0V0PlhgZW3Sv1zEby5Svu9JfAw8tEytx/9fS6czflf
wN5P/x+FKwIan3Fnb9lfg9OX9F+tcBnz2kNWX5xXPAKb/k6+z/Q4nE4/+CRs
8rHkp2ec/eQ8ZCOcRP/2PNxAPX/J2VPs+wocr1J/3Wb1Rbz2uP1JPdoBpwY0
f+6069EfveeuSz/1vtOXxNMHbn3RxydOH5JPPnf2E3/6Erbz1CEnr/Sb3zt5
pf8/Cpv6Kvb6CXnF5Cs5j+wPG/vL+5jj4BTOc5Nh48/yfuXEoG8/qTcD4Aqt
F68OdPcn/O3zFDhb59FTTw36+pP1ToPLWO8MOFf/lv0s6MuTyDdrzoRN/hF7
/RxO1vcTfWfB6Sr/KefAxm6S39Ld/hLhe8t58Ez8IQM2/ib/XcoF8ADyWaa9
PyDvk3ovhoPk9xGw6dcT7+eyLoWziKeRcJH2U/N+5eRLvI+suxzOZB6+wt5P
PbwS9jQ/H+s5/cl5z2h4DOe5Y2B7fjDW6kvtHx7v7k/o5+nrbV+l/c7OXCuf
5sPvboBz8NeJsKnvcj4zCV7H+dlN8Cbq9c1WvpDGzy1woe53623Wv/CfybDJ
z2LPIrhS82v2FCdvYp65earzN/k+5DTnD5IfpsN8P+PZGdZ/9Txy70zY9M+S
r++28cL58T3OHol+YOxs+LD6w/R74RI9f18xz+lX+r/51t58H3UhXK7vjw/c
5+wl8Vnm/FPkfcDKF9L+stzpT97XPgjv0P4kXmH1yfdPVsClIYm33ZVWv+r/
R6qcfcS+Ias/vu8SgTvVH++otvrS+vZAzMkj80Ctu1/ip97qg/dVjXBqSPzj
+Ba3v0Q5P7/Nxrvm5/Fr4IKQ9JN/ftjer78vWNFu5dXv+z32qPVn/X761g4r
r/6+pu9xOKrf5/3penhbWPqxi5+Cd/N7u6ftfvi92t/cdekv/m7to7+nfOIf
cP+o1Ks3nrXyV2u/8jx8pFrn+xet/+jv9bO67P74/3G22Hjk//PotvaulfuD
/7T2q9fvB2yzn2/Q9V+315t0/R6bb5tl/yf/y/pnq55H/xveqf//4g1vw11t
Kv878MHVMo9X7bL2flj72ffgoWv1/ckeeFa76v99eOyjmj/3wwM7tB/7EF70
uMzn1/fa+Fjn/T/jwll5
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=310\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4444444444444444, 0.22222222222222227`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0.33333333333333337`", ",", 
                    "0"}], "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], Editable -> 
                    False, Selectable -> False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798254186775665`*^9, 3.7798269127925587`*^9, 
  3.779827219100747*^9, 3.779897298685752*^9, 3.779897808571577*^9, 
  3.7798981545259047`*^9, 3.7798986355652256`*^9, 3.779898878681053*^9, 
  3.779900613602693*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"572630e4-478a-4f74-88e9-f76b90430672"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.779825195947195*^9, 3.7798252350179205`*^9}, 
   3.779825267938369*^9, 3.7798253243381734`*^9, 3.779825360270197*^9, 
   3.779825397801945*^9, {3.7798254324495654`*^9, 3.779825469080004*^9}, {
   3.7798255146399307`*^9, 
   3.7798255193250976`*^9}},ExpressionUUID->"6217008f-8b18-49fa-92e4-\
554d2f64db93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a320", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0320.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa320", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a320", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Pink", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=320\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.779821858924608*^9}, {
   3.7798254366500387`*^9, 3.7798254531926174`*^9}, {3.779826916622516*^9, 
   3.7798269167698803`*^9}, {3.779827222397447*^9, 3.779827225894782*^9}, {
   3.779827389170101*^9, 3.779827389277809*^9}, 3.7798978025721445`*^9, 
   3.7798981476662064`*^9, 3.7798986408445363`*^9, 3.7798988835194664`*^9, {
   3.779900619261766*^9, 3.779900620187368*^9}, {3.781218687889436*^9, 
   3.7812186884888153`*^9}},ExpressionUUID->"b39ba7f0-6ab9-4b36-ad03-\
797b4d40a347"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH2c1WP6x2cTBrOMhDZtQphlEMoOkq+kWrVM22Ck/EY7m9k2ZAvRlNHj
VFOd5znNw5kzz1Pml2KkbUNIhpK0sxnkJ1sIw4bkKfrd57re9/d+7fZPr/fr
e873e9/Xw+e6rvt76qyJ9/3hT93S0tIGH52Wlvp7a+0N674eMd1LS/3Zs9J7
r/8xj0XHwJGV3oHmLaN+ewd8uMXrduHC094uhM9e5fVcPeKDR+6Fv2jxzr80
vbXPDLi9xbuyrf3B5x6Ds1u80b9ddF3BEnjVSu/ODb/L6BaFN7R4919z/Fv1
CXu92Zu76bXaG1rgeS3e29u/Hbt3Lbylxesas77v/L/DTS3e0IIPd5z9Mjyu
xcvb21i5eTu8qdlb9eXO30/stPtp9jZOD/fq/i/4uRavR+qBn8Hrmr2i4OfF
134DT2nxZqY2/DOcbPHePPvd72enP6Ccz/57wBObvFnXDrpzwxnw4mbvH7+f
mJl/Lhxr9n4zfvmL31wMdzV5j042K8qBL2jx/jnjk/MuHQpnN3sp828f9YBv
n5f7rflr0S3wuibvjEuMB/8H/qJJ7VkEn9jsGZp6zV/hSLOXMte7M+GcZu+H
2WYB8+FdTZ6xzq0nLodbmjyzmvTWOLy7Sf1TB3/U5P16XOHV7z8Of9Xkrfv6
p44ZT8Pbm7yMVAA9D2c2e02Vm/utaYdvbfJS5vrdTriQ+70L13G/D+HVTV7u
0vJ7e/wbzmB93zl7yvq6Paj8YJPu9wT4sibd76nw9EYvZZ7jz4TXYL8s+LQm
7ybjvisvg8uavI9/XPnlzqvhAY3qjxvgi5u8OpNeP90E727wrn7/5qXl+XBn
o/crY96LJsItjd6hLBMQf4GvaNR4eQBub/DM3YOfz4aTjV5q+3NL4Z0NXip8
eoXg8xq9JVPMCivhIY0az43wskZveMqgq+Edjd45Jpwnr4dnNHrDUjd4Ae5o
8M5KLWAr3Nag+fZPuG+jd+b8z8as/z94cIP6cz+c36D2/xIe2uilzDv1R7h7
o+rB0Q8pj2vQfDgRLmjwkr1NgPeCEw3eC8a9686Cj2n0PnjEJOiFcF6D6tVA
+Fb2NwQONOj+RsDv1HstRu4WjYGLGrxXH3yupvcd8IAGja9CeHuDxsO98IZ6
776UgDwEX9Cg/nsM7t7gHTTh+8liOF7v5acEMmLvV696lID31KseN8M/16u9
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
e9L6K6zvK59xz5f+8O/O3nI+sAluC+t8utn6J6Tx+yqcj79et+sN6Ty8E46E
Nb53wbb+vwsn8ef7Lh6lH9kH7w5rvu+Hu0d0Pv7cxZucX3zp4l/0+BA8Paz9
7Q9wL+LhiFu/9DtHLVSeF/ZS4X91OlxEfmXAg8N6/nsybPRffj9y6kJ/fxJP
vWET7zK/9F3o21Py8xx4c1h/n3M+3BBWvcp2z5d4HLDQX6+cpw2C4yH9fcyV
C317y/Uh8BquD13o21vq0Qh4Slivj4JzuJ4LGz0Q/chz+5frt8Pruf+E//r+
RDiL+0+y62V9f4FHc/0+uJDr0xf6/pf9z7D2xT6z4H0htd9jsId9F8DDsP9i
OCOs/dVyOBv/heEy/BuHp+P/Kmc/OV+uhfsQP402fkI6r6+y9gtq/K129pF6
9RRcHFK9esb5V+J7o4snif9NsMkv0buX4faQ9rOvwkZ/ZF7ZbuMzpOebO238
hVRP37LxGdJ5/l3nD+mX9zj/yny+D56KPnwC56Hnn8PfhXQe/Mp+PqT6c8jZ
R/qtH11+iH4dgQNh7ReOKlUuCqn+pZf669H5EO4e1vp8cqm/Pun3ToVNvkt/
1RtOQ5/7wl5I6/85sMkX6W/Ph43eyXlXNlxMvA6A9wc1ngbBJSGNlytLff9J
PAyxHNZ+dijcEtLzjhGwiVfx56hS314yr+e6/Yi/8uCeYS91fNfzdnhPSPuN
CbDxv+j9RHhGSN/vToKNXsh5zGR4W1DtfR+8iX50mrVXWOevGbDJVz0ftesP
8ftgeAD943xrf/J7MWziVd6fLIMD5E8Y7k89L3f+lfivgjuJ7yRs4k/630bY
6JXMnyvd/SU+V8NGD8QeT9p4I/7WwUYfpd/5O2z0RuLrebd/eb+wGTZ6J/HT
Dls9fN2tT/b7Jhxnv7vgbOrZO3BpiHkRbmV+2wsX4P/9sKkv8vuSLmcf+ftL
2PSvMq9+AydD2t99D5eRLz87e8u80m0R62E/x8KmH5H9nAD3pL5mus+LfvVc
5O9f4vlXsMln6fd/DRu9kPnwbHgY/jkPnkH/fQEcCen57CWLfHtLfl8OZ4b1
fC/Hrpd6MRi2en0dbPJF+u0bYJPP0q/c6PYjeniTe57E01jYxLPo2W2wyR/R
qzvgjJD21wWwiSexbyE8hfz4s9uf9Kv3uP3L/PZX2OiVnPc/6Own/dlM2NQH
iYdHnT0lvufCA9DPUtjUB8nnMrg79gvCRi+lnkbhwSGtZxXOn6JfCbg/9aQe
3hHSfrMZLkB/HocPh/Q8aQ3cxXraYJMfosd/c/aU+v0s3Cek9nnR7U/sswU+
GNJ82QrHqU9vwPkhja9/uOeJvzrh3dSH3XC/kPYbH8CF9Jsfwp3U40/d/iR+
voBHhnU++trlk+jvt+7zMi/86Owpv/9JW6xchJ50X+zvT/rf4+Bc9PGXsMk/
qd89YBMvMq+dBmeg971hky8y758Jt9DvnQNnkz9ZcBX+z3bPk3i8FB6JvQfB
pl7J+f2VsKlPMi8NgTNDer4z1K1H+q8Rbv/ye6JRbr8Sb7mL/9O/eXAv+od8
uITnTXD7l373Lngb+5sEN4R0Xpnsrsv8eh88HXtOg3ejrw85+0h9LHb3k3wq
gcuI3/mwiS/R+0Vuv6I3y9x+JV5Czn5yHhyDB4RUryvhw0E936ux6wuqvjXA
/ekfWuB9QdWLVvd8yYe1Ln6kvj/trsv8tAFuD6q9nnP+kPh7ye1P3j++4uJB
4n0r3BbUfN8BTwlpv90Bt5Jfb8PprP8964+gzssfwEZPpb59ZJ8XVH9/Chei
Z/928SLz69d2PfRT3zn7y3n7YbceGW/TligPDGl/ePQS//5SX46DDwQ1P06E
s4ifHrDpL6XfOA1Oox89A96GP8+E1wS1vvZf4q9f9D9rie9fif9suID+91L3
PNHTQXBVUOfxq5b4/pJ+aghs6oHYdyicTT6NWOLbR+rtKLgsqPNNLjw+qHqY
Bxt9kHqQb+0V1HibAHcEVX/ucvaTfJkEm3jV3086lvc798Lrud80Z0/9921L
fP/K/YqdPeV+JbCZ52R982ATPxJPi+CckM6rS+HD7DfknifnKTG4J/W4Ajb5
Kv1kjbOf6EP9f/mjxflf5q9W5z/x7xrnH9Gbp+FAUPuJv8Gj6cees/YPql6+
CO8I6vvQLZYDeh62Ff4uqP35Gy7eJZ473Polvzvtfpm/drvvy3nJBzY+0YsP
nf8k3z6FTT2QfuULuDWo9eErF+9S/7519pH4+hEehh4cceuV+ta9zF+fzG/p
8Gjy6ZewiQf5/d3JcFdQ9erUMn+9cj7RGw5Qn/rCJfS358BFQe13zi/z/SV6
eiG8h3gc4D4v8TMQ7kO/kgMbfZHz3WtgU49EH66D26mPw8t8+4t/bizz7SX6
dROcg56PhdOpR7fBSfLrDru/oMZvAVyKPQvhAs4f/gyvR+/ugUfS790PHwzq
ecyDcBp6/Ahs8l/+ftTuN6j6M9fai+cvhAfz/DLY1D95fgDeGNT4jLj9Sr+x
At4c1Pm72u4/pPlbC5v8Ez1tgjehz6vc8yU/noDzmbefcvaT/vIZOIN43ui+
L/q7CZ4X1PPizTZegpqfr7p4lPh73flb8mknbOqpzPO7rH+CqjfvuPjW3wvY
z2Ovvfb55PPHLn6kX+py8SH6eQDOpd87aPOD+v69yy+pjz+5+JZ+p9tS5UzW
e8xS3z/S/x6/1Pen+Pcke534PgUeyLx1uvu+2LfPUn/90j/0g3vRv/WHq8jv
38DZ9NcXwaZ+Sz5cutT3h8TDFbDRWzn/ucqtR/qha+EZQX0fcD3cn/o5Au6H
P0bDZehr7lLf37K/PLd+0Y/bYVO/ZP6a4K6Lft1l1xvSfJvk1i/n+5Phkfjv
Xrd+ibdpsKnn0v8/BJv6J+d9xXCcfqPErUf//SRs6rO8D1wEF+DvpW5/0p8E
rb/Qs5i1b1D7sQq4jX4hAecyz9fD+5nXm+EI893jcBrnc2vgQuaJNvd5/T0d
nE//+CxcHNL6/AJs68XLNl44T37Nrod6td3ZQ+JvJ1xEP/mWW5+e37r9Sf1/
Hzb9t5wn7HOfF/3cD9v+rQteg358CQ/jfOEbuIH+53sX7/rv2eAd+L/bMu5P
fTgGLg3q/HoC3B19OgnO5LyqJ2z0UOpZL9jEi5wn9Vnmr0/i6yzYxJv+fyTu
fvL538BtfP7iZb695fOXwa3c/4plvv3k81fDfaiv18K7+fz1dj+8fxsJm35Z
9jvasdgnF96BXuTBxdjzdriQeXMCvJ557C44nfyb5PYrejQZzqE/uNetV+Jh
mru/xM9DcC7vH2fCNt5K4M2cX8xz/pD+sBTuRb+w1N1P9DTo1iPzaRSusudH
dn0h/f1OAt4U0n+vVQeb+iX52Az35H3z4+5+0j89AWeR723wAebl9bDV143w
QPTkBdjUN9Hjl2E7f74Kx4Paz2138Sr9z07nb6lnu6z96Ffetf4Pqr/ft/YK
qv/2wgHy+WM4j/cNXc6+0g8egE0/Ib9fOAibeiL2/d76k/7+J7s/+o1fLFce
HNR5+hi4mP7kePhAQPuDE+GsoJ6nnQIfDuh8dTo8EH0/Y7m/Psmnfsv99cn+
+8Pj2X8W3El/kw2Pph+8FB5JvR603N+P6PGV8P6Avi8Y4tYr9XIobOZLmdeG
wx3M46Pc/WQ/N8O9qN9j4U3sJ9/dT/qZ8c5+0i8XOBY9L4S3BbRf+jPck/py
DzwgqL83uB/OoP4/6PYv88Mj7vkSn7Pt+gLa782FWwKqRwthqxdLYKPPcv63
3D1f8jni1i/5GXcs66uCN9N/1br1yLzW6Pwv/fBK2MSj/J5ptf1+QO33JFxC
v70O7sd5yAbYzIvSvz3v1iP1/CV4B/59BZ5OvG6DPfJ1h/u+1KMOeGpQ9bPT
fV/i7z2XL9JPfQCnk08fwmsCao9P4X0B1ZMv7PMCGk9fwcmA1oND8B76zR+t
/QLa/x+B2/HXLwLKHQE9j+wOZwf1fcwxAd+f+nvbgL9/eb9yPFzA/J0BZ2i9
ePXEgL/fVLx9kQkHdB495RR4PM87FR7I804P+OsVt/4KztTzu4Yz3PPEX7+G
iZ+uM936U/s/+Ww4B33rD5cFpV7cfp67n8RDFrxe8yd5AbwNPcuGjf6m3ift
vxiuQt8vdfZKvZ8bcLm1N/3MIHhPQPqph34Lm/hJvY+suBI29ULm0avdeqQe
XuPWm8r/oz37/JCe9wyF0zjPHWavBzT/hzt7p/wfGgl31/r69I1wsfY7naPh
ItXDH26CR5O/Y9z65HxmLGz18BZ3f9GD2+AI+XM73BKU9W69w/pH3+98McHa
W+fZkwvgw1ovBk509k7NM7cVWg7p7yEnwbvpX4pcPKX66Wcn23jV88g9U+z6
6f/ugzdxfnw/fCAo/cDwaW598n7xAZsfOo8ufsh9X/q/h+H+vK+YCZt+OtU+
H5hl7c37gpL/2u8ceDr95TzY6Je8r10A99T+JF4Kd6L3i+F8Pc/aXWb9ofPN
4WXuuvg3aNfHvBeGp2h/dlfU2jMs9ppTDu9nHlgBt3I+WWnXF9b5phqeEZb4
ODZp41t/33B+nc0P/X3PyAa4X0T6yT83WT3Rf1+wuAVO6vv/x1fBB/X391tb
4Tb9vWbXahtv+nveX66FS/TfC1z8lLUPv6d/2vqf37M/Y+/Pv0/8G/yd/vus
J/5u9alc6tUbz9p4iWu/8ry9f4XO9y/CvapUPzZbe1dpvdti9Yz/z6Pd+isp
3w+8Bo+r1d8HbIN31urzt1t71uvzd9jnN8r6T/oHvLFJz6P/af2v///iTW/Z
6yt1/2/DZ7fKPL7sXRtv/6v97HvwyDX6/uR9+/21av8P4JeeVP3cBx95Svux
j+BPn5b5/Mb98KnPeP8PyX6P0A==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=320\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0.33333333333333337`", ",", 
                    "0.33333333333333337`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7798254562397394`*^9, 3.7798269173567114`*^9, 
  3.7798272266059313`*^9, 3.779897301421379*^9, 3.779897803955702*^9, 
  3.7798981487066145`*^9, 3.7798986420533333`*^9, 3.779898884215207*^9, 
  3.7799006208140373`*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"74c4bb0c-278a-4b57-9df2-2098551e359f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a330", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0330.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a10", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"a0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aa330", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"a330", ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", 
     FractionBox["1", "GoldenRatio"]}], ",", " ", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", ",", 
    " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
      "}"}]}], "  ", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
       RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
        RowBox[{"Darker", "[", "Yellow", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\"\<\[Theta]=330\[SmallCircle]\>\"", "}"}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
   3.779819810263851*^9}, {3.7798217204654016`*^9, 3.7798218649456625`*^9}, {
   3.7798254723399153`*^9, 3.779825506219406*^9}, {3.7798269217767687`*^9, 
   3.77982692203918*^9}, {3.7798272305430603`*^9, 3.7798272334716916`*^9}, {
   3.779827394950475*^9, 3.7798273951443863`*^9}, 3.779897798036618*^9, 
   3.7798981414985123`*^9, 3.7798986471072206`*^9, 3.7798988882645664`*^9, {
   3.7799006305957804`*^9, 3.779900637956069*^9}, {3.781218691561797*^9, 
   3.7812186922489595`*^9}},ExpressionUUID->"1a28ef6c-d9fe-44cd-a411-\
32f7704b9307"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1: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
CZv4kv567MK0P8W++dae5Me9zt7Sr94HT2V+exBO+vW8fxps8kX6s0fgA8TD
Y3A34nsuvIf5ZgE8hHwuss/Dfk/BudTTgLO31LMovBX9KodN/yH1JA6b/JR+
s8ba26/6Uw8v9+t5UhPcwnrWwEf8qsfPwz2p3y/A6/xqn5dh0x+KfV5zLPny
losvqU/vuHiS+PoP3B9/7YJNvZH83gNP8mu/8THcQL3/FDb5KPX4S7dfiZ/D
8Dy/zkffwWG/6u8P8AbmhZ+t/4L6+59Wi9Lrl/zLWJS2h/S/J8Me+vh7eLhf
63cHuJ1f57WzYBP/oved4K1+nffPhXPp186HW+h3cuBCv/q/J5xDPF7q1if2
7gsv8Ov5/ZXwoIDOSwPgPX493xlovx/U/mswvMWvvycatihtf4m3XDiT5+XB
pX7Nx5FwF543Gjb9j/S7d8Eb2N94eAbzykTY6JHMr/c7+4g9p8D56Ot0tz+p
j7Ng049KPhXCRm8kfp+ATTyI3i+Ej/tUb5bCzT6Nl2L3PDkPDsKj/KrXJbDp
z+R8bwWcRN8Szn7SPyTt537ViwbYxL/kwyq3fqnvz8Kmfsj8tN6ux6/22ggn
fBp/r8Am3+X94+vOHxLvb7n4lHxvdvEi/fYOG1/0u+/D2az/Q7d+mZc/hjtS
3z6zn/vU31/CRj9Ez/7n4l/m1+/gNT7tp47Z+PPpeftxt14Zb1stVu5Df3ji
4vR+pb6cDDf5NT9OXZxej8RPB7g3/exZcAv2OAc+gD/Phf0+ra/dYBMfov85
cC7x3xOe4dP+91K4m1/1tK9dv1/n8atgz6/91AA4y6f2Hbg4bS/Jp8HwBOrt
MLi9X+ebXPhIsephHpxJPRjp7ifxNto9X/TnLniXT/NlPGziQ38/uTjtL3m/
MxnO5n5T4FHcb7qzj9xvFjyW+xXC/VjfPHgQ8bQQNvEg8+oSeJNP91sMF/j1
PCUIDye/orCpD9JProDboQ9xuAv+SLr7yfzVAM/Cv00u3kRvnnX7l37ieXgH
8bLR3s+nevkyfNyv70Nfg4f49DzsLfu5T/vzd+AK4nmHe57k9y73fenP9tj9
+PS85GMXj6IXn8Kmvkq+fen8Lf3KYWdvqQ/fOpb69wOcR7392cZXQOP1N5s/
Pq1vGUXK+3w6v2XCpl6IfX4Pm/iQ39+dDpv8FL06Ezb5J+cTneAw9akzbOJb
+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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 0], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=330\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4444444444444444, 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.779825496785127*^9, 3.7798255070069995`*^9}, 
   3.77982692254434*^9, 3.7798272340522013`*^9, 3.77989730409236*^9, 
   3.77989779907428*^9, 3.7798981425211163`*^9, {3.7798986482450585`*^9, 
   3.7798986506350946`*^9}, 3.779898888961329*^9, {3.779900633973858*^9, 
   3.7799006387215376`*^9}},
 CellLabel->
  "Out[401]=",ExpressionUUID->"c619e9a3-fc96-4674-aa45-66b3e9e72518"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
  3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
  3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
  3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
  3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
  3.779819599438278*^9, 3.7798196717483397`*^9}, {3.7798197363380766`*^9, 
  3.779819810263851*^9}, {3.7798217204654016`*^9, 
  3.7798218649456625`*^9}},ExpressionUUID->"96deaae9-6890-4a4d-930e-\
7d9662558bdd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a340", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0340.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a10", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"a0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aa340", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"a340", ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", 
     FractionBox["1", "GoldenRatio"]}], ",", " ", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", ",", 
    " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
      "}"}]}], "  ", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
       RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
        RowBox[{"Darker", "[", "Purple", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\"\<\[Theta]=340\[SmallCircle]\>\"", "}"}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.779812995367056*^9}, {3.7798146576253233`*^9, 
   3.779814660067727*^9}, {3.7798151984131603`*^9, 3.77981520531594*^9}, {
   3.77981532826414*^9, 3.7798153579772983`*^9}, {3.779815437349804*^9, 
   3.7798154467505293`*^9}, {3.7798168162021685`*^9, 
   3.7798168176293716`*^9}, {3.7798196795281305`*^9, 3.77981968236246*^9}, {
   3.779819812978495*^9, 3.779819813238173*^9}, {3.7798218676191835`*^9, 
   3.779821868097145*^9}, {3.7798255249819736`*^9, 3.7798255735077343`*^9}, {
   3.779826926405682*^9, 3.77982692665676*^9}, {3.779827237860964*^9, 
   3.779827240970171*^9}, {3.7798273986260495`*^9, 3.7798273988359947`*^9}, 
   3.7798977918968363`*^9, 3.7798981359706993`*^9, 3.7798986559351187`*^9, 
   3.7798988949435635`*^9, {3.7799006443964186`*^9, 3.77990064589944*^9}, {
   3.78121869568176*^9, 
   3.781218696280987*^9}},ExpressionUUID->"68957e7a-4051-4375-b77d-\
164ef8bc5510"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         AbsoluteThickness[1]], 
        LineBox[CompressedData["
1:eJxdnH1YlFX6x1mzInONzIw1t8iwqMi0sKjMjmZqSkYrFZm26pKZmVmab5mR
YqKimc77DMMgwzDAiMOLLrmUVmS0vkQumamtllZW1JqZqZn+nrm/3zPnun7+
w/W55nmec8798r3vc54Zr5n4/N+e6pCQkHDH+QkJsb/bSu/f+MuwmSoh9m/g
BvVF6gWv2R8mP7dBHa3YOvKOJ8iPblAdblrS/fM88ukG1a1m2JfzppHPNKjr
+yVGes4h99ug7mxomfXOa+S7NqisO5YOGr+c/GmDenLTA5072MljGtQL93T6
rMxPrmlQi7b8u/T+MLmiQX2+87fRh2rJNzeo9ocbr1r8L3KoQQ0e/3Vrrw/I
ExpUzqFyb/NOctcGVfXzrgcn7iGrBtU0c01yx6/IQxpU19iAP5B31qvJb/44
/95fyckN6uXYgs+SN9SrT3rtO7Ug8SXwr/VYf1fy1/XqlXv7P7npSvLRevWf
Bycm5fYmP1Cvbhj7xnu/9iGPqVevTrFmlEm+uV59Oue76/oNJu+pVzHz7xxJ
7levPkiJvjj5EXK3enXlLZYH/04+VQd7TiZ/X6csmn7Pi+SldSpmrn0vk8vr
1OkF1gQWk/+oU5Z1Hu3yBrlzvbJmkxhxkRfWwT9ryZE69dcxeXcfqCYfr1Mb
f/mjbc4GcmOd6hwLoM3kxXUq5G1OibaQn61TMXM9sIs8i8/bR17N531NfrRO
Za9wTuv6P/KOWszvJPkezq/DLPA3tVjvxeS3arHey8nT6lTMPJ2uJt9E+6WR
X6tVoyz33XkruUud+vb3yp933U0+vw7+uJ8cqFVrrfT6Y5S5/+4DD61w5pKb
atVfLPPePJG8vFadSLMC4llyWy3i5SXzPOvpb/64gBytVbHlLyok59aqWPgk
ryZfWKuWT7Vm6CXfX4t4Lic/UquGxgxaQ86qVdda4TylUa+nVg2JPeBdclKt
uiY2gW3kl2qRb5+SPVF19eIfHm78L3lzFP48YsYX+/9Mbo2qmHmn/07+Kgo9
OH82+MUo8qEL+YeoCvSwAjyZ3KlWvWu5d+M15Kei6st5VoLeRL4vCr3KIBdE
sb6B5K/WY33DyH2jKmzJ3dKHyfOi6qNZ75T0eIJ8LIr4yiO/FEU8TCMfXK+e
jwnIbPJjUfjvNfJtUXXcCt/vlpEHRVVuTCBt5Mb10CM/+XQN9LiCnBiFvWv1
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
2dJPOZ/oQd5uR326imzlt/S315Kt/JF+53ryfOrpTfr5dsRjX3KhE/GTQU5i
v5JJtvJdznfvIWdRHwaRrXiX+ji0KO5P8c8IcgP1axTZyl/R89HkbqxHjxXF
/SH59QTZim+J3/FmPLFnHtlnx/nDM2Qrv0TvnjPPl37vBX29A+cxs4y9RY/n
kS09kr+vkodTfxaRMzj+EsMyfhE5m3q7itzoQHzazHyk33CT27j/LjafS/6W
Gn+JnobITXbYv8qMJ/mxXtvXjvpdT+7sQH/5T3I747nJPF/0dwvZyh85L24m
b7EjPz8ipzH+dmh2IJ926Xi3Yz+/m5xHvdlLnsr4P2CuF3sdIqfSXt+aeJB+
qd2ML/p5lJzoQL93nBxkPTtFTrejPv5h1if9TocVnB/newE5247+t9OK+PzE
v5eYzyW+LyO32bHfuoJsxaPYtyd5rB39QwrZqlfSv6WuiNtD8vsG8ir21zeb
+Uk+9CPvZ329nTzEgfOfu1bE/S390L1kq1+T9wH3kTPsqJ/DyFqvs8z9sr5s
cjvXl0MOsJ49Tm6wY/81jmzpvejXBD0e820S2dIzOd+fQs6i/6aRt7MezCBb
8Sf9/2yypa9y3jef3I32yCfbaI8CslW/5X3gUmNf8fcK41/pT94kN1LPHOQW
O/oxD7kj67uf3GpHv1tm/CP79QqzPsm/avN8OZ+L6nhxoD42kF2M/0ZyigP9
49vkJtbnd839Yu8PtL+pL/8mp7If2kkOM/52mfGkn/zM+BfntyZepf4fMNfL
ecJh7W/q5xEzP6mH7eQi+vNnstVPyP75V8PS/5wy8Yffs5EtfRb/d1gJTmR9
uIBs6ZnsXy8mp3D/dgn5JPW828q4f6SeJa+MP1/Ok3qS8xhf16yM+xf/H8nK
+Prl+htWxu0j1/chD+B+7FZyN55X3a7vt+P6u8njOZ97yVY/I9ffR7b2L/J3
ONnq72W9WeRVtE82+TD1IofcQHs+Tg6zHxpHnsPzmwlkG/01yaxf9GgK2dJX
6Q+mmfVLPMwg72H8zCbn2lFPXiZPZrzlm/slPgvM/KQ/LCRH2S+sIDc6oadv
6udzf2rX/uf7EA/Z6r/k+zt+croDv9daq8d3Ih8rDEs9qtbXO9E/rTfrk3xv
MPaQettoxhN9bdLzt0NP3iVb9UL0+AOzPtl/fqT9bUc/t5OcbEf/s4vcxHq2
W9vLjr/7tD/t8PcBcib9d0jnix35/C15iB3+aNfrs6MfPKrtbcf3F46Ti2yw
7ymyon79ofPLDr370xvx9ch++gLyERvs1Ym8xYb+oAvZZsN52mXmftlfXUHO
sUPfrzT3Sz6lkI+vwfpTyYlcf5p+ng3xmE4ebkd96keO2hBf/cmK+4s7yftt
eF8wkJzCfmAw+aQN+7Wh5FYb+rORZr6ynofM+LKe0W/E7SvrySVb/pd+ZqyZ
n/TL48lZNuh5HtnqF6RfesasV/zznJ6vDd83eIF81Ib6P0vPx4b9wzzDEp8L
yD4b+r1F5FQ79GgJ2WXj73PJ+Tac/71Bbrchn23kznbkp4tcuAbz85Gn2tB/
lZJn2rFfKyc32dAPVxp7yPeZasjptF8duZsd+rRRj2/DecgmY1/p3zYb/0o9
f588n/790Iwv8bpd28OGfG01z5d61GbiV/Rzj7GXxN8X5EYb+qkv9XptyKev
zfhij+/JZ9ZAT37S8W5DPB0z8Sr14ISJT+k3fydn29D/nzPxIP760yrwHhvO
IzuSm9bgfcwF5DQbv29LbrPh/UonslXvpN50Jh+0Sb34qAvZiu9YvP2URM6G
/lx2mRlfxrucXMTxriBvt8nf/L+QFfQmeCV5vB3++quej03ip/1qcgT7n0t7
kS09FX1LJSfZpV48fh05ynhII6fjfCxwI7kv9zvpZCu/Y++TjvQhZ1Hf+62K
+zP2fq7vbdqezKf+5Ayb9FOz79D2s8v7SM+d5AQb9qN3k614kXp4D3ky8v98
Zewv5z2D9ed2nOcOMfaU/B9K7mkX/68ebuYXs8+GEcYfsX5nT5aZX2z406OM
P/D7cnKhHeczo83zRA8fIVv5LnrwmLGf5M/j5ADmu+0JM57EzzhykP4cr+MV
+4GMiebz2H7msTzjP/k+5CT9fPYvk/X46KffnqLXg/OAg1O1/9j/Pa/tyfPj
F8iJ6AeGzjDPk/eLL5GtfIy168tmkwvYX87V9uF51Mvm+bH2+egr2l58X5BP
HovvA2QsNCz9ZQHZ6nflfe3r5CHY77gKDeP3RuQGnGftL9L2wvvIMyt1vjvh
3zfJx/l9lzVka/8Zi8cJdvO8mL0WOjXzfZpb5x/fX3jN82V/U6zn75T4uDCg
1++S/vf6tfp6fL9neJCc4pZ+8pmQXp8H9g7r/ML3/aqryHPwfaNtEe0ffF+z
vUbnF77P++darQ/4vUafevLRYvTPG7T//cinf+r58fd2b5FvDMh57vp/kbuV
Sr36+G3y2VL0K5vJx9Zif/8eORW/1+/bTD7N33Nv1fnL/8+jhfxNWO5f9W9y
ryp8P2C7Hi+C8Xfq+dRg/FbyDVGZ/yX/0f6uxXn0p+TV+P8XR31G7rEB6/+c
XLdR9uMr95G7v6Uqn3lw3GHNeW+p/wO/Upvx
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> 
         RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=340\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> 
                   RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.22222222222222227`, 0., 0.22222222222222227`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33333333333333337`", ",", "0", ",", 
                    "0.33333333333333337`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                    Editable -> False, Selectable -> False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.779825578208767*^9, 3.779826927149839*^9, 
  3.7798272416343436`*^9, 3.779897306346904*^9, 3.7798977942708206`*^9, 
  3.7798981371363525`*^9, 3.779898657035137*^9, 3.779898895673789*^9, 
  3.779900646503708*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"f00205c3-ee99-4a3c-81e9-d50c44cabe2d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.779816890630636*^9, 3.779816892668147*^9}},
 NumberMarks->False,ExpressionUUID->"c1c13400-a6ff-4cab-8bf8-e197e78ac279"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a350", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Peggy\\\\Desktop\\\\raman spectroscopz\\\\Raman \
Spectroscopy\\\\ramanSpectroscopy5\\\\analzyer \
angle\\\\SI_100_Ang_220_0350.csv\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a10", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"a0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"200", ",", "585"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"aa350", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"a350", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "0.01`", "]"}]}], "]"}]}], " ", 
      ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\< wavelength [nm]\>\"", ",", " ", "\"\< counts\>\""}], 
        "}"}]}], "  ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
         RowBox[{"\"\<LineColor\>\"", "\[Rule]", 
          RowBox[{"Darker", "[", "Magenta", "]"}]}], ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\[Theta]=350\[SmallCircle]\>\"", "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "table"}]}], " ", "]"}]}], ",", 
      " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"510", ",", "550"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"800", ",", "6500"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7798123576694593`*^9, 3.779812436430279*^9}, {
   3.7798124828485627`*^9, 3.779812648533454*^9}, {3.7798126795650544`*^9, 
   3.7798126806381083`*^9}, {3.779812767838931*^9, 3.7798127952053127`*^9}, {
   3.7798129848810186`*^9, 3.7798130770281696`*^9}, {3.779813133497473*^9, 
   3.779813204393096*^9}, {3.77981324023283*^9, 3.7798132487937193`*^9}, {
   3.7798158361556635`*^9, 3.779815838641968*^9}, {3.7798158701313057`*^9, 
   3.77981587438955*^9}, {3.779815913118965*^9, 3.7798159136030407`*^9}, {
   3.779816119143927*^9, 3.7798161602308745`*^9}, {3.7798162577022796`*^9, 
   3.779816269618739*^9}, {3.7798163098721037`*^9, 3.7798163896825247`*^9}, {
   3.7798164413861866`*^9, 3.7798164632867174`*^9}, {3.7798165198555*^9, 
   3.7798165334793563`*^9}, {3.779817332030589*^9, 3.779817365643488*^9}, {
   3.7798218859010224`*^9, 3.779821891620841*^9}, {3.779825539697816*^9, 
   3.7798255485548763`*^9}, {3.779825584581582*^9, 3.7798255942460003`*^9}, 
   3.779825992517848*^9, {3.779826930778925*^9, 3.779826930947937*^9}, {
   3.77982724583473*^9, 3.779827248914933*^9}, {3.7798274021346254`*^9, 
   3.7798274023328667`*^9}, {3.779897533447381*^9, 3.779897545488138*^9}, {
   3.7798976588270855`*^9, 3.7798977750966377`*^9}, 3.779898127375887*^9, 
   3.779898663155116*^9, 3.7798986970047464`*^9, 3.779898900441394*^9, {
   3.779900652693001*^9, 3.779900654052182*^9}, {3.781218699361709*^9, 
   3.781218699913806*^9}},ExpressionUUID->"23d11fa3-3264-4b98-a87d-\
966eb01efabb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]], 
        LineBox[{{324.497, 6341.}, {324.8892868852459, 6500.}}], 
        LineBox[CompressedData["
1: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
EfQ/hjyrCPNvLLlbEfT7ZvKeQszzfcmFRfB/f/LuIvjzTvLOIuTf3eQZRfBP
AjmuCPr0ADmmGOfbI9T6i1DPHyHHFmFeH0tOKUI//xj5ySLYL5lcX4jzgafJ
bYWYLyeRk4qM6eH/ppIHFGEee4H8eBH0+iWyuxD1Po18phD5MJ9cXIR4fVWv
V+rvEu0v0bul5O8KEU8ryScLUV9zyKFC7C9PXy/ndRZyeSHqp5O8rhD+9pDT
i9D/FSl/FaIf9ZNrCpHvAXKXQvivWt3fh36nTvmvEP37ZrK/EPr/nn6+nOd+
QE7lepvITT6s91Nymg/r/YI8uRDz2n5yv0L8PajitRD6cVjZywe9P0b+yQf7
tpCP+BA/P5O3+4ywvMedIZf4kE/n9P2k//mT3K4Q8RC1FLzAh/Oj9uRjPujd
ZUsj+xU9uoJ8ygd7dVsa2b/49zpyug/535N8wIf5oBd5ZCH6g75kqw/xeBu5
UyH0fAB5sw/5dhe53gt9u5e82gd/DdP3k+cb5B0+6MnD5Eof5vFHyYYP8904
8gruf8LSiP2lPj9FjmF8p5JH0f7PkcfR/s+T7T7k40xypg/9xhxyOx/0Zh55
kQ/5lU6e4cP7mgxyqxfvx95Q9vdCD1aQB/jQD64mt3ihd2+St3vRD7yt7y/9
rl1/Lv7M15/LfOUjxzKeSsgjuZ8K8jYv9lNFrvFiPyGy14t+qkE/T/rTreTZ
Puj9DvJxL/R7Jzndi/q9izzFC/98Tk5kfuxT9vfifP9rshk/Mu9+o58v/fR3
5Ggf7HOcHOVDvJ0g/88LvT6lnyf+Pkue5cX70D/I/X2oL3+RB/rQr7ZbFtmP
1NtLNct8cjnZ78X7r676c9G7a8htXujz9eQGL/rRG8lnvciH3uREL/rxW5dF
1if+iyd39Rph8xQMJJd40T8MIW/xQr+HkvcU4H7Dl0XsJfd7iLyD6xut1yvr
SyR35/qSyDFexNcT5PVenBdOJI/x4vxjMrmZ9vs3uZ8X8foC2Ywf6Q9mkd1e
9Idp5AtenNe9Qh5G/y4if+fF+fYScrIX50fL9Hqkv1tJHuWFPuTo6yX+3iL3
8SI/Lfr7ondO5Q8v+jkPuT3zvYic5kV++MlTCqBfAXJ0AepHNbmbF/1bHTne
Cz3eTE4qgL/eI/egvz4gL6F9m/R6JN53k3MKUI+/IGcVIH++JOcVwB4HyMO9
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
6NlT5Fbq1TPkRCf66ynkIO07jdzM/HhR20v61Ze1vWV++w/Z7E/kvH+Bfr70
Z4vJsYyH17U9Jb6Xqec5oZ/Zan0O5HOOtrfY7y1lbwfqqYU8hvXMSe7jhH55
9P6knhSRzfoj/WYpucEO/akgD3PgPClITuV6Qjo+RI/fUfdzoH5vJYccsM8O
fT+xz06yGe+SL7vIaQ7Up89VPDgQX//Vn4u/msl5rA+HVLzb0W98S57Cev+9
Xr/U45+0PSR+Tur1y3z0K3kW693vOh5lXviT3OjA73+iVkf8I/nXnjzFjv73
MnKzHfp4Bfm8HfW7Gzlgx7x2LTmKet9jdcSfMu/fRI5h/btldcRekj9x5CY7
/B9PNuNF4nEQOY72HkJuseP8fijZa8e8NFzvT853RpLj7ei/RpN7OfB7orHk
LMZbEjnE5yWTW+3IxxRyBp83iZxuR7/7HHm9HfubTjbjQeaVmeSzdsyvc/Tn
Ys95ev2irwu1faQ+ZpDn25FPmdr+Er/LyWY+it6vUvtn/VpLHmxHvKwj2+04
D7aS99ih1y7yETvO9wq0vUXfipV/7egf/MoerIcBst+OfKgmm/Ev9b2OnGfH
/LRZx5/Ya5v2l8TfB2QzP+X940fkVDvifZdajwP5vkfbT/rtfTp+Jb++Jmfb
sP5vyMl2zMvfav9KfTuu/S/+/omcZIee/aJZ5tdf1f5s6KfOK//Ycd7epuzv
wPueqDXgWAf6ww7kYXbUl8vIfZgfXcgJNsRPtzWR+0u/cS15hh326ElOtcGf
N5FDNtTXPuSBduh/HNlg/MeTm23ofweRs+zQ0yFkU59lHr+P3GhHPzWcvNsG
+44kz2I+jV4Tsb/U27HkMXbMN0l6faKHyeRTrAcp5Bwb4m2Sso8d+vOcsq8d
+TJdPx+/nySn2fF+Z7a+Xu43j3yI91tIbrXhfhnqcxvul6ntI+vLIrdnPK0i
T7FhXs0lF3O/68hmPMl5ipWcbUd+OdX+begnC7T/RR+KyH4b/OEn77Nh/gr8
P/8G1fXUmzodH9JPvKOfL/GyjdzdDr3coexpw/vQnWSzfsh52C6yqcfSn39O
brMhnvdp/0p+N5MzbOjPDpHN/JXzkm/JXhv04nuyqUeSbz+RzfyVfuWk3o/U
hzPkXjbUv9/JZ22Irz+1fyVeL5KP2VDf2ueA02yY36LJ0cynK8hm/Mrv767K
iexf9Ooaclc7zid6kM14k/p0I9nMX+lvbyH3sqPfuTUnYj/R09v15xKPA8mp
jJ/BZDO/pF9JUOuz4Xz3AX0/0YcRiu2oj4/o9Yt/Hs2J2Ef0axw5zwo9n0Bu
tKEePUVOZH49Q85h/E4hH6E9p5HN+iTnDy+SR7H/eJl83oZ+by55sA3nMQv0
/USPF5GDdvx9XX9f9GcZ+RCfv1L5w4bn5+j9y/Pz9P4kPteTzXiUfsNBbrFh
/s4nt2d99JH91NMSfT+xf7mOJ8mPKvJ8G+p3LbmPHf3lJnIS43kLeY8N+rud
bOqznBc3qvsxPz9W62X8fUrezfq1V63fjnl+v96f6M0BHb/4vYCKB9ano+Rp
tNcP5IE29Eut5HTq5ym9X+n3zpI7s579QY5hffxL2d+KfqddLjiZ6+1IDtrQ
/3bKjdxf/Hsl2bAhvq8mm/VS5q3ryOdp31iym/1Dr9yI/aV/60PebkN+35Yb
sYf013fkRvwv+TCIfIrxcA85yo7zn/vIZr2QfuhBstlPyfuAh3Ij9pH6OTo3
Yh/xRyI5i/tLIpv9hewvmZxG/XiabOq5zF+TyGZ8i349Rx7FfJtONuutnO/P
1PYQ/80mxzLe5pG7sv9fSDbjS877MshmPyr2yCSb+YF/P6n9I+8DV5FNPRJ/
52p7SH/yFtmsf6JnVrUeB/oxp7a/1HcPOZ79bhHZjHeZ10vJ0cy/ChU/dpzP
BclNNtTHkN4ffk9HTmf/uFVdb0d9fl/5m/XiQ3IO9eUTfb3Uq8/IiYy/vWSz
X5F+8iuyWV9xfqv8bUP9P6z8bcd5wjFypgP62UJuY3/cqtcv/jyt41Xm59/I
fXhe+Ad5mp3/nk3Zm/5vt5b+YH3oSDbrp8yvl5N7UZ+uXBt5nvzpvjbiP6ln
MWRzHpPzpFiynfF1M3kY+52+5Exef9vaiD3k+gHkrrz+rrUR/8j195DN/Jbr
7ye3cT0PkottuP4hcmeufww5kftNJKfQPklkc74R+ySTd9OeT5MHct6cRE5m
v/gc2dQv8df0tRH/iR7NJG9hfzCb7GY8zCPHMX4WkhtsqCeLyd05v2Rq+0p8
Zqn9ONAfZmt7S7+Qq/zJ8+i3yKkOzKcWcpD54iSb87r8fsdDTnLg32sVKvsz
H0vJCU7Uowp9vfRPVfp6yfeQjh+ptw3kDOrrFnI8+6P3yQHq8YfKfjbMnx+r
9drQz31Gjmb/s5dszldSz/ar9TI+DpLNeiX+Pqz9Kf47qq5nPv+g1muDP1rJ
7W3oB0+p+LXh9wtnyU1W2PcPFR9W6Ndf5EYr9O4fb4JnWTFPdyT7rbBXJ/J2
C/qDLmS3FedpV5PTrJivrnszsj7R957kzsynXmSzvsv++5C7WrH/OHIe4zGe
nG1FfRqk7m9FfA0h92I/MpQcY8X7guF6vVIvR5LbLJjXHiEbVvRnY8kt3M9j
+vmynwnkUVbsJ4XcYEU/k6rXI/3yFPW5BXo+TdnXgn7pRfIp+udlcoYFvzeY
q/cj9X+BWo8F88MivR+JzyXkKVb0e8vI8y3Qo5X6+/j3ueRUK87/3iQPZv+/
npxpRX7ayee5Pje52IL+y0deb8G8tkHtz4J+uIycbMHvmSrJAQvsV0POskKf
6tX6rTgP2UyeYUH/9h45yYp6/gG5mf79iLyF8bpbsQX5uod8xIJ6tE/vX/Sz
Wd9f4u8bFZ8W9FPfkodZkE/f6/2LPX4id7dCT06SE5kfZ8iHLKgH58g5VvSb
f6r9WtH/XyS3WuCvf+SBB1pxHtk+L+J/eR/TMS/yffzeltxkwfuVTuQMK+pN
Z7KZDyJ3XcjRVom3k13J8VbRn6uv1s+X511DnmXB867Li/g//Cfz+ryIP8N6
U9yT3JnnJzeQz1olflpvIkdh/1f1Ju+jvvUhm/kRTt+n+5HzGA9xav2Y5739
9eeiZ/HKHlZ5n9QyIC9if9H3QZrD7+cG3k029UTyaYhav1X6qYX3ks1+LPw+
0jlUr1fm0fvJZr2VeviAWj/6yw6GXp+c94zU/pTz3FHkVvhj9iN6f2H/rxuj
7R22T92jZHNeC/c7zYnkRMwPF8ap73M+H0825205n5lATuB53BNkU99FD55S
/rIhf54m78Z6dz2j7y/xM4mcjXn2qikqPpEPg6eSi60yzzw1jdxmxe8hp+v7
iT7MIHfH+4GtMzWHzwOOzCKvZ/2ZQzbnOal3c8mp6AcemUc2+1V5v/iKvl+4
XV+9UK2H/eKrZLP/kvOoxSp/7PL++NRrer+Sn5kqXhzY71Jykh39ZZbKDxve
164gZ6I/sWer+ON5+GqyOV+Fw+VQjooXu8R/21oVLw749y0VXw7o2dtq/06J
x+csar/4vcZSm4pPvk9zkA/x9zUulZ9OzDf5il0SH5d6lb3xfvDWQrIfv+8Z
U6z0wi395IslKl/wfnW1X63XLfW8olzZF7+v3RVQeuSBXlSSQ/kyf11RrfyP
f68xoJYc60X/XKc+9yKfNqn85b+3e4c8Hf+esupd8sgiqVefb1X+K0a/8h55
3QbM9zvU+kugH43kFP7/GXYqLsPvDZrI/QPy/bxPyNs24vcBu5V9qvD8z8g/
VuP5e8gjamX9V/6XfDCE8+gvyY/i/7847ityZYOR9uuwRZc2K714x/g/nV2A
6A==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Thickness[Tiny], "LineColor" -> RGBColor[
           Rational[2, 3], 0, 
           Rational[2, 3]], 
         AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]=350\[SmallCircle]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], 
                   AbsoluteThickness[1]], {
                   LineBox[{{0, 10}, {20, 10}}]}}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], 
                   AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                ImageSize -> {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                Automatic, 
                BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
             RowSpacings -> 2, ColumnSpacings -> 1, RowAlignments -> Baseline,
              ColumnAlignments -> Left], 
            Function[BoxForm`e$, 
             TableForm[
             BoxForm`e$, TableAlignments -> Left, TableSpacing -> {2, 1}]]], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 10, 
          GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", 
                   FractionBox["1", "120"], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                 RowBox[{"\"LineColor\"", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4444444444444444, 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7798256007165112`*^9, 3.779825993661395*^9, 3.7798269314187384`*^9, 
   3.7798272496312633`*^9, 3.779897308763754*^9, {3.779897537613308*^9, 
   3.7798975464021926`*^9}, {3.779897685756901*^9, 3.779897721336857*^9}, 
   3.7798977767636414`*^9, 3.779898129966219*^9, 3.779898665174924*^9, 
   3.779898697939248*^9, 3.779898901084491*^9, 3.7799006547483664`*^9},
 CellLabel->
  "Out[405]=",ExpressionUUID->"50991c20-b86d-466f-bafe-2b36ff1c2750"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7734884246159205`*^9, 
  3.773488424666767*^9}},ExpressionUUID->"3314c936-1e4a-4944-b6fd-\
e333a43f001c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7734884266148825`*^9, 
  3.773488426644765*^9}},ExpressionUUID->"cd5b48af-8ebd-4a2e-aa85-\
4294167865d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "aa0", ",", "aa10", ",", "aa20", ",", "aa30", ",", "aa40", ",", "aa50", 
    ",", "aa60", ",", "aa70", ",", "aa80", ",", "aa90", ",", "aa100", ",", 
    "aa110", ",", "aa120", ",", "aa130", ",", "aa140", ",", "aa150", ",", 
    "aa160", ",", "aa230", ",", "aa240", ",", "aa250", ",", "aa260", ",", 
    "aa270", ",", "aa280", ",", "aa290", ",", "aa300", ",", "aa310", ",", 
    "aa320", ",", "aa330", ",", "aa340", ",", "aa350", ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<\>\""}], " ", ",", "  ", "\n", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", 
     FractionBox["1", "GoldenRatio"]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Wavelength [nm]\>\"", ",", "\"\<Counts\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ")"}]}]}], " ", 
   "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.7725317500583897`*^9, 3.7725318020715666`*^9}, {
   3.7725353697608805`*^9, 3.7725353999635997`*^9}, {3.772535437182254*^9, 
   3.772535446774491*^9}, {3.7725355022110653`*^9, 3.772535553073042*^9}, {
   3.7731600070694237`*^9, 3.7731600089258347`*^9}, {3.7731739025429573`*^9, 
   3.773173927318405*^9}, {3.7731741634303074`*^9, 3.7731742311346984`*^9}, {
   3.7731743788611927`*^9, 3.7731743800016713`*^9}, {3.7731744498897934`*^9, 
   3.7731744576018496`*^9}, 3.7731747959031963`*^9, {3.7731748600499716`*^9, 
   3.7731749572855296`*^9}, {3.7731754487862835`*^9, 3.773175451929048*^9}, {
   3.7731754973942213`*^9, 3.7731755217491837`*^9}, {3.7731756484408283`*^9, 
   3.773175669164671*^9}, {3.773175781799011*^9, 3.7731757821781673`*^9}, {
   3.773177366045673*^9, 3.77317742455324*^9}, {3.7731774902912855`*^9, 
   3.773177507609291*^9}, {3.7731775714450483`*^9, 3.773177573143033*^9}, {
   3.7731781179985933`*^9, 3.7731781266841636`*^9}, {3.7731782471641345`*^9, 
   3.7731782757388124`*^9}, {3.773178329035985*^9, 3.7731783296784124`*^9}, {
   3.773178413491233*^9, 3.773178589262235*^9}, {3.7731786453743553`*^9, 
   3.7731786678544025`*^9}, {3.7731787163393507`*^9, 
   3.7731787357180395`*^9}, {3.7731788584282885`*^9, 3.7731788822682114`*^9}, 
   3.7731802702809267`*^9, {3.773180306523427*^9, 3.7731803340681033`*^9}, {
   3.7732182490744915`*^9, 3.773218255465763*^9}, {3.7798256404397116`*^9, 
   3.7798256792360954`*^9}, {3.779825712922947*^9, 3.7798257936529837`*^9}, {
   3.7798258763908467`*^9, 3.779825899194689*^9}, {3.7798259502680283`*^9, 
   3.779825969937758*^9}, {3.7798262903578386`*^9, 3.779826373151332*^9}, {
   3.779826427098235*^9, 3.7798264774863863`*^9}, {3.779826536129553*^9, 
   3.7798265886798496`*^9}, {3.7798893931089*^9, 3.7798893942971597`*^9}, {
   3.7798894828501854`*^9, 3.779889512273631*^9}, {3.779889619289482*^9, 
   3.7798896200661087`*^9}, 3.7798969519414062`*^9, {3.7798970575391273`*^9, 
   3.779897057923304*^9}, {3.7798971448830795`*^9, 3.779897187122836*^9}, {
   3.779897398647661*^9, 3.779897399051319*^9}, {3.7798974403666162`*^9, 
   3.7798974700273438`*^9}, {3.779897586733921*^9, 3.7798976542488647`*^9}, {
   3.779898009026407*^9, 3.779898013536682*^9}, {3.779898043569804*^9, 
   3.779898122196368*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"433ba41c-4083-44d1-9481-c3f20f41d8f6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 
            Rational[1, 3]], 
          AbsoluteThickness[1]], 
         LineBox[{{339.87942857142855`, 6500.}, {340.137, 6455.}, {
          340.3568780487805, 6500.}}], 
         LineBox[CompressedData["
1:eJxFnHucVeP+xzsJSSdJkoShZGQkVCckq6Q61UkYhPJLRpKQQkmSGt10Q9rX
2bP3npnazXXPtakTkmSoGJ0kiaKQJCEJ0W/t5/N+ZvlnXu/XXnut5/lePt/v
91k7F41+/LYHGzdq1Ojckxs1Sv0N3nzkgRlDn3Iapf7LWu28k5acOPYOOFzr
nHfl5x1P+T+4/2rniRuafZI3Fm6z2nFpwg0T4Z21zqiv6y/+7Fn4vVrnj+nj
1j75IjxotfNq2yZ3tlgM19c633W6qmmxH86pdWatez92cxxeUeucf0/W9buL
4NJap+aXv7ZNqYZ31zrNG18+p82b8Pm1zvLQhrRkHTyu1rmx+31r/r0Vvpb7
fQZP535fwzNqnWELfY+1+hFOrNL6jsE/r9L6Gj8t/nCV9nv60w3PN/s9G65b
5aTM0+xC+KdVsl86fOEqZ+jolsOvvRqeuMr59s+VP229Hm6xSv64GXZWOfGb
3RUPhQ/UONfvvmWhbzi8scY51zXvFaPhKTXO0fQRi9c/As+rcf73H/eBT8Ed
Vjnu3V/+YTocrHFS2581F+6+ynF382rbV+A7apyXxrsrDMF9Vjnut6fdWADv
rnH6pwxaCj9W43T47Pfp42rhtTVOv9QN3oLvXeVclFrAJnhvjdM3ZdCP4Var
nAtf/P7W2i/gv2rkz/3wUzWy/0/wQzVOyrwT/oSvrHHcq5s3Pnmy+Ika5/nU
hlrAxdVOtJ0b4G3hdjXOW657ay6CB1c7X05tXTrgcvjkGicVbp92g+urtb/e
cHa19jcA7lPtJDYO/te8W2F/tfPe02/ktrsXzqlWfGXB91YrHh6DH652Hm/l
RtxkOLNa/nsBblHtHHHD97v58K5qZ/i1VXVPL4UXVTsp9zWJwNuqHDebX3ht
BVxaJXuXw6urlT9r4MerlN8b4JtYzxb4siqt5xO4qMr517w+o77eAztVTti9
3cQD8Lgq2ecXOFQl+/xl91OlfD51ivhEpfKlJZxdpfhuB99V5TyXCogOUxrW
e4m7vZuu8K7fstn9rwf8jyrHtXb7exx4f6Xz6Qe/3b7333D/Ssf99kvjb4ef
r3RS4fX7CHh6pfJjDNyv0kmFY/MJ8IuVsu8z8MeVTip8L5hl11vpXFGR8+OK
BXCTSu1nGXxKpeIvF76oUvm1Et5Z4bRMObgC/rPCOe7KxX/WwrFKJ9+Vm0/e
gdMrncXrf00f8SG8pVL+2QF3rVT8fgW/UuFsch//y/dwVqX08Vf4kUrpz9/w
2dij6TMN1z+TCuhW8MYK5fd58LoK+fcSuEOl9KsLXFThXJpyUE/43QonFW6x
PnBNhfO3G+6dBsOzK5Q/mfAZ2PM++JsKJ4UVD8GRCufwCjfgnoCPVEhfpsIr
KhTv2XD7CieVTm8shA9VyB8+eHWFk7m3ILQhCt9VofpQCHercFLu3lgJZ1ZI
T16HfyuXPzfC4yukb/XwnArl26fwynIn4t5u8F54Tbni+yD8NfFwFN5Tru+f
gBtX6PunTWW/fL8VvKNcz28Pl/H9S+C/y7X+K+EtrL8nvL1c++8LX1Ch+jMY
vqJc9rsD7lPu+N3wWXcfvLxc9h8Lzy1Xfj8BzyiX/56FR5Y7KbmsyoY/LHc+
dsPjqkXwX0nVKx+8Kan4icFfJKUvhfAPSSflzrQq+JGkEwy4/70O/5hU/L4L
b0g6b7vptbge/ikpPdgJv5l0Drrp/+Je+Muk6tEPcE3Sca355dSj8INJ5d8J
OJiUHp32rHh+UvnbCl6RdA5Ncw3UHj4vqfy/BD5e5qTanVuuhNsm8Rc8IOm8
68pvn75wRZnsPRjeUeZck/rvDnhimfTrPrhvmew1Fj5WJv17Am6XVL/3LHx1
UnqRDZ+cVD1YCA9Nqn774E7sNwrvLNN+C+GtZeqXKuGTkuQXfFrSScnb2o1w
xzLFR7233w9d+S/4FL6vTPV5Lzy6VP496H3f/D1q91uqfu8EvL1M9bjptIb7
m3rTCh5e6qTahw/Og5sllQ+XwNmliucu8NQy9Sc94UbEYx+4R5n6y8Fw5zLF
U6b3vNvc8Pt+JHxdqerBQ3CXMidl3voJ8Pslioep8LYSZ2DKoLPgXqWqZwvh
jthnGTysRH+jcFWJ/LnSu79r3Ss/r4AjpdQveE2J9PYdeGaJk0qXyz+EHytx
jrnuCu2A9xSr3nwF9y2RP76HLyhR/ByBp5c4KXPc+jfculTPO/U58RKedybc
sUT1qR28vET9VEd4DPu7Am7D/nrAP5dITx24U6nq+7/hSInseTs8pNRJtS8v
jXiuYX+pcPntQe95Q1IbehzOKJF+T3muwb6pcOo+E+5covr5kscmXl6DNxer
P4vA/UvUT6+Ae5con8rhaDH9IdysRPPBBvhwsZMaF1/YAs8sVj5sh6/G/nvg
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
o/zsAO8P6fc5l8LjI9KrDHhYWPHYFa4L6zytO7wjrN/HXDunwZ7m897wcT7v
C2eGVY8GwMP5fDDsxrv5fBg8Iyz9yLT74/t3w0v4/kg4zOej7f74fAzsxrdZ
3yN2vyF9/jhcG9LnT8L1Odr/FNjJkX2e8+xt7PcCfDgs+86Gl2L/+fCCHPVX
iz17Gv+9av0fkn/91v9h+T8Mbw7pfDkGDwkpfgrs98Oa1wvhbSHFX6ndT1j1
qtKzp9GrVfC6kOJ7LZzIUfyvg7uGpHfv2PgLq599z9onrHnlA3huWOebW+GW
YenpJ178mXn+M89+pl/eA6eFNZ/vg3uFpQ/fwf1C0vMf4GRQ8+DP8NqQ9Oco
PDasfutPu5+w9OuEjbeQ+oWT5rKekPSv6dwG+2s+hN34NPX5TLg4pH7v7LkN
/jf9VTu4SVj6fAHsxp+p/x3g4SH1t5fCzcM678qY22BvE69dYVdPTDx1h3eF
FC/XwpnEQ2+4W0j9bF+4fUjnHQPgJSH5czB8JKR5fZi3XuOvTHu/sJM6vmt9
N5wIqd8YCfcMSe9Hw8NCer87Zm6D/c15zDi4aVj2fhzODqkfneTt18xfU+CD
Yc5Hvev1+2D7eVD91ovW/uT3fLhRWO9PFsFjsderdr3khw9eS/yHYTdfTHxH
vXgw/W8BPCqk+XMl7OaDic9S2K1Hxh4VcEZY8VfjfW76nf/CVWHF15v2eSG9
X9hg4yes+Kmz14ekh1vgHSHt9yO4V0j73Q67+m3q2U7YzWfNi3B6WPPbXi8f
jP/3W/+E9PuSg97+zd+f4OMhzau/wq4emP7udziNfPnb85+ZVxrPE+9B30+F
1wa1n9PhKdTXlnDbkPSr9bwGe5p4Phd2673p98+HXf038+HF8DD80wl288f0
353t9WGdz14Ju/Fn8vsau56Qzvd6wlnU215wOvbv433f9Ns3wwPpVwbBI0LS
w6Gwq38mnm6HN4SkZ3fBLdGre+FwSP31KLguJPtmwfvIj4fhY0H1q4/CbnyY
+W2i9zxz3v+0fV5Y/dmz8FLi4Xl4Hfo6y7u/0c+5nr9MPi+w6wnKfi/Dramn
r8FNQ6pnQWsv9CsCJ0OqJ3nWXkH1myvgsSHpTxHsxrM5T0ra/bKeKjgNPV4N
u/po6vfrnn+Mfdbb+MI+G2E3nk2+bIIXBFWfPrTPDyq+/gfPCMpfO+BM6sMu
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
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Medium], "LineColor" -> RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]], 
         LineBox[{{350.79871641791044`, 6500.}, {350.942, 6484.}, {
          351.07533333333333`, 6500.}}], 
         LineBox[CompressedData["
1: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
/QmR693oD8uV/d2YX3eRv/VADz8gH3EjPveSz7hRvw+QL7rFVkNufzhEjvWg
H/2UnEJ7Hydfc8PeX+r1yec/p7U95P7Pksvd0I967Q+p9w3kS27Ut1+1f2S+
/E6e7oZeXSN38qDfukGO8kBfbloBbu/B/NhkRcQfMr6jyQ1unL+2JJ90wx9t
yF+7oe8dVkTWL9fTiWzki1xPF3JzD/rfHisi/pb1OIa8xw379CG7aJ/+ZMP/
Mr8fIz/rQb0eRD6RAz15St9P+mu4Wo8b+jVas6xvY8kJHmG2N+ueI7em3kwk
n3djvplMnkx9e5Hsd6O/eZm8yI38SdHrl3qUSl5Pf75JzndjPlqo7yfnz6Xk
Yjf0Yzn5gBvzwCryITfWm0ku5HqzyEa+y359CznWDX2xkpfR3y5yhhv9gZcc
Rb3eRq5zYz4qIie7oXdBspGfcp4NK3u5oec7yaluxOducgrzZY9en9SL/eRm
bsxLB8md3HjeUEvOpP3r9PXlfr4gL+V+TpHnudl/kuPdOJ/5ntzVjf7qZ/Lz
btTX/2p/zDEPhC6Rp7mR/1fJtTnwz186PmX/0GgluEUO6uUt5Os5iP/byCVu
1LfbyQdyoFet1e+53/bkETnQz7vJo3PQj927MrIfed7QXV9P6nlPchLzuTc5
Kwf9/cPkqBz4N47cmfo7kNwvB/k+mNyB9hhG7ulGfo0kW1wi3jzQekbt3wU9
GEeekYPnHYnkHoznJPKVHOjXVHLAhXnlJb1/aa+Z5EoX4n0W2e2CnswhN8mB
/s8np+eg3i7R9pB6nKbWk4P6sILc2gV7riZPyUF/tp58xoV82aRZ9iPZ+vdy
3reTk3OgV25yogv29pNrnIi/AmU/J/4Wk+ucyLcSFR8uPK+sIMfmoD98jxzj
wvlAtVpPDubTGnKtE/H7sbaX9NdhZR8n5uFj5Con4vu4up8L+fyVihcX/Hma
PNCJfuQcOcGFfK8nCyfm41/U/V04v/hV+dsFPb6s9y/722vkJS7Eww1tf9nv
3LQqYj8z/B9vQl7gQn5Fk+udOP9tSW6cg/dH2qyK7E/GUwfyCSfml05kixP5
2YXc3oX3c+4nT3FBr2LIKU7EYyw52YXztP56ffL9mEfJQ534fJBanxOfDyGn
OVGPhpMDDnw+ihzDz+PJRr5I/UggNzjw+QTyJf5+kvo+P5+m1y8/n07uzPW/
Sq7m+meT/Q58Ppc80IX9LyBnOmGft8gZTtjvHfI52nclOZX2X6PtL/urDco/
DvjvXe1/6V+L+r0D/neQ+zlxvuzRn8v4ySU7nJjXC5U9GH/Fav9O1KtSzVKv
KshNGN9V5CwH4r+abMSz1LuPtH9lP/uxWp8L88oR8ggnzjePkWsc0NPP9f3l
PP+Vjg/ZL59R93diPj9HdjugDz+S45zQ81/U9Z2YBy+qfHBAfy5r/8p+60/y
XOrXDeUfB/qFmzLAyQ7oX5OMiP8xH5LjHajPLTMi/pD9XhvyEgf6qw7kQ07o
cyfyAQfqfxdyCxf62/v15/K8K4Ycw3iPJUcznvqTpzgRL4+SrzMeBunvy352
CLm1E+cdw8nVDvhzFNntxLwerz+X/kogG/lmHt+1nkBOdKDfmESe4YTeT9Pf
l893p2v7yvOYmeQg7T1b30/2o3PI9XbMXwvIFxw8HyWPdvL9YLV/O/qtFdpf
Mr/XkFNceH6yXttX2utdsnAgP7L1/WT8O8hzGd9ucpUD/W+uZjl/FpANvZLx
WUyuoz1KtL9l/JWTjfiW/c57+vsyvj5Q9rLj+UKNso8D8XNAr1fq4WGykW9y
v5/q/cn9HicnOFDPviQbeo55kZzuwPx2Vsez9H89ub0D75c06PvJv7+Suzox
r/6uWfZ3V/V+Zb78reLJiXml0Wpwa9aHW8mb7djPbWQj32V9bUH2U79akx2M
5zvJ1x3o9+9eHdmfnA/vIxv6I/3TnZzpQP/dkxzvxPlsb/IVB/L7YXKtA+d7
ceQ4B+rFQHIS7T+Y3MOBfvtp8hQH+pWR5EMO6OEY/XsZT+P0/aSejdf7l3r1
gvrcjv56CvmkA/ZN1veT+fEKOdmOfvU1stEfyfntDXJnB87755FHO9CfLVb2
sCMe3iYb/YiM7+WKqZ8ZZKO+yXzOVOt3wn4byZV21NMtZENvZD2zkefaoV8u
cr4D9cSn9uNAv7mNPNQO/SnS15PnSUHyJepLWK3XDj3eSa6zo36/TzbyT9pn
D/mcHfbZR061I18OqvuzPh0lp9gRX/8hx9BfJ1S8Mb9Pko18lf3GN2Sjfsl6
/x25yo56/BN5BuPnvPK3HfPRb+SgDfr7h/KvHfPCn8q/drz/E7UGfNKG/GtM
NuJR9r9NyYaeS338JzmW9bsV+ZAd81pb8hTqfYc1EX/Ief8e/X1Z/7qQo5g/
PdZE9i/9H7Mmsn4Zj33IRvxIe/cnD7Tj/P5RsqG/cl4aRK6x43xniGbZfw1X
+7XjfaJR5Dg74i2eXMf7JZAdduRjItnQP3m/SXq/st+dqtcv9zdd71/OKzPJ
0Q7Mr7PJVTbYcw45zQ59na/sa0d9XKL9IfMpTa3HhvhdQQ5Q71eTR9ihN+vJ
C1ivN5ET7DgP3qr2a4Ne28lGfsrzvRz1ezv0zU826rvsH/LVelgPA+TNzIeQ
ii/W9zL9fTk/7dLxJO21W19fxt9ecrwNzx/3k2sZ7wfJHZnvtTreZb9dp+LJ
hvz6gtzA9Z8iZ9gxL3+j4tWO+va9Wq8d/v6JvMQOPfuvjhc5v/6m40H2U1fI
Tew4b79OrrbheU/UWrDbhv7wZnKiDfWlKTnBhvxoTu7nQPy0IkfZ0G+0XRu5
v7THXeQkG/x5D9liQ33tujayPqn/PcgdbYj/mLWR/cv+t8/aiD+lnvbX65fz
+GNqPXb0U4PIRrxL+w4hL7Ahn4br/cl6O4pca8N8E08+YIMeJpBrbKgHiXo/
Mt4mkWNt0J+p6vdW5Mt0ZQ8735/U15fPd2aR0xm/c8jxvN58bR95vSV6vfJ6
aeRUri+dfMWGeFpN3mzFvLqOfJ373UQ29E+ep2zVv5f5ZSOn2dBP5pD9NuiD
T9tX+iNf+cuG+StAvkD/BsknrNCbMnKY/cROcj7jZTe5sQ16uYd8xornofu0
f+R52EF9P9mfHyXPZTzXqf1ZkN8nVDxZ0Z+dJM+w4bzkG/JA6ut3+noy337S
9pf9ynm9PlkfLqp4tKL+/aHvJ+PrT3Id4/UGOcaG+tY4k/e3YX5rQt5M+/yT
bPQD8v27luQRNuhVG3J7G84nOpDDNtSnTvr7sr/tQjbqgex37icn26CnD5KT
GI+x5HQb4qdfZmQ/sl+JIxvxJM93n9DXk/owWLOsj8PIS6i/I8mx1K8x2h5S
z8eRDT2Q9Wi8to/MrxfI56yI3ynkaNozmeyw4vzhFfIFK/TuNXU9K/q918lG
vMnzmHlkQ++lHi9S17Ph79vkudSf5eQ43n+VXr+8fya5H+t1FlnYEJ+btT9l
v2HV+5Xzt1NfX+avh1xvhZ7mkatp/0LyCebHDnIm+71SvT/ZX1aQR9sQz1Xa
HlJ/q1U82nBeXKP8aUV+fqz3J+PvsPaHzKdj5IAN8/xx7T+pN1+SExj/p3V8
SHud1f6U9vpBr1f2Sw36flI/L6j1W9HvXVLxZUU9u0qOYn38i2zon+x3Gq0D
p3G9t5Az2P82I3dkfN1ONuJJxvcd6yLXl/NWO3Ii7duRbMS77B86r4vsV/Zv
XcmpzO8H9Oeyv36InM986EO2MB4GkI36Lc9/HlsXsbfsh54kG/OQfB7wlLqe
FfVzODmL/hhNrqW+xpP9VuwvQTH1Y8K6iP3l/DWJPJf6NZVs6KnMt+nkgBXn
+zOVPW3w3yy9Pxlvc8hGPsv+fz7ZiH953reEXEV7pJGNfMS/nyRfsuJ54Grl
T/p7HTnFiv5kI1np2VayUe9lP2ZT9rKivrvIRr7Kften1yPn9W3kJcy/IrKh
9/J8Lqi+z/oYJjuoF5V6vbJ/fF/7W9bnD8n1tPdH+vpSXz7R9pL16gj5OuPv
GDnejn7yc7JRP3B+q+Kb5w2nyUZ/IM8TzpFbsJ+tJ6ezP27Qn0t//kpuz/n5
d3Jr9j9X9frx79mUPTj/N1of2b/Mh1vIJ62YX28jz6U+3U7eTD1vTTbmOVnP
2pONfJXnSR3JMxhf95LPsN/pRhZ2fP8BcrId3+9FHsp5rO/6yP7l9weQjfiR
3398fcT+cj1PklO5nqfI7bn+EWo/nNdHr4/4U9onntyP9kkgH6I9J5Az2Q9N
Ihv9raw3U8knmH/TyRY79GgmuSP7g1lkY/6S8TCHXMt6Np88kPVkMbmG80sa
OcD4TFf2tKE/zCCncf5bR87nPLZRx4OcT7eQqzlv2chGfyzf33Hp38t/r+Ul
H3AgH7ep/fH8okjZg/PoDr1+me9hcood9bZS+1/qa5X2h9STD9X9bdDjj5S9
rJg/PybXWdHPHdH+kP3PMbKqZ8f/Jz6+Ivewwt+nyQus8N9ZdX8r8vkHlQ9W
+KOBfMmCfvACOdqK9xcuqfywwL5XVfxaoF9/kY1+QerdPzaAwxbM07eQ462w
VzNya/YHzcmdLThPu2NDZD9yvmpHNuqT1Pe7yKOZT503RO4v999VfW7B/nuQ
W1gRjzHkfAvqUx9yugXx1Z98PRt6/Cj5SjaeFwwiV2ajXg4hV1swrw3T95f9
2ShylgX7eYacZsV+xunry/0kklMt6GeS9PpkvzyFnJANPU8mZ1rQL72i7Sn9
8xq5owXvG7xOPpON+j9P2SMb88Mi8oJsxOdSclcL+r3l5EPZ0KNV/2Pvtfpz
ef63gRxtQT5v1uuT+Wkhu7k+BznWgv7LQw5mY17L1deX/XABOcaC95mKyQ7a
r4R8zgJ9Ktf2lechu1R8ZaN/+0DbR9bzvcr+2fDvfrJgvB4iZ1iQr7XKvxbU
ozoVnxbo5wlycjbi7xS5Khv91DfkJAvy6TsVH1thj5/IjS3Qk/Nq/9mIp4t6
f7IeXNb+kf3mn+T6bPT/N8iJFvjrH1ngS9k4j2xMnpKN5zG3kPtZ+L4tuS4b
z1eakbtmo95Ek1OzZb34uDk5aJHxdr6F+j305447siLrlfdrkxVZn7xfO3KK
Rf5Nu5NcBb3x30U+yXy8m2zku2nehnv09cz9t7yPfI761pV8IFvWiwndlT0s
iIceZCPe5P8upSf5hAV6FqPvbz5Pqu9FHmqBvvchj7DI53OxD5Pd7Gf6k418
Nvup+Y+QjfnDfB5pe5Rs5I+cRx8nX7eiHj5BzrDK/L9ZKP9Zcd4zhDzDivPc
oeRYK/J/mGbT/5tGkNtbpX3KRpLj0R+dGE1ujfn/2hgVH5yfxpIbrDifGafv
L/XwOeVvK/RgvGaZPxPUfnH+fPAF5W+s9/wk8hUr/DmFnIx5oN80/Xtznhmf
rK5vw/uQ03X8SX2Yoa9n9tPvz9TrMc8DzqRof0i9nk1ewvPj11X847xy2Bz1
fRueL75JrsY8umY+OY7930JyYxvOoxYr+9vk8+MLb6nP7cjPNPIh7neZ3q/s
L9NVfNvwvHalXo/850IZyp92/nsjFU84zzqZSTbmdzP+r68nJ/H9j43kNDv0
7F21XoeMx6lblP3wvsaybOU/zgNWlY98v8ZObuHEfONU33fI+LjVrfIf76vc
7yVH4/2eEX4V/y7ZT76Sp/LLBXvnk8/gfb+iQpVveL/2YIC8D+9rNhSr+Mb7
vP8Mkd/AvxfoVar260X/XEZu7kM+Vaj44L+320n+2yfPc3e8R16ZK+vV0ffJ
bbehX/lAXT8f8/0e9ft86EcN2VKEerePvCeA9w0OkL8slr/P+oTcO4T3Aw6R
3y7B/Y+Qj5bi/rVKP8vk+m//D/m9ClH0VfLiw3Uq33aK/wfWr8rC
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Medium], "LineColor" -> RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Medium], "LineColor" -> RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Medium], "LineColor" -> RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]], 
         LineBox[{{349.1133703703703, 6500.}, {349.143, 6492.}, {
          349.46246666666667`, 6500.}}], 
         LineBox[CompressedData["
1:eJxdnHucleP6/+ebkCSVU9JOKGYzEsoOySOpdrWTXUg7fZMkSaJUkqRzmRKq
WedZh5lpzrPmPLVDkmRXjLQTassuW0g7jITwe9b9ed/reX1//pnX+7XW8zz3
fR0+13Xdz8ol4x7/60PNMjIyzjg1IyP19/gnBWtW7XvKyUj9N369U/f9r7tn
fQ63XO8MW5Ezpd1/4eIG58vLr21RegK+fL2zYNM/Ync0myFutd4Z+3njpZ+c
CV+93vl57qSN08+DRzc4Hyam3tLyYrikwXnilpYfJjLhpxucoePajLzxOvhw
g/PFL0Xf7roZ7tjgvNU5+eTEO+BXGpz4He6Kh8LP1Ds3f3rnipyR8J8bnAub
39P66nHe849njn5x86Nweb3zwV/cBz4FL25w3Lu/9M1cOKvBSW1/wVL4jnrH
3c0r7V+GQw3OC5PdFQbhCxsc9+o5t+bDYxqc/imDlsN59c5ln/w0d1ID3LLB
6Ze6wRvwp/XOJakFbIej9U7flEH/Ce+sdy5e9PVdDf+Cz6h3bu05ZsOfD8Nn
18v+38LX1zsp8079xe6/3nG/3arZqTPFW+uc51Ibag23qXeiHa7Z36U9/HGd
84br3rpL4EX1zmezzy0fcBX8UZ3T7Kol53/UAx5ep/31ga+r0/4GePcr3Dr4
T8vuglvUO+/MeC23w9/gp+oUX+PhD+oUD1Pg8jrn8XZuxM2EO9fJf8/DRXVO
kxu+Xy6HZ9c5I2+s2TZjNXxrnZNyX/MIvKDW2d/ltOfXrIMba2XvSrh1nVMQ
3NI5uQH+vtZJmfOWLXBlrdazE36/Vuv5EH6l1vnTstvGfn4Ajtc6Ifd2T34F
n4J9vofvqpV9foWfr3VapQx8+izxubXKlzbwBbWK7w7w6bXOs6mAuAwuq3W6
utu7/Wr44lpn5w73vxvgPTWOa+2Ooxz46lrno3d/HH7wz/ArNY579QuTh8PL
apxUeP00Gq6uUX5MgIfWOKlwbDUV/t8a2fdp+NEaJxW+nRbAG2qcq6vC/12X
DV9Vo/2shc+qUfzlws1qlF9FcM8ap03KwVXwmBrnpCsXf9kI/1Lt5Lly8+Fb
8NIa58XNP2SOfg/uUSP/7IXfrFb8/hv+tdrZ7j7++6/hLjXSxx/gV6ulP7/B
g7BHi6fF+6udp1MB3Q6urFZ+XwQ/XS3/doUXV0u/usG51c4VKQf1gtdXO6lw
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
d1v/r3f+H7+V2Ic=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
            Rational[1, 3]], 
          AbsoluteThickness[1]], 
         LineBox[{{341.91104651162794`, 6500.}, {341.939, 6494.}, {
          341.9621153846154, 6500.}}], 
         LineBox[{{344.969619047619, 6500.}, {345.542, 6480.}, {
          345.62833093525177`, 6500.}}], 
         LineBox[{{348.2298292682927, 6500.}, {348.543, 6393.}, {
          348.98883333333333`, 6500.}}], 
         LineBox[CompressedData["
1:eJxdnH2cVePax+dJknSSFJ2E6MUcRoqiSJakOtVJjhCnPOkk6YQolSRRMlIZ
VLPfZmbvPTM1b83smdnTjE5IRkJIJ0k4ohAGSRKiZ+379733/fk8/pnP97P3
Xuu+r5ffdV33Wjln4r1/v6NZRkZGq+MzMlJ/X75x+u7S/z7gZaT+m/S8t+7H
33fM+RyONHijl+Xe0+57+OUG76sevVtWHIEHNngLN74Ru7bZLPFVDd6Ez7ed
++FJ8B0N3q/zp26Y2QEe3eC9Xzj9ylZnw30avPuubPV+Yeas9PVGTWw7tv/F
8OUN3pe/lf6w/Qq4pt57tUvi/inXwmvrvfi1/opHwXPqvSs+uW5Z7lj4WL33
5+Y3tblwIjy23jucOe7pTf+Cj2vw/vM3/4YPwO3rPf/qz3w7H76n3kttf2E2
vKDe83fzXMdn4cH13lPT/BWG4TPrPf/X864qhtvWe0NSBq2EH673un74y/yp
DfDb67zBqQu8DF9R752TWsCbcP96b1DKoO/B/1nnnf34N9c3/BduU+9d1fe2
9X/dD59QL/v/AL+6zkuZd/pv8F3rPP/brZsdP1s8YZ33SGpDbeDkOi/a6aKP
u3WEH1vnvey7d9058DXrvE/ntq8cegH8W53X7IInTvugD3xpnfY3EO7M/obC
B+q8ks0jLnvyerhTnff6rBcLOv0D/rFO8TUJ3lineLjH/f7edn7EzYbL6uS/
R+FgnXfID9+vlsDb6ryx/ZNbZq2Ar6jzUu5rng8X1nkfd2vx6Mo1cEad7F0N
f5j0VocbuyTWw98mvZQ5r2x0bNbzFlyd1Hret9dPepc9efWEz/fAj9R5Ef9y
938Nf56UfX6ET8Y+v8O/J73WKQOfMEc8LKl8aQvvTiq+O8Hd67yHUwHRFd6X
9Lr727vmQrgq6b211f/vUnhF0vOt3flWD16T9D54++cb9v4VbpX0/F8/Ne0G
uF3SS4XXL+PgS5LKj8nwB7VeKhxbT4dvTMq+D8KDa71U+J61EK6s9S6syft+
zVL4wVrtZxW8ulbxVwAX1yq/SuEdNV7blINr4NJa76gvF3/bALdMekW+3Lz/
Ktw86T296afMce/Aq2rln11wslbx+xlcVuu96d/+x2/gH2uljz/Bt9VKf/6A
r6iVPVo+iH1rvQdTAd0Onlyr/D4D7l4r/3aHO9RKv3rCn9Z456Uc1A++vdZL
hVvsane9P/xw7zECTtQqf8bAl2HP2+CutV4Ka+6EX6jxDqzxA+4++GCN9GUu
fHOt4n3Rg2l7pdLpxWXwKPyR634/Zm9xuDEK/1yj+lAGr67xUu7eXAsvrJGe
vAA/hT83w9/USN+2wU/WKN8+gP9e4+X7lxuxFz6zRvHdBM+uUTwchs/m98fg
9vz+xLniGfy+3dz07839O8N7+H13uAfrvwhuyfr7wf3Z/yC4oFr1ZwS8vlr2
uxHuUOMF/PDZeJtjY/8pcG218vs++Ptq+e8h+L1qLyWXyUVwYbX3nh8evZfD
f69WvcqFR1UrfmJwp2rpSxl8R7WXcmeXJPxCwgsF/f9egP9IKH5fgxMJ7xU/
vZ7eBlcnpAe74ROrvSY//R/fCx9JqB59C59S7fnW/HTuYTiWUP4dg+ckpEcn
PiR+NaH8bQe3r/a+m+cbqDM8L6H87w6/lPBuneRn2EXwNQn8Ba9PeK/58nv1
oIfS+zP2HgG/lvAuSf13I7woIf26Df40IXtNgVtUS//ug99OeH71uanNQ/DJ
1dKLRW4/ph4sg7tWq37nwn9jv1H4goT2W2bXW6V+qRa+MEF+wZMSXkreNmyG
d1UpPrbB/5vw3vHlv/gDd31Tn/fCPavk3yb4UJX+Hoa3VqnfOwZ3TKget5wn
PlqletMOblblpdqHt8+AV1QpH7rDX1QpnnvCFVXqT/rBRyoVj1fDGVXqL0fA
PSoVT2Pgs6q8v/vh9814uKFK9eBOOKvKS5l323R4TqXiYS68udIbljLoQrhF
lerZMjhSKfusghsr9TcKX1olf5bCwys937oXfVwDn19F/YI/q5TevgpvqfRS
6XLBO3B2pXfEd1d4l91fperNZ/C8tfLHN/DISsXPIWeflDmu/wOev1b3O+Fh
8aC1ut8pcLxS9akTPLVS/VQ3eMJa7e9CuGyt9ncp3KJSeurBy9eqvv8VTq6V
PW+AJ1V6qfblqXHwkkovFS4/3wG/uNYbmdrQvXC3Sun3HLhkrZcKp76PueuZ
+vkUPHmt4mUlfH+l+rN8uGel+uk17nOTT9WwV0l/CPeq1HzQ6L5/UUoA3oLH
VSofdsKH1sr+e+Dz10pvvoKbKmSPH+1+KrzhKcE9Ci+q8NqkBOj4+eKbKrzT
Uw3cyfPT/jD53hGeVSF9OheOVqjfvACeU6H5pw+8scJ7ICVYA+F9FVrfUPhZ
1ne9u7/Rs1vhBRXKt3/Ch8ulv3fDORXK71nwxRWy3wK7vnL1W0/CkXLF07Pw
WRXKzwhcWS79KoaHl8u/VfBn5cxf8P3l0p+X4SEV3uzUDd6EB1RoPtrh9mfq
0cfw6nL1+1/CfcrVPx2AW5VrP7/Cf5RpP8c9gv3KND+1hqeWa945DR5Q7qXa
tbyz4YHl6r8z4dPKpacXw73K5Z8r4H3l0u9r4UHl0sNRcPMy1ceb4Y1l6idu
h3PKlO9T4RVl2v8MeHiZ4u1h+LEy5cNieHqpd3C7b6Ac+LNS1e8g3KJM9TcO
e2XS9wq4sUz5Uwd/VCr/v+jWY/qjLXBFqerBu3C3Mu/uVEHcDSdKpa/74F0l
6oe+tfst8c5I3fBn+GiJ6mPGAvGl3L85/N9S6dOJcNtS2a8NPLyU/gT+ukT9
/+lwm1LVu87waaXKly5wq1LZvzvco1Tz3Pnw5FLtryf8Rqni5RJ3PaO3/eBf
S7y/+O3nTwPgwSXME/BG7DMEbiyV3g6Hs0rVH14H7yxVPo+Bm0oVn2Pt78nH
8XCLcundRHhDhfqdyXDrteqn/mXXS32aDveu1vdnwmuq9f0HYX8+MN+fD0+t
1fcfgx9Kaj1PwBPrtP6l8D11Wn8OvKlO+10JX1In+4TgoXWyTz68KCl7FsI/
18r+JfC+GuVPBfxhjfxVbe9frXlhHXxjQvq+3sYf9fcleGu54qcR/qJM9WUL
PLpU8fYWvLhE+rIdnl6ieX+njZc1iucP4WYl6nf3wIPWqB7ug7PXSO+/grus
Vr/wHbx7tfqpg3BgtfTvZxv/q1WPjsILVksPMh4VN1/tpbZ7z/Hw16s1b7SC
9xervrWBb13tpeRw0qnwhmLpf0d4ebHm387wumLp9znwG8Wa57vDHYvl//Ph
g8Xy50Xw1mLl3yVwpFj+6Qcni6VPV7rvP5QS4KvhOcWq50Pgtqs1r494NG0v
089fBy8olv3GwLuLdT5wi11fkebL8Y4np/6bCA8s1jx2J3x/sfT6X279pt5P
hzOLlQ8z4QnFitcH4YYi1d/59vMi6d1jcLtixdMT7vumvi6FdxZpfznwzGKd
162Exxapfobseovk73w4v0j9X6H1d5H60RJrryLlewWcVST/VcOji9Tv1Dk2
/ft6eH6h9P8leEWRznNfsfYp0nq3wAnW+xY8kfW+a+OpSPPaTnhzof5+CDcV
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
c+L/E/gj7LXX7dfY60u4W1D9UhN8KCj9PGDjP6h+7xC8g/OVX9z9TX383a43
qH6n2bL0/c16WyxL+8/0v63gLvj3ZNgjvk+Fpwc1b52+LH19Y9/OcJ+g+ocu
y9LrMf1bN3gf+f0X2K/3pr++EO5FPvSG+1FfL4X3BHT+czmcE1Q/dBXs12Pz
POAaOCuk+jkUHoA/RsIrAtrfaHgr+xvj9mv04xbY7zfM/DXe2i8g/brd2dPk
22TY1wtzvj8V9vs547973O9NvM2A/Xpi+v/Zbv3mvG8ePIH8WAD78aV/Pwn7
+myeBz4JJ/D3MtivJ6Y/eQbOQM9WwW3px0Ju/aa+59v7h9TvFsJ+fTfz+hrY
75dM/pVb+4V0Ppew9qM+Jt3nep/O+dv0jy/Y+KI+v+z8bez9qrue0Zc34Cj9
0NvwFOaH7fBo+sn3YT//dX5r4y+k+v8J7Pcb5jxhH+zPl0Y/91t70781wcOo
7z+49Zj5+SfnT9P//GLjOcS/Z3PfN/5vtlz8UUj50AL289/MryfBw5jfTl6e
9qf50x72+3lTzzrCfj6a86TOy9P7MfF1jr0f/U735en9me//BZ5CPPaEx/D9
i+FMvn8pPIHvXwH3YT1XwXP4/jVwJMC+4NbM6yPd+o19RsOL0Isx8EzseYv9
Pv3QeHs/+sXbYb++Gn9NdusxejTV/d70B/fAO4KKhxnwRuJnNuzHl6knD8EJ
4m0BvIJ+apH1Z0j9YTbs96OmX1gG9wtLT5+BvbDm05XWnmHOj+DGkN7fyYe7
RfTvteJwx4jycY2LH1OPyuEjzKNV9vvMt0m4PfW2wdnL6OsGez305GU4Cz1+
Ffb7SzN/vu7izfRzb8Nb6N+3w2OpZzvhXcTHhzY+gvL3J3DzgPy3F/brucnn
L2G/HzP+aIL9emf6wQMu/sz7C4dcfBn7/mLzISD9+t36KyC9+5+nxdMCmqdb
wH5/YOzVCp4QUH/QBu4c0HnaqbDfn5r56nT4UK70/Qx4V67yqQu8gP13g7ex
/0y3HhOPWe5zU5962+sHFF997Xpzpcf94bG5el4wEB6Xq3o5yK3HzGtD4JbM
LyPs99nPdc4eZj83wI3sZyw8LFf9zDi3f9MvT3g67V+j55PgLavUL90F78+V
f+6Gs3P1vsF97nqm/s9yn5v5YS7cL1fxOR9OrFK/t9D6K1d69ATclMu/z4Xn
5er872m7v1XK5xVw0SrlZ8DZz6wvAidz1X/F4A25mteK4QO56odL4SOr9D5T
5f+zXw0cyJU+rYO9gM5D1sMNuerfXnL2MfX8Fbt//PuaYxOvW+E5q5Sv22x8
56oe7YB3rJR+7nL7NfH3MbwiV/3Up9afucqnz50/jT2+hrsFpCff2XgmPw66
75t6cBg+ukr95m/wlFz1/8esfQLy1//ksJ5VOo9sDvfJ1fOYFvCkXN63hRtW
6flKK7h9QPWmNZwVMPXi9TY56f2n4u27tjlpe6b059RTYV8fzP06wFOYr0/P
Sa839WfBn2E/flN6U3SGXT/+OhP2++WUeZvOhscEzP5PORf288/oWzd4ZsDU
i1t6wL4+mHjIzEnb3/zvUs6Hx6FnWXBFwDxP2t8T7hiQvveGfX1NPZ/rdQm8
NaB86puT9meqn5p9GTwnYJ5Hhvq79Zl59Ap4aUD18EoYfT7ec+sx5z2DYH++
Nue5g+HRQeX/ELeflP+fHQZvkX3qhsPT1O/sGgmP1Pzw6yi4F/PT9XBzzmdu
gK2+3wj784XRg5vt/jjvuMVeP2jW++Y/bHxovd+Nd783/pwAH9A80GcifETz
zM2TrL2Ceh9yso1n5vEp1t9B00+/MBXO0HnAnmlwMii9vtetx9S7+6y/1Q8M
mWH9G9TzxQfgJs2jS2Y7Nv3fg9b+IZ1HPWTjO2ieHx942N4vrPxcAPv9stnv
YzY/6C8X2fwN6XntYhv/er4RyLbxxnn4EuufkMm3j5ba9eh55NHlNn54/+MZ
m29h6dlz8GD1Z7evtPfX+xqP5Vr75GkeCMKLeL8mbO3P+215dn95Jj5OiMJH
9X7DeXG4s95vGlZk9Sbf9JN3rbZ6ky97l1j7FJh6Xl4G5xQovirg1VHpRSVc
EjXz15+qrf317wV61sKVvE9fB3eJK5/q7XoL1V88b/NT/96u6t9wq2JTr955
Ae65Wv3KS/CCEs33m6w99e/1ezVa+/H/Z9gM767Q+wZb4PMrze9z3oDXJfR+
wFa4Q43u/zZ8R63uvw3+OmnWf/J/4C/X6Tz6PfiC572D3qnXLbM86Xnv/wCF
H9li
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.6666666666666666, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]], 
         LineBox[{{329.6930424403183, 6500.}, {329.915, 6361.}, {
          330.28200877192984`, 6500.}}], 
         LineBox[{{330.8808707482993, 6500.}, {331.118, 6442.}, {331.72, 
          6401.}, {332.321, 6286.}, {332.923, 6422.}, {333.524, 6384.}, {
          334.0611692307692, 6500.}}], 
         LineBox[CompressedData["
1:eJxdnH2clWP+x2eTjMxmJLTVJipmSYqyIbkl1VabbGPFxlY7m7RJhFLJqClT
Jo3UnMc5c848NI9N8zxpQ0iGkqRNCFEYJCFJwu8+1+d9nfv1+vXPvN6vc859
X9f34fP9fq/7nC6Yct/f/t0mKSmp96lJSfG/zutF1+355EEnKf4v41mn4+LN
r8e+gndscKY9/fWC63+Aez7rzO9UPeLjX+EpG5y3Lnz/p4XJD4mPNjsX90+u
6tYRHrzBefT6gXdt7Ap/0+y8/dcpqRN6wzkbnD9NXPnSD33hMRucx6ZvevCZ
QfD3zc7/5n5xUf+h8Mpm59Inzn13x2h4ZLPzSo+aB6bdCm9udrpe/kGvdv+E
g83O/de1f6doGlzW7Lg067oH4DnNzqRPd174/nw4r9k5sdBdwBL4gWbnmc5t
/95hJTyv2XFXk1zlhyuanbi5biqET2t2/nhHxrUfVcKPNjtN3/+ye24j3L/Z
SWnj7uAF+IJmZ21oS4+aFvj+Zidurr/sgu9o0vXeh99o0vU+hds3OeNW+GZ2
/Aae0aT1HYejTVpfm4fFVzdpv2fA9zRpv+fALzc6cfO0Px++vkn2S4MvbHLG
uu67+gr4oibn85/Lv911LXxOk/xxE7yr0Sm8yV3xWPifjc61H928wjcBfrXR
+YNr3sumwNsanWNpbkD8B/6qUfHyEJzc6LhXf/rrhXB9oxPf/uJseFSjEw+f
zqtgf6Pz5Ax3hSHvdRPPJfDwRmd43KDVdj+NTk83nKdvgLMbnWHxC7wI72xw
LogvYBt8qMEZGjfo/+AbG53zl3x1y4YP4W8b5M9WeGij7P8t3L3RiZt31s9w
c4PjvjulzalzeH+D8qED/HiDE+3iBnhn+M0G50XXvU0XwJ83OB/PcxP0Urhr
gxMPt3cHwG0btL8h8IoG7W8EPLnBKds6+s/LboGvqXdee/j5gi7/gDs2KL4y
PDbxMBMe1uDcFxeQOXBJvfz3OHxWg3PUDd8vlsP9G5wJVze0PLwafrveibuv
bQTeUO+42fz4mlK4uF72roXH1St/NsLtG5TfW+Cseq3nDbiG9bwDp9c7f152
w6RP98Md6p2we7kHvoRP1sk+38P31Ms+v8D76pTPp81lP/XKl1T4ynrFdxd4
e530sCfcqd7p7W7vxsvg2+udN7a7/66C/XVOXE7vcOB365x3d/w4/sBf4Pl1
jvvpJ2eMh5vrnHh4/TQR/qBO+TEVHl/nxMMxZRYcrpV9H4Fvq3Pi4dt9Mdy9
zrmsLv+b0hy4sVb7yYNfq1X8FcBDa5Vf5fC/6pzUuIPr4OdqnZOuXPx1E3y0
1il25eadV+BltY5bDdImvgmfqJV/9sLn1yl+P/E+v829/fdfwb3rpI8/wJFa
6c+v8N5a2SP5EXHfOueReEB3hBfXKb+7wsdr5d/e8Nu10q++cG6t6t2gRxL7
M/XzBnhmrfOrG+4XjYYn1yp/0uHf1cmed8Gn1zlxrLsbPlzrHCl1A+5+OFgr
fZkHr69VvGfB7eqceDo9v+KRhH2MP3zwPbVO+oGS0JYoPLVW9aEC3lHjxN29
tR6+rlZ68hzctVb+3AqX10jfdsLX1irf3oVra5yIe7nRB2BfjeL7EPxCjeLh
GLy/Rp//Df6Mz58+T7yZz3eE02p1/27wcT7fG+7J+i+Hh7D+QfC3Ndr/UHhn
jerPaLiuRva7FV5d4/jd8Nl8F/zHGtl/GrxqvfL7fss18t98uKTGictlQxZ8
do36m6fgM2pUr3x2P+sVPzF4U7X0pcK+Xu3E3dmjAR633gkG3H/PwdvXK35f
hY+sd15202vlTjhjvfTgPbjzeueQm/5LDsDdalSPvob3VDvx9m/eMXjAeuXf
b3D6eunR6fMT1zP52xE+rcY5vMA1UDd46Xrlf2/YX+3E252bL4fzqvHX/MT+
X3Xl94ah8Kxq2Xs0fFe1c2X8361wxTrp113w6+tkr2nw2Grp3/3w1Gr1e/Ph
K6qlF1nwmGrVgxXwjGrVbx/csk77jcJzq7XfCnhttfqlem/9yi/4wWonLm+b
tsJH1ik+dnrrfdOV/5J34e1Vqs8H4KYq+fcQfHid/h6Dd1Wp3/sNnrhO9Th5
Af6sVr3pCC9cp367KzxqnfKhN3zVOsVzX3jQOvUng+BL1ikeb4AfrFJ/ORpe
tE7xlA5XVzl/c8PvqzvhtHWqB3fDwSonbt6ds+DDlYqHeXBKlTMybtDF8NFK
1bMV8DDskwfXVOlvFC6ulD/L4Z2Vjmvdyz+og3dXUb/gDyult6/A+yudeLpc
+iZ8R5Vz3HVXaK+9X6XqzSfWvvjjK7ihUvFzFD5R6cTNccuvcD/ud9qj4r0V
ut9ZlqtUn7rAyyvVT/WC21Vpf5fB17C/qx5N2MvoqQN3qVJ9/wu8qEr2HA/v
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
HuBTPvVYmVif2X8v+OQa7T8NbslTPPaBN+epPvVfmbCHia+BcC/mi6thV0/M
84Ih3vpMvRwKu/2TmdeGr0zYw/Rno731mf3c/P/2Mx4O52k/E+CaPPUzE737
mX55EnwkT3qeAffwqV+6Bz6Kf+6F3X7efN/gfrh1jer/w/DuNZof5tnX8xSf
C73rmX5vMXwoT3r0BLwBez8JZ/l0/rfSs7/J59Uem/z0ww/maX1ha7889V8x
u/88zWsl9vNr1A+Xw/18+j5TNdwZ+9V59zP61OTZ15yHbITdfDL92ws2vvJU
z1+2+8mTf1+FG9YoXrdb++UpX3fCmXmqR7u9/Rn93Aun+BR/H8A789RPfQxn
5ymfPoX3Yo8vrb3zpCeHbfwRT9/ZeMhTPTgGu/lq+s2fbTyvUf//m+dv46/f
5Sbsb84j2+Ym7meex7SD3fjT923h7Xl6vtIeTslTvUmB3fncyF0HeJrPxNvh
1NyE/eP6c/bZsN+n+50DN3C/8+AZ0r/MP8An84zeFHeFB+OvP8KdfSZ+Dp0P
7/aZ/Z91IZyEvvXKTfgrnr63XwS7emDiIQ0emWfyJ3qJvR961gfO8JnnSa19
cxP+NfreH97iM8/n+l0Ju/lp8mmgXV+e6afm/Nlbf/x5ZPBq2J1XzTx6LTzR
p3p4nV2/zl9OdWC3/zbnPUNhNz/Nee4wj03+D7f+9hn/rxoJu/NJ3D6No+Ax
6nf2joGTNf+fGAun+/h9ufUP5zPjrT390sNbbbz5pQe3wfuZN2+39tZ6t/0D
nqDzjsN3wqt1nnjWJLiH5qMBU2B3nojPM7dlwH38+j7kVO9+Rh+mwdma15+b
7nH8PGD/DDiNfu4+OJPz4/vhWeoHhs+29vDr+eJD1v86f18+x8Y/zzcfgVs5
j5pv7avnx0cetf4NKD8zvfub/S6CiwPqL7Ngd74xz2uXwgvUn/izvfvp90bw
JD2v2ZcDhzXfnHzK5ifz8dM2XoLSs2esf9SfTV4Ddwsaey3y2XjgeVrA+pfn
gSF7/5Dmm3z4eMjEx2lR+Ki+33Bxoff+eL6PLLb5Fjb95D1rbfzmy95lNh8i
pp5XVlg90/drt1XZ/ItIL6rt+vR93t/XwqP0e4G+9Tbf+T59I9yB36s1w8v5
vd2z8CD9nnL9f609i0y9evM5+MNi9SsvwDUlmu9fgq/Q7/X7bYHnlanebYW3
luv7Bi1WP6rM53Nft/Zbp+8HbIdbanT/HXBJre6/E55Tb9Z/5ts2Xhp0Hv0/
OL/JxOvYd+BVG4z+995r7fOs839CD1I8
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
xNPgrFLpf0e4Q6nm387wqFLp97nweaWa57vDm0vk/4vg1aXy56Vwz1Ll3xVw
u1L5py/cp1T6dA3cpVTn2wPg/SWq54PhaInm9eHw06Xq52+C07FfNlxdovOB
O+BepZovx3nrn5T8b4K1Z4nmsfvs/Uuk13+HS0tU76fD+0qUDzPhAyWK18fg
YInq7zz4cIn0bj7cvkTxtBDOKVF9zfPY7C8fPq5E53U+eGaJ6mcYvrxE/o7C
75ao/1sGtylVPxqH+5co32utf0vkvwZr/5j6nRXwlBL176vh3SXS/9fhtBKd
574Fl8W03vXw1zGt9z14JOv9EO5UonntI2//5t9P4RNLpB874YqY9H4v3AP7
7oPfjyl+vrXxXeIk5T3zANw3pnw6BM+Nqf/5BZ4cUzykzRf/O6bzo7ZwtxLp
3Qnw5pj06I/w2pjs1QEeGJN/z4QPxJT/Z8PzY5oPusJ1MfUH3eHsmOLxz3B+
THreA86JKd8u9z5v9O0vcL+Y/NUPXsXzHbh9THpy/fyUfc08PgzOiGm+Gwnf
FtP+R8MTY6rPt8PRGPMJnBuT/e+B22D/e+16ipWPU+AxMfUbD3rrN3ozA+4S
U37Nhp2Y3tfMhfcW6/3Yk3BtsfTgabueYvWDS7z9GL17zn4+pn7gRfi8mPrd
INyCP4vgsTHNVyXw9GLFUwXch/3UwK3F2k893I39NMPjo+qnVnn7N/3pq/C0
mPT+TXhrsfR7nXc/U783whn45wP4ZPJjK5xTrPP9T+DMYs27n8Fuvph+ejfc
tVj2+Q/8LPH2DbytWHq9H07D3wetfaN6H/oznF2s+vIrPCGmfrXNAnGHmOrt
8fD6Ys0nJ8H7onr/1R5eE5XenQ63RqXPZ8FlUfWjXeD2xcqH8+ChMfXjF8L5
xfJf1oLU/pPmKe4JJ6LqH3rb9UWl31fCecW6X3+4M/e7Dl5UrPUNgQuKtb4R
cA/ydZS9HlV83QrvL9J54Z3wtqjOP+721mfs9ze4bbHi9T54VLH6g6lwvFj9
4XRvv+a87hF4b1T+nQNnFet8ex68NqrzowVw36j6u4VwerH0IQ/OiCr+nvfu
b/LTZ+0Tld6FPf+afi4KT4wq35dZ+xcpP+LWn1HpV629X5HqRwM8Nar+bYW3
fqPHq+HpUfnrdTgNf70FD8K+661/Ior3TTZ+oqrHH8LNRcqff9n1YY/tsJv/
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
Pda+9PNfevcz/mi1+eJTP7jfxrdPv184aO3rl31/tvYLSL9+hXN80rs/PCd2
65OZp4/z2NjrRDjuU39wMuzmszlPOw3OYL46E56Ovp8NjyKfunps9t/N3s+n
/Wfa7xOPWXBfn+rTZXA69bo3PN4nPb4SHurT+4L+8Aif6uVAeLJP89rg51L+
MP3ZcPigT/u5CY5Qv0fD2exnjGcv08+MhR2f+uXx3vqMnk+EtxWoX7of7uyT
fx7w1mt+b/AQ3M6n+j/Le76ZH+bAqwoUn/PguQXq9xbA/XzSo4X/Y+9n4M0F
Ov97Dnbjw+RzAezGm8nPIJzF+iLwRJ/6rxJ4kU/zWrlnb9MPV8FrCvR7pjq7
nwLZrxHe6pM+rfTixZyHrIZ7+dS/vQ6396mev+Wx8e878NoCxesmGz8FytfN
cKJA9WirXY9f+rkNri1Q/H3m5YPppz639yefvoAHYY+v4dYC6cl33vpNPB2w
/qV/PGTX41O/+YtnP9P//w63+OSvP+SzH5/OI9vmp9Zj3sccB+f6+L0tnOHT
+5UTYTd+Tb1pB8d8pl5sOBkOKt6+aw931jx62mlwM887HXbnAfO8M2HmtZyz
8lP+TepN2dn5KXsaf/0J7qd5v/Wc/JS9kvs/9Ty7fvStm7f+ZPrecQGcSTxk
wjuUP7GLvPUaPcvyOPk+aV8POIK+Xwa7ep98P9fzCm+9Jp96w6t8pp969C+w
mx/J95HhK+FWn+bRq+HxftXDazx7JvP/WAd29c+c9wyEsznPHWT3x/nBYNjN
36T/XxgKu/qXtM+KYdbeftPvbBvh2Tf5+CMj4VHMTzfDbr9hzmdGw2vQw1th
xy89uN1br8mfO+CjWu/Gu/7/er8bB0/2y5/jYeaBXhPsfjTP3D4R3ubT7yEn
wYuYxyfDvB94dYqNB50H7JrqXTd6/SCc4Pz4Ic8eyX5g8Ax4EO8XH7H21/n7
kkfhNPq/x+CxvK94HHb7hWT7vP8fsH1fkOM93+x3vs0X+stc2J03zPvap21+
qz8JLoIP048ssc8PmnzbkWefp/eRR5/11mv8+7y1B793edH6J2Ti8R6ftW/Q
2Gt+AM7hfVrI6gm/rym0+RDSfFNk1xc08XF8zD4vbPrfC0vh9fp909Aymz8h
00/eX2HzoVD2jsPtCk09r6m2640ovmpt/ur3mq11Nt71e94/Nlj/6u8FejTZ
fC5W/7wCHsHfq70En8Hf270MD9bfU9a/AreUmnr1was2X0rVr7wO1y3TfP8m
fGK59KMFDvP/Z1gHr+b/57He+rvKfD//XZsvNfp9wCb4luV6/vvw5fV6/ma7
v4RZ/yn/tHrTqPPof8HLm0y8jvwYnrBC+//E5u9Kx2le9vAv2208vez8H8KN
mLc=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 1], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnHtYlVX2xxkzI3PMzMrUKSospsywtLDMXs3U1DFKKjJ0yCFzHDNKUzI1
UlRUVPLcL9wO58DhIh6IjMyKjMrSihzH8PbTkoqMGiszM8vfPuv73Wc/z/iP
z+c573nfvdflu9ba79GrZjz1wONd4uLihp8bFxf9e2fZPVt+Gjffiov+mdBg
HUrs9qLjfnK4wTpe+d7E2x4lv99gdblh1aX7sshlDVafunGfL5pLzm+wrhsS
Xzsgh3x5gzW8cceCN18k39ZgTbpt9ajMteTP6q3pW+/t0cVBfrjBevrO7p+V
F5MP1VvLmz8suydM/q7e2vfxL1OO1pPjG6zO+5uuWPE6+UC9NTrzy9ar3yXX
1ltpR0O+lo/Ju+ut6h92/21GG/nlemvbfFvfrl+Qf6m3ekcf+C15db0166Xv
Ft/1Mzml3no+uuE/yHfVW59efeDXpfHPgjdEsP/e5FMRa8ldw6Zv7U/uWm/9
+28zeqUPJL8esf6asWH7z4PJf6q3XpitVpRCvipi/Sfnm2uHjCZ/FrGi5v94
IvmdiPVuQuSZWQ+az/vfpDz4d/J9EdhzFnl0xFKUfecz5EciVtRcB54nByPW
6aVqASvIPSKWss5DPTeQGyOWWk18rZv8fgT+CZDnRay/TM2643AN+cGIteWn
3/fkvELuHrF6RAPoLfKEiFXha0mI7CAf2WxFzXXvbvI+3u8AeSjv9yX5mc1W
6jrX3N7/Jfs3Y32nyH24vi4LwIO53wvI4c3Y7yXkyZutqHm6X0k+n/ZLIp+u
syYr9w2/mWxttr7+reqH3XeQ4zfDH/eQkzZbAZVev08mt9ZZdxy+b50rnXyq
zrpcmffGGWR7nXUySQXEv8jb6xAvz5LT6ix195e+W0p21lnR7S/PJ3dssqLh
03cjedBma+0ctUIfuXkT4jlEbt9kjY0atI48q866RoXz7CaznjHRG7xNDtZZ
V0UXsJN8bBPy7T/kE5usK1d8e3/T/5Ez6+DPDvKcTbD/D9ofdVbUvNm/6edt
gh6cuxDcrQ750JM8eJNV2k8FeF9yY631tnLvlqsMf75IJegN5J6boFdDzeey
v5HkRZuwv3HkjbVWWMnd6vvJD2yyPljwZkm/R8l5tYivLHJmLeJhLnlArfVU
VEAWmuvFfy+SZ9VYJ1T4frOGvL3GSo8KpJ3cUQM9Kjb3Ez2uJCfVwt712h61
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
8uTvsz7X9njN+n8D9KDH
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 1], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 1], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[1, 3], 1, 1], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
            Rational[1, 3], 0.6666666666666666], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxFnH1clFX6xlmjomKNzIo11si02CLTQpfK7MlMTV3TlYpKW3JZc10ySlJS
MlJ8R8N5HwZhZpiBAWYNDYtcKysyW63IZY3SflpSWZFLRmZm+jtzX9eZ4z98
vp+ZeZ5z7pfrvu/zzHjlrMf//Lc+CQkJo85OSIj93R2466UfxhdZCbF/9/3T
+nTwOc85p5G3b7J66ndO+uND5PX/tPpct/LSj/PJJ/9p9d80/rNF88hp/7Su
GZ4UTSs217u5ZdeC154j94tak/+4+o68teSeqPXwtruT+zjJu6LWE7ed/1Ft
tb5f1Fq249+BuyLktqj18fs/TT+8mVwStbqntQ5c/i/y0SZrTN4X7YPeJo+J
WjmHw76298nZUavx+71/mtVJvjFqbS+ypyZ+Tv5z1OoXu+G35ANN1pwN35Xc
/iM5GrUWxzZ82uz3w0H7f16S9BQ4own770cuarKeuX3Ew9suJy9ptP7zp1kp
uUPIvY3WH2Y8/+aPQ8mnm6xn56oVZZNLG63/Fn999fAx5KWNVsz8708itzZa
b6c3PznnXnJyk3X5DcqDfyEnNsGec8iDmixFhbc9ST7eaMXMtX8xubPROrlE
LWC5ub+yzn19nyfvabDUapKiHvKoJvgnSK5rtH7/YP6tB5vIs5qsl374taN4
q7leciyAXievabTqfG3pzbvI/kYrZq6795JTeL395BUNuN4X5v1T17nn9fsf
uZHrO0E+1oD19VkA7mnAfi8gFzVgv5eQExqtmHnOv4Lc1gD7ZZBfarCmKPfd
fKPhr35p+H7vreSCBvjjLvLkBiuo0uvXKeRFDdatB+9Z584ln45Yv1PmvX4W
ORqxjmeogPgHuS6CeHmKPDBiqatv+G4J2RWxYttftorcFbFi4ZNqI2+PWGsL
1Ap95LQGxHOYfG2DNS5m0E3kWRHrKhXOc1vJ/SPW2NgF3iBPjVhXxhawW9sz
gnz7L3lPvXXF8m+ntf4feUYE/jxCTo/A/t+TmyNWzLyFv5AHRKAHZy8Ed9cj
H/qSN9Vb/gEqwFPJYyLWG8q9L11JfrPe+myRStDryIfqoVdZ5D7c32jyuHrs
bzzZVW9FlNytnkY+WWe9u+C1mgEPke+rR3zlk0vrEQ/zyIX11uMxAVlIzqmD
/54j/7ne6lXh+/Uackq9lRsTSAc5qR56VE0eVA89riffWA97byYX1CN/tpHX
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
L8bDs2Qd38vM66Kfq4x/JZ/Lzf3FfhvM9aWeOsmFrGeV5GTqVzV5sBP1pJas
6qf0m/XkdupPE1nlq5wnNZv9ynpayL3U41dMfEj9flXHI+3zpo5HB+yzk3yA
+bKbnMf69AFZ6a/E13/M/sRfncb/kt8HzPqk3/jM2FPq/RcmfqQef2NY4ueo
iQeZj34g51J/fyKr+ifzwi9m//L9n4Q14HzqSeKa+H6l/z1vTdx/oo+/JR9i
/e5H3mXHvHYpWdUD0fsBZNX/yLx/hbm+1L+ryEXUrwyzHvF/5pr4eiUeh5ML
aO8R5BQHzu9vJic5MC+NJuc4cL4zhpzG/ms8WdUz+T7RpDVxf0q8TSUn8H45
5vOSj7nkdN5vJjmb/e4j5Mnc32xzfZlX5pJVvMv8+rhZj9hzPrndDn1dSLZY
H0vIDjvyqdRcX+J3ubG36P1q4y/Rm/X6dTvixaY/b8d5sMvsT/TaRy6x43yv
Rr9uh76FyFMd6B8i2l/sx6LkI3bkw2byDjvq+1ZjX5mftpn9i71eI4fsiL+3
yKq/keeP75j1SLzvNveTfG/X9rWj3+4w95f8+ljbk+v/lDyY8/Jn5E476tuX
Zr3i7290PNuhZ/8z/pH59QedD3b0UyfIFXact58iT7DjeU/C2vj+pD88mzzV
jvpyHjnFjvzoS17FfOxHtuzoNy4lt9Iel5Mj9OcV5Kgd9XXw2rj/Rf8zzOsS
/5nk7Xb0v8PJKr5ET0eQO+yYx28h++3op0YbFvuOIQ9jPo0n97LeTjL7k/lm
qr4/9TCHXGhHPchdG7e/xNtMcpUN+vMIWc0vki+zzf3w/Umyig95vjOPnMPr
zSereMLv28hzeL0SYy+5XqleD+tVGXkP42k1WcWXzKvryJM5z9nIY+04T3Hp
+GB+VZKV/kk/WUPOoz7Ukj30R8TsV+avKLmA/m0ml1Fvtpr7Sz/xCrk/4+U1
cpodevkmWeWPPA/dqePRgfOw3eRT7M8/MOuReO4w9pX87iQrPZD+7AA5y4Hz
ks8Mi158of3B+eUbcrEd/cpRvT876sMxY3+pfz8Zf0p8/WLuL/F6xuSX1LfE
crDKR5nfksrj/hD7/JbcY8f37y4in7BBry4hq3yU84kB5E4b6tNAcjH726vI
IfY715CLqKfXkdMZj8PIqt5I/GSZ9Ui/kk1W+i3nu7eRm6kPd5DL7aiP48hR
+mcieSz1awo53w49n07uz3p0PznRgfx6iDzYjvjNIztoz3yyyhc5f/i7Xr8N
eveYtrcd/d4TZj1yHrOAvIN6vIis6oP8fZas4k/0Zxk5l/dfqa/H849ycjf1
toKs+hOJT4exr/QbXnIWz0s2kocxfwPkDuppHXkG7d9o/Cn58QJ5Auv3i3q9
7C9fJqcynreb/Yn+7iAfsuO8uM3YR/LzXbMeib/3jH8kn/aSVf2TeX6fjk/q
zSfGPvi+gLGH2Ouw8afY6ysdf3b0S93kUZzvesz6pd/rNfEl9exnE49SH38l
57Df6bMO3GXDes8hF/L84Hyyykfx74XkwewvLiar+JJ56zJyK+2bRp7D/iF9
Xdzf0r8NXhf3l+T3H8gq36W/vp6cwXoznGwxHkaSD9hx/nOLvh/7odv1/Rx4
HnAnuYTnm+PJ7Tb4YzI5xPydSi7i/nIMi348QFb5L/PXTHIz+61HjD0l32aT
VT8g5/tzyQn03zyy0jeJt/nr4v6W/n8hucOG874S8iHao9TYC7+f1P6z43ng
anM/8fc6zZz3Nhj7iZ65yDnsxyrJqZxXqsk97Hdrzf1lXq839pD8ayIP4/lc
M7mF9bFF+4fx36rtwf7xVb1/1uc3zHrE3m/reOQ882+yn/XqfWNPib+9Zv/S
T35ELtbnt9p/nG8OkmfwPKGLXMHnMUd0fLA/7ibnsr5/T1Z6IvPzjyZ/pP/5
2awPv2cjt9nh/z7rwQ7Wh3PIKl9kfr2A3Ep9unB93B7ytz9Z5ZvUs1Syih85
T0ozr0t8XUlW+YX/j2R93D7y/j+Q2/n+oeQKvv9GcjrPq0bq6zF+byX3Z329
3axX3n8n2cN6NIE8mfP6ZGMPsc9Ucif1Ioes9FHs+YDZL37PQVb1S+rNI+QU
+mu2tgfn/bnkbJ5nzCPnMx7mk7sZPwvJg1lPFpMLGG+l5AT262XkDPaHq8z+
pV9Yp/drh55uIKv4lPnUSc7T50dkFT/y/Z1qstIf+b1WUN/PiXysN/uVetRk
/Cn90wvkLuZ7CznTgXrbSs6ivm4n51BP3iCr+Vr0+G2zHpk/3yWXsJ97X9ub
/c9esp739pnX5e9+Hf82+PugjifWk8MmfiWfvyKreU380U3eY0M/2ENW/bB8
f6GXnEw9+lnHD/XrV+0P6t1vngdbnKfPIUfZn5xPdtjQH/Q1r8t52sXkAhvm
q8vIp2zQ98vJ+cy/dHIi430wWc13sv8McoUN8ZhJbmV9Gv58fP8SXyPILTbo
8c1kNd/I84LR5IgN9XKMWa/Ma+PIWezPJun9cT/3kMu4n+nkVdSHXHKGDf3M
DHKpHf1yHrnIBj3PJ7fZ0C/9nezZAP88Rlb9jnzf4AlyD+v/AmNPmR8Wmf1I
fC4hq35B+r1l5GTq70pyHu29lhyy4fzvebLqpySfHYYlPz1mP7K+KnM96b8C
ZKWfMq+FydnshxvIU234PtMm4y+x3xa9Pxv06SXyLhvOQ7YZlv7tdbLfhnr+
Fjmd/n2HfMiGeN1D7rYhX9vN/aUedZBn2KCfneRhjL9PDUs/9Zm5nuTTFyae
xR7fmHwRPTlKbmY8HTP3k3pw3PhL+s1fzH6l/z9jri/++k0FeJQd55GJZKU/
8jzmHPKBDfy+LXmwDc9Xzier/JB6k1wRv5/IXV9yBuLtaIp5f0x/Lr6YnMv7
XUKu4Hx9mb4f9K/0d2QV/zG9CV1OLuH5ye/JqzDvd19BzsT8c9Eg8g4b9G0w
uQD14oGrzfolHjLI2zHP+K8lt1PPMskqPmLPk44MNesRfR9OVv1U7PncsJsq
4v6RfBpBTsD5wsI/kpU+xZ5HVt5MzuM8eqt+nee1t5FzoM9nW+RsnveMMe+X
89yx5Czm/zi9fvjfNoGcBP3fOlHvxyb9Tudkchrmh5NTyImcz6eRVX8i5zPT
dfzw/OxesupnRQ/uJxczfx7Q/sV6dz9kXpf4manjFc9nL8ojl+L5eNYsY//Y
PHN/vrm/fB9ytokP0Yc5ej2Y11+dazh2HnCogNzM7x88bj4v9e4JchnOK8fN
J6t6KM8XnzL2jbXraxbq+GF/+bR+vxPnUYvJap6Jtc89z5CjfF5Qql/nfpea
fJH+skznF5/XrjDxLT8XWqXjm/3IGnO/WLgcKNf+w/crTq0nD+P5xwZ9PX7f
xU4uR3/2iJOcAnstdet44vNGr/YXv9/k0/nvwnyzkexwSXyc6ydXOaX/vSao
14PvN00I6Xx2Sj/59zod7y7YO6LzA99XbmrU8YHn0bujOt6c0ItN5B63zF+/
3az9hd9rDH1Rxz9/b7bVvC759LLeL39v94rWD/ye8oV/kQt9Uq8+eJXc6kO/
8rr230bM92+Su6qhH2063/j/M+wkf+PH9w12kWcH5fMV/yb/uxbfD9hDfhC/
p/7gffK+MO7fTr62XtZ/4X/I2yI4j/6vzj/8/4tTPiIfiWL/H5N3bpJ5fP1+
8qZm9LOfkkdvwfOTg+QftsD+n+n60wL97NLxshX92JfkLS/LfD7xCPmCV6z/
ByLPnj4=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
            Rational[1, 3], 0.6666666666666666], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
            Rational[1, 3], 0.6666666666666666], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6666666666666666, 
            Rational[1, 3], 0.6666666666666666], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
tz+J792wz6/5vNetT/y5H074tR/pcvEg+d5t/evX+fhzu/6Anl986ewhevwt
XOjX/vYHly8SD0fhAr/2O8esVDb6nwz/q9LhVr/mVwZs9FTOf09Zmbqf/H7k
NLjCr/E0cGXK3zK/nAU3+TU/z4NNPMrvcy5wLHqVB9t4HAoX+/U8bcTKlH3k
9zFXwCE+Hwn38PkoeLtf69FY9zz5fAJczueT3f5FPwrt86lnt6xM+Ve+P83a
g+/PcPaQz2e562V9f4IzAvr5PW698vl82OiJ7L8E9mGf+93nYr8H4XbsuwKe
if3XwAPor9bDLX71XxA28SL+jTh7if/jdn0+PV+ud/aX+NkAm3oi8/pGuIP4
e8LtX+rV0/BE9OovsOn3JL63OftJ/G+HM9G7V5w9pJ99HZ7t13nlTRcvcr65
y/rTp3r6Dtzr03l+r7u/9MsH3P1lPu+y/kIfPoFz6Jc+d/6QefArx6I/38Kr
/Npv/QiP9qt+HYWH+7VfOGaV8hb0Lx029UvnQ9jEr9TnU+A8v/Z7p8GT/dpf
DYSNfoo+nwU3+7X+n+c+l/72Atjom5x35cHdxPNQ2OSbxNMId73EyxWwySeJ
h5FwqV/72VGO5bxjLLwPf06AjR7JvD4ZNvVX/FUIt/i85PHdgFvgcX7tN6bB
Jn9F72e49cr73VmwiRc5j5kDl2Dve+C5fu1H58HDAzp/lcBGn/R81No/wO+D
4W1+7beWw+3k9xrnH3l/sg7eib2CcBr5UeX2I/Efd+uT+E64/Uj/uwEuCOj8
+Zhbr8TnE7DRH7HHU3AT8fesizfpd/7mPpf4egE29UDeL7TBQ5mP2l08iB6+
ARey37edP2S/u93nUs/es+v1My/CRk9kfjsIt/nV/932+X79fUkPbPJX/v0S
LvPrvPqN+1z6u+/hAcwjP7t4k3mlz+rU92U/x8Od7Oek1Sn/SH3NXJ3av+jX
APiIT+P5l7DJN+n3fwWb+Jf58Fz3ffHP+XAF/feFq1P+lPPZS+BM+q/LYNNv
y/lePtzh03pRAOdj/2thU7+k374eHh3QfmX86pR9RA8nwaYeSDxNgUvQs5vh
YvTqNnc/6a+nw1OZB2fCO8mPP8Lb6Vfvgk38yfz259Up/8l5/4LVKX9Jf7YE
nk48PABnMI8tc+sR/Vxl1+PXfK5w9hb7+eFs6mkYnks9i8IJ9KvWsdSTRhc/
0m8+ChegP4/bePDpeVKr9Rfr2Qy3oMd/dfuX+v0cPBP7vATnYJ9X4SLyZYd7
ntSnt2z8EF//cPEt/toDe9SHfW490m98YPcX0Hr/oduv1ONPXbxJ/HwBG72S
+ehr5x/R3+/gLOaFHy0H9Pc/aWuUu8i/vmtS+5X+9wTY6LXo4y/gPOp3/zWp
58m8drr7XPR+IGziW+b9s2HTL0j9Ow+eT/7kwhH8n+fuJ/E4bE3Kn2LvEe5+
cn5/BbyFeWnkmpR95XxnFGzqhfRfY2Gjj/J7ognwYeJtMpzN8wrdeiUfi9zn
8rxp9vs+7XfvWJOyv+xvFtzm03llzpqUP2V+vQe28+88eLNP9XUhvMen9bEU
LiafyuBtPo3f5XACvV8NF9JfrYObfBovAXifT8+DK936RK9jzj5yvlfn9if6
1uTuL/1DM5xOPWyBu32aD5vs86nvzzh/yPy01X1f7PU8PJH4e9nay6fvH1+D
t/s03nfAPp/mewecRr/dCeeSX+/CFaz/fbjTp/PyB7CpP1LfPrLxhr8/desR
Pfu3+77Mr1/D7T7tpw7Dpt7JefsR2NQPGW/THlaeSn94LNxGfTkBNvkl+dEP
LvFp/PSHbT97OjwXe5wJD8efZ8Ot1NdB8Cqf6n8uPN+n8Z8H2/53GJyBno6A
TfzKPH4lnPBpPzUSns15xCi3fsmnsQ+n7Cv1dgJ8wKfzzWR3f9HDQjidelAE
9xJv0+Ay9OcOeB/5Msuux8fvJ2ETH/J+525rf+43z9lH/74NLqB+lMLj6E/K
4GKfrq8cHsp8sdpe79N5da21B+cVAfe5nKdUwqU+za+os7/0k3WwyQfRh0a4
G380O3/L/NXi/Cn+bYV96M0z8CGf9hN/deuXeHne+Uv08iX3PHkf+ioc8ul5
2A7YzG/Sn7/lvi/x3AnHye89cJFP+7N99vk+PS/5wMWP6MWHLt4k3z51z5d+
5Qu3H6kPX7n4kfr3nbOfxNeP1t/E61EXj1Lf+lak7CHzW3pFav1in1/ARh/l
93enwBH06jTYxKucTwyETXxLfTqrIrV+6W/Pg41eSr9zAZyLnl4EtxHfQytS
+5H4GW6ZfiUfTuN892r3PNGHa2FTf6Q+jqlI2U/8Mx42+if6NQkuRs+nwPnU
o5vhIvLrNrdfid/pcPd6tedMuIXzhz9ae6J3d8HNPu337oVNvsh5zAK4Cz1e
7Pwj/z7gWPRnGWz0VZ6/Et7G8yvgBM/3wa3EZwjOoN+ohjs4L6lx9pX8rYcL
0NNHbDxh/41wE/nxJOwxbz/trpf+8i+OJZ632fhAf7e7+JDz4jbY9K+Sn69b
+9EfveHiVfJpl/tc5vnd7nmiN+/BZcT/ftiHvQ66+BV7fQybfJJ+qQdORz8P
we30e71wCfXse+d/qY8/OX9Iv9NnrfKe9bre4+DJPu1/T1ybWq/492R4HPF9
Kmz0R+atM+Cp2DcbNv2B9A85cBrz8SC4mPz+NTyc84eLYRN/kg/D4DyfxsPl
sIl/Of+5EjbxJ/3QNbCJL3kfcJ3bj9TPsfB2/DHR2oP9TYYPs79COIR+3AIP
Yv6aBnvo1x1rU/6VfJsFl/v0fH8OvA3/3e3WL/E2DzbxJf3/QriQ875SOJ38
KINnYo9y2OS3vA9c7ewt/l5r7Ul/4nf3Fz2rtP6mH4vCWZzX1Vr/0+82Ov/L
vP6ojSfmu8edP+V8rtXZV+rjZud//T0d3ET/+By8mfr8IpzBPPeKY9GXv8O9
1Ks33fol/na5+JR+8h1rf84D97rrpf7vd/uV84QuF8+in93wTvrjHrtf9ONL
t1+Zn7+Bt9D/fO+ep3/P5vYr/u+zTvkQ+XAcbPJZ5teT4MPo08lwNudVA2DT
z0k9y4LTOU/KdtdLfJ0Dl/I+bvC6lD/k+l/D5Vw/ZF1q/3L9petS9pfrL4dN
vsn1V8E+6us1cCfruc7dT/4dty7lL9nvRDif+Xiy3T/2KYQnY89b4C76oWlw
HvPYHfA+8m/WupQ/RI/muOdJf3A3nEs8zINLqGcLYdP/SD1ZAm8j3srs/onP
cnizX/vDVXAm/cJat37RUz9s4k/m07D1rz0/gs18Lr/fqbX+DejfazW4/Us+
Pur2K/Xocbdf6Z+ehIdzfrfZ+p95eQs8EX3dBvdFT16Ep6PHrzh/yvz5ur0/
55VvuvtL/7PLrUfq2W54C/Gx191P/L3fxY/476C9P/Pax3Acf/TAzfSDh+Ac
n/5+oRduQY++hwvQr5+s/der3v3H+tTzZZ4+bn3qerHXiXAx/UE/uIj3D6fC
ucxXZ8Bl6PuZsI98yoFb2f8guGS97j8XTqO/yXP3k/o0zF5PfI2Ap9K/XWG/
z/uCkfB26uUouHm9zmtj3P2kP5vw//ZzA5zPfqbAneynyNlL+pmpsOk/pF+e
Dg/gPGgmPJR+6Y/uevHPXc5e8nuDe+FV1P8FcAbzw2J4IvG51NlP+r1l8Gb0
aCWcQ7w9DGf59PxvvbXXOs3nkLOH5GcEPsz64pbXa/9VDyfW67y2Aa6gH37M
PV9+z/SEtQ/nu0/BpejTs/CB9XoeshVup397Ad5CPX/Z3V/8+5qzr8TrTjib
fO1w8SP1qNN9Lvq5x/lf4u992NhB+qkPXHxJPn3o8kPs8am1B3ryBTx5vcbT
V3AX9eBb933pN390/pP+/yjci7/+A10x8SjnkX1hk6/yPuY4X+r5+ntb2OiJ
vF850Zfyr9SbDNj01yJ3/Xyp9SXj7YtMuET159RT4UKedxo8n+ed4UutP/lP
2S/hmao3TWf6Uv4Vf/0KztB5v+dsuEX3f8q5cCn1YxBs4iGZvrecDw/gfUwu
vE3zJ3Eh3Iqe5cFGb5Pvk7qHwBHm9WG+lH+T7+eGXgbnk08j4HQ9X1j4G9jo
c/J9ZPQKeCLnC1c5f0k9vBr2NP+P9eBsfg8zCjb9vpznjoan8r5kjLWf+j8w
zvpD7fPMeLhM+6M9E91+ko//YZJ7vv59uftczmemWH/yPuQmZ0/Rg5vd8yV/
bnH7S653x21wkerVF9PgLfhzOtym+jp8ho1Hff9480zY1Gf5PeQsOIf+dzY8
W/vp5+Y4/ybPAw7MhXvQ63vgcurdvTZf9PckY+bB3RoPs+9z9ku262sWwkfo
FxdZf/O+Yondn74/PnS/84fkZ5nNJ/09wPCHbH7QX5bbeOZ97Qo4pP1JZBXs
4zx8DczvM/dVWPtr/B9ZZ/3jV//6nT9Fz4LW39qf3RF290/a66EqqwcBnQeq
3Xokf2LWvvwetMbmU0Di4/iEjV/tfy9ocN9P5vu4JmufgPSTf3wEzguqvZvh
nfr7l8c3wln6+/QdLXZ/+vcwPU+49STLyS82wZn69wJDnob38Xv6Z2z88Pdq
f7H+D2l/8VeYv6d88m92f5VSr956zupTlfYrL9h4qdL5/iX7vCrVjzYbf9Va
7161esX/z6Pd6k9Mvu/7u42vuP4+wM4ZCf176rfetP6p1ed3wOfXy/pP/oe1
V4OeR/8TPk7//4uT3rH7a9L9vwvXbpB5fN1eG0+PaD/7vl1/s74/2Q8P2aj2
/8Dm++Oqn132+v/Rfuwj+JRWmc/Hd8Nnb/L+D4e4hco=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH2Y1mPax+dJGMwyEtq0DIpZBtMqO1byk5datdTTeAzKM9o2bRvGlppq
yvSmqeZ+nfue9zKUNehgIrZtQwhjC6NtGcpTtqxB7CDJa891n+fn+p3Hsf7p
+By/l+u6zvN7vlzX7x6nT7jzv3/XIysra8jhWVmZf7fcf9XTXw6fHmRl/qtY
GbzX/4j56TFw8X1B90Mvj/zlzXDriqDHuUtOemcinLUi6P3Y8Pdn3wGvXxGc
PTB7Tb9yeGtzcPG69hnPzoc7VgSjfrn08tLl8JoVwS0bfp3TIw3vbw7uuvTo
t1ethKtWBAs3/e3+q1rh/iuCd17/euyetfDq5mDfmPWnLv4r3HtFMKz0g44z
XrLxivc82LT5dbi5OXjk822/mdAJ72wONk6v6dPzn3BqRdArM+AncLAimJz4
tOKyr/x4TcGczIJ/hEtWBG+eseObedl3Kxc26/p7wXubgrmXDb5lwylwa3Pw
999MyC0ZAGc1BT8fF3vhq/Ph75uDe6a4GRXBB5uCf5R/dNbAYXC/5iBj/tdH
wp1NwUt5bX+cfP3d4fxOucB58H/tebHnZHhUU+Co7NI/wnnNQcZcO+bAuU3B
t/PcBBb79zcHzjr/c2wMrmwK3Gyy19T7643qnwfgnObgZzdNvGTXo3BFU/D0
lz9sL3/K5p+TEdBz8MTm4E9Nm/Pa2uGuxiBjrl9vs/nK+3bAvXnfB3Z9dKTu
jl7/hocwv4Pe/syvxwzlgiZd7zHw6kZd74nwoMYgY56jT4MrGtV++fDuxuBa
576LfwG3NQYffvfw59sugcvxx1XwzsbgARdeP1w7I5z/Jbuui9SVwN0NwU+d
ec+bAFc2BAfynSD+AF/ZqHq528Zzb098Og/Oawoyy19YBfdvDDLy6ZO09Syf
6mbYBG9qUD0/6OdXH1ydMehj8NbG4Ewn5ynr4X0NwZWZFzxv8zs9M4Et8LhG
jbd/wPsbgtMWfzJm/f/BfRrUn13+/Q1q/8/9/BuDjHnLvoOnNmo+OHymckuD
xsOxcFtD0NLXCbwPfGV98Lxz79OnwyUNwfuzXYCeC3c2aL4aBKcadH1D4YD1
DYerG4JWl+6WjvHj1wevznj2vr43w/0aVF8T4a31qoc74JyG4M5MApkJT21Q
/82HR9cH+518P1oG768LSjIJMgXvq9d8tHJmaG/Jxw/BHfVq77XwxnqNnw1w
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
9rffmr5FD4dsftLvHLZEOT8WZOR/STa8KarxlbMk9J+c/x4PO73J70dOXBLO
R/TUF3b1VfYvp8JD6G/OhF0+kt/nnL0ktLfkqwIbT/RYuCScv5ynDYZd/pXf
x1xs75PrQ43l+jA4iGo9Gu6Z6yPtfrk+Gi6Laf4o9uvh+RvhYp4fD0/m+gTY
5Se5PgkuZ/5/sPXK9Tvh0VG9Pt3Pj/WXw04vYp+5/v6Y2m++sdj3Xrtf7L/M
7C/9VczmJ/6r8f7Gv/XwbvJrM9we0/Pl+2EXv6KfB/39Ud2vP2LvE/09Zs9L
vXrS2zum+erPtn7R90a4gHq3CR5Bv/YS3Cem/eyrtl7Zr7xu+pHzzW1wZUzz
6dve/jHdz+8wPUm/vNvsI/vzvd5/Uc0PH9l4ks8/hVsiuh/8wscT9f6ArUf6
re/Mv5K/Dpm9pV84rCqcn+S/bNjlA90fwnnU5+Ph0pj2eyfCTu/SX/WFC8nP
p9r9Uv/PhDvpb8+uCu0l510F9rzotdDmJ3oaXBXaQ/RyMeziR/QwFG6Paj87
DHb7DTnvGA5348+RNr7s10fDWfirGHb1L3N81/tG2MWX9BvjvX1imu8nwC4+
5PvuJD+/qJ7HTIFbsPedZh/pR6fBLn5k/1UOt8Y4H4WLqIfzYRcf0m8thicT
/8u8f2L6/SQKtxE/NXAH8VFn8xf9N8Ob0HeLH4/+90HTh+w/H/brjas+H/Pv
j6o9noC70N/T8Cj6nb+avUVfz8FOz/J9YbP3L/pp9/Mln77m/RfX9b4J9+N8
7y1br9Szd01vul/0/mD/tgcuxv9d3r5x/X3JPj+fiP77OdyT/epX8Pqo9nff
mH4lXn60+cp+pcfS0L+yniOXhuuV9RyzNLSf1Ndcuy75qzdchZ5/ujS0j/T7
P/PPR3V/eAZcjl7Pgp1+pP8+B3b9ipzPXgB3E98Xwi5fyPleEVxBvR1i8xP7
X740XL/021fB+fQr1ywN/SH58Fo//5jqaayNL/nshqWhfSVf3Qz3Zr9cCrey
H5xo65H4+L1/Pqb96u1wJ/u3P9r85bx/Bhywv5hj6xE93ANno++FsIt/yZ9V
sIsHiedq2PWzYr+Ef57z2LTNR+pZo9cH5ysrzZ9ST1b5+Ua133zI/Cn551G7
X86T2vz8yC/rYNdvST7+i9dHVOv3M3Zd7POCPS/2eRkeQbxsgbPoj9+Ac9HX
3709IuqvTluvxPdOuJR+432LD6n3H8CuH5B6/DG8Cf185u0b1f3Rl6Z3yb9f
2/OyX/jO4kt+/5O1TNnpS+KvJ+z6A+l/j4Jbo5offwLnUb97wU4Psl87Cc7h
/KEv7Ppf2e+f5t9Pv3bmstC+Ej/5cFtE/V8A70aPA+FC7D14WWh/Ob+/2Fj2
S0P9/KJ6vjNsWehf6b+Gwy7fye+JRtr9orfRcBXjFcOunko8lsBO7zLeeLiE
fvdWe5+sbxLcJ6r7lSnenjHdv97p54M9p/n1k19nmr2kPlb4+6MaT5V+vlHV
72LYxYPk+6Ww07vkmyicy/4wCbv+Uc6Da2Hf7zfBTm9yvnef+Vfy22p/PaL9
QyvcTr5YY3qTeFgLu/wq9f0pb9+o7p82eL1gr2fhIvT3IjyI74+v2PpF71vM
nhLvHV4/Ue23t3t7El/vmN5l/u95f0Z1v/y+6V3q27/gfPz9Mdwd0Xz2b9Oj
7F+/tPGlnzoIt0T1vP17W59sb7OWK++OaH94OFwa0fpy1PLQnxIfxy4P/S36
6QW7+i39xklwZ0TtccrycP7iz9OWh/aX+trfvy+i+T8f3hRR/Rf490e1/x24
PLSX5NPBcB778V/Brj+TfmqojSf2HQbXRzSehtv6pN6OtPnI/mY07OJP8mEx
3Id6UAIfRG/j/fWo5p9b7XmJl0neHlF+Pwm7+izfd+7w/uB90+As3jcTnsz7
KmAXD/K+Sj9eROe3yK+X/cVS2Old9qsRuIz9XNK/P6bnKbXmT4mvRrO39JP3
eb2QH1b59eCPVj+/qO6/1tj7xL9t/nnyzVM2f+kn/mLPi16e9dfJly/Ydfke
+rLpR87Dtvj1RLQ/fwPOJd9vhwsjGt+dcHdU+7OdsIt3OS953+svovniA/OP
xNvHZg/pVz4zf0l9+MLsJ/Xva5u/6Os787/o9RDcSn3rWc3zEd2/ZcPO/2Kf
n8BOb/L7u+NhF8+Sr06EXX6U84m+sNOr1KdTYadH6W/PhMvpd86Gu9gvnQvX
o8dC2OVz0c8guJJ+pQh2+UDOdy+1+Ut+uBxuoT5eXR36U/xzDVxI/rrWXyef
j4VdfpR6dIO3F/F1s7Hot9TPh/OzibDrD+T84fdmD8l3t8Ml9J93wS7/yXnM
DG8v8vFss5/8e4+fP/lnoa1Hxl/i58/5RzU8gnwbh6vQZwrOjWq/0WD2lP33
CtjpT+L3fr8+zhP+ZP4S+z/ir5PvH/d6imj9fhJ2+pT+8s9wFnre6NcT0/y7
yc+f8+LNZm+Jz1f9/COqv9fs/RJP2/z7Y7qff8uvj3zzrtlffy9g9hF77TE9
ib0+9OPRD+6zeJD82W32kn5vv38f9ewb04/Uxx/gg/Q7PdjHZkd0vkfAlfS/
R0dCf4p/jzMWfZ9gLPutk+ES7NsvEs5P+oe8SGhv6d/6w60Rje+fR8L1Sn99
Huzyg8TDQP9+9HAR7PoBOf/5FdxJP3QZ7PKJfA+4IhLaX+rncH8//hjl58f6
Rtv8ZH3FcFFE88eNsKvPsv8a7++n37oVdvqUeJsEt0T0fH+KXy/+u8Oui96m
wU5/0v/PhMsiet5X4Zl+o9Lbg/OwRbDTl3wPXAo7/Yu/I3AX/UnC3if5rNbs
L/1Yo9lP6vtKOIhov7vK/C379YfMfhJ/j/r7o3o+12bjSX1cBx9E/+u9/6La
Pz4D51Gfnzd/ib1fsvdLfvmbtx+/h3r9P/S3zfsvqv3k294e5KMdcJzzhl2w
P2/f6/Uf0fzZZfOXerjP9Cn+/Bx2+V/2z1+Z/aX/+cbPl/OBH70+2P/3IC+3
EQ9HwE4/sn89Bm6lPh4XDe0j//bmX9efSj3rEw3tKedJ/eAczpNPt/fr/48E
LuP86ef2Prn/fNjVP7n/F/793H8R3Mn9l8BV1NfL7H1y/xV+PP4dwb8trHeU
rVfsMxrOxj7F8GTseaPZT/+eAy6l3tzq18v3yUlwOfv9KX599Ad3REP/ih6m
2fpEPzNhNy+pJ3OioX9Fb5V+vRHV5yLY6Uj6wyo/Hv1CxNuB8+gEvJ79aRou
8edHNr78fmelf39U/17rAbgopvH4kM1P6tGjtl7pnx43P0i8rzP9SL1db/OT
/LrR+4vfCz1vepB8/JK3V0T3n6+afqSfex3uQ/+zzfwj9ewt7z/iZIf3V0T9
vcvWJ/7b4/1FPH8IB8T/PriDfrDb7Ce/X9hv6xX7fmP6k/z1A1xJv/FffDd2
dU/200fAZfQnR8P5Ee0PjoUPRvQ87YRY6E/ZX50Mt1DvTomF/pB4yvPXOZ/t
Dzt9yfrz/XjosQDuoB8c6N/HecVguA/5+GK/nqh+LxgKZ1Evh8Ft7Neuhruq
tT8b6a9z/ncdvJ56NRYOqG8lsKsn0s+M8/fTL5fChZwHTYyF9pd+6few05P4
53azn/ze4C5br9T/Gd7+7B9mw6Xoc57ZV/q9heYvyUdLvL+w93Lzv5z/xfz6
iOeUt29E47Pe/CPza4Y76b/ut/Flv/agrVf64Yf9/RH9PdNjcD394BM2H8lP
T9v75Dxkg9dDtfZvz8GuP5d6/iKcjX9fMT2IXrf668Rrh7cf9Wi7+VvyZ6ef
H9+H3/PxwXn2+/Duao2nD0wfYo+PYVefJJ985v2Nnr6w9Us9OGD6kX7zO6/P
iPb/h/z9UfXXf/G7S5f/5TyyZzxcr3yPOQLuw343G3Z6ku8rR8Ol7L9z7HlJ
d8fa8xm9fZYbD+2XyT8nnPAf450IO/3KeCf792veqfwpXKLnd6tPMRZ//Qzu
Uv3sOy0e2juz/uPPgLPIb/3joT0y4XvjWWYP0UM+HOh5R8s5nvl9QIGfb7V8
T+o6356X/D7Q7JX5Pld4obcH5/GDbX2ZfmrmL709IvI9svFivx7OFy6BJ1MP
LzV7ZuL/8MCuy3nPMLsu57lX2vwk/q+GXV+d8X9yhN2fsc9T15j9Mv1O5yiz
b2b4b6+F24nfMfa8nM+MhTdxfnY93Eo+uMGel/i5Ec7X+W652cYT/Yw3+4s/
S/39Gg+DJvj16H7thomw64fl95CT4N30L5O9//X3Gc9M8frQ7wm7p8Kuvkq+
vhN2OpZ6d5f3l/YDV0+DXX2Q74t3e//q975lMy0epP+bBR/kPGqO15P+HrJ7
LtzB94JKmHoyaIHdL/3lIrOHfK+9F+7W/U59lZ8/vz9Z5vWgv3/dWQ136vfI
76PmT/FvwtYr+azG+1P1eGvaj6f2WlDn7cffSzWYfSV+muBifg+6wtsvJvo4
ssXmlynnZz9g8ZOJ9xGr4Z769xe//xM8RL/XL2v1+tPf+z36iNcT+lrj55fQ
fPEYvDUu+6+frIXH6d9rnP8k7P/e7il4M79n/7OfP3+f+Bd4dVLOcx//q19/
UurVG8/Avfn74efgUfw9/gven/r3+oWb4Yn8PffL3t4p/b1BOxxPyfPxv8Fr
0vr7gK1wQa2O/7rPF3U6fof3R73M/7i/e/s06Hn0P+DmRtHrtW/7/NCk638H
zlkp+/HoDnjjSu1n3/P2vE+/n+zy8Xy/2v99uPEBzZ97vV5XaT/2L/iFVbI/
v6bL3/9g8P82BV+b
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 
            Rational[1, 3], 1], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
2ftQr+8hu/qCfl9CzoxLPowh58YlXseT62PSfyeRS1nvppi+iKcZKl9M+mtE
9Y2Kfr7Jg/O6GrKLN/TPefp++nsh2YvL/LeIfCAm82idclTyfSm5C/23jOzq
N+adFcoxmd9XkZtiUv/XqD/icp77tuoXE3kbzP6Q9321X1Tk/cjiEfu1T8y+
+HcbeWVc6scOjW/W+91mb9i3yZ5H/Pxg8gTlPftnje+Y5NN+0w/zzx+mP+Ih
bYqwixecHx1J9mNS746dEtoX9egEcjHt1YrcSP+eTm6OSv6fSXbxgP1B1pRQ
H8wHHciunyAeLzBGPe80JdQX+Xapvp/17Qqyi0/46+opob+wvkdey3pyvd4f
k/14X3JDVPZ3A8hZrPeDVP+o9Odb9HqU+xN7HvYfavaD/e8klzIfR5Kb4jJv
3E92+YF6M1r9EZf8KlX9Y/K9psz0x/exyapfVOrBdHse8+AsXZ/1Lm72xTxQ
rfpw3p1r9oE/H9Pno7K/esLej3h6mlwSE32eI7v8hj4vkGtZL5bb/ZinVirH
ZT59nezqNer9W6Yv6vd6cjrnjw36fvrnQ5Mf+bGZnOHL+f5WsheT/e52vR6X
efpLWx/2+Zrs/I94+568Mir1ulmZ/t6n9o3K99CD+v6Y9Jc/yZVxmVdbTCXH
pN8eQ3b5hv3J8WQX//j+lUF29RL17lRyYVTq8xlTQ/tiHj2LnM58OHdq6A/M
4+eT0+i/juSmqBeY5/Ec8tqYzA9dTV7U7266Pt/XfWqoL953HdnFP+Tro/JH
Rb7+yjGRL9/0RXzdbPLjvPA2cn5Mzj/umBraH/b7t9kP8XoX2eUX5oNRph/m
wxJdLybndQ+RXX2DfyeYvXC+PYncGJXzo6nknJjMdzPI5awPEXsf4i9h/kF+
1qg8rHfz7H7McwvN/sj3RWZf5EedXUf9Wmr2Qf9YRq6Lyvy2wvRFPV6l90fF
X2vIWez3b5Ozo2LfBrLLb8T7Rl0/Kv34I7M/8udjsx/s8ZnFD+a/HXY/zoN2
mT1xPt9E9qJS//aQXX3F+dZesxfmvf0qb0zi93eTD/If1ucp/xEV4XX4M70i
fB79piW5Pirn1ydXhPbH/vo0sh8R+7epCO2Penc22dUP7LfbkfPYj7NtPdSH
juRy9rfOKl9E9seX2/M4b7iS7Pof7HUteS7r63Xkyqj4O4+cw/pxI9nFM+bX
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
u3zGfu00ssd634bs6jX2+2eTsznvtSO7eof8ydbn2b86zgr1RTx2tvfB3l3J
en7fjVzE/VJ3sp7v9DT9MH/1Ibv5Bb8n6mfPI97yTT6sV0DOYD4W2vNYb4he
r5J5d6jZD/qNILv4xn5lpF7n/vV+ci73v6PNHqiv41Rf7hfLZoX+RT6Vmz8Q
v9PIJaz3M80/qDcxkwfxkjT9cB48W+XjPD6f7OId53uP6/3cjy0mu/kQ80Od
vR/1YqldRz4sI7v5Av19hfo7IvunVeRS2usNtQ/nx7c1HiPy/fFdcjrjfYOt
j3xvJNdz3t5s9kB+bTV/Qv7tuj73y19ofFRJf/va1oe/vzN/oJ79pPHO/esv
Zl/MUwfIzVVy3n7I5MX2Nq1KuJzz4VHkSn6vOJacyfw4kbyT+dhKr0dk3jiN
nE57nGn3w59nk3PYX9uTtf5n23qI/45VoT8w/3Ymb6mSetrVGPvxK8luHsQ8
1Z2cFxH79iSnMZ/6qHxV0m/7kV18YH+TTy6KSD0sILt8Qz8oNPkRb0NMHtSf
ocrMlxFqb84TI8kuPvB95z6zH9432uSTv28ze+B9ZXYd7ysnz6V8FeZPxNNM
stsfYL8aJWdR3yS5hOcps8l1nDfnkddWyTz5uPkX9WGR2Qf+qFN7cv+1VOWp
Ev/Wm3yoNyvMfpgnXiUfqJJ4eUPtw/OitzSeIvI9dL3Jh/OwDcoRmc8/JNdz
/thMdvmC/N5CdvsPzGef63We539h/kK9+Iq8kvuX7/T9nFd+1PexP/xs+qL/
/abxVSXx9YflE+L1sMUD+tuRPDdz8YT9W3ok1B/2OSES+h+/vzs5EuqLenUq
2fU3nE+0iYT2Qn86y57HfNuOnM/vZ+eTD7CeXkTO5jyTQ3b1BvHThdzEeVjP
/dJ5vntNJLQ/6kMPsvbH3uQs1t++ZBfnqF8DyHk8Dxuk8vD3BLdEQvsjv25X
+zF+i8iuDsKew81eOH+4W9/Pencv2cUv5r0HVH6ex4w1/VGPJ5Ab+e8jZn/U
n6nqP64/w+TF+hGyz/V9sos3xGfK/Id541F7P/bfj6m92B+fIBeznj5t8QP7
P6v6MT9eIHs833jJ9MN8+Yr5H/G8mpzJ+rtW9a+S8+J1dj/y8z3TD/H3vvqf
+bTJ5MF+/hPVl/XmM41H1ocd5l/Ya5cx7PUNuYTz0h6NR37PaVb9ojLv7bN4
RD87aPGL/vin2Q/zToto6D/IezTZxQ/m3+PImTzfOons6jfi+5RoqA/2W6eT
c2nftvY+zA9Zdj/mt/ZkV0+Q3xeQazlfX0x28xHyobOuz3i4nOzyH+c/V+r6
nIeuJbt4x/eA61Rf9s8+Jg/80Z/sMX/zTX/oV2Dro37cqvJHZP81hFzJ+jWU
3FQl+TbC5MH5/khycZX47z6yyxfE22iyi1/M/+NUXn5fLdP7q8Qe5WQ3B8jf
T9p1fA+cSc7heVNU74/KfJIgu3xEPZut60dkHptHrud53ULTF/PuIn1fRPbr
S8il3N89Z/bA+Vy9MfrjcrU368VKss/z3dctPtCf3zT7w97vWDygvvxH44fz
0AfkbO4fNln8Y5781Owv57d6P89Hd5i8OE/YTXb9DfWzyeyJfrjHnoc/95Jd
PmP//Kvam/v1gyaP/D2b6k//t4hRf+bD0bHQP9i/Hk92+YL6dFIs9Bf+bR0L
/YV+lklu5PegtuQDPE8+h7yW804HY9x/QSzUD/d3svVx/6XkTJ5XXU4u5v1X
kXMoz7X6Pt5/nb0P/+SRXf5C3/7kPJ6P5JObaJ8CcmmV2PNWsuvH8vcc5BLO
i0PJmn8jyLmsRyPJhZwP7jP7IR5Gk33GzzjTB/1koj7P/Uu52pPzVAXZ5S/m
w0pyEfd/UXIW62lC16uS/WmNylPF8yOym1fw+52FZBev+HutJ42Rj0vUvtxv
P6f243nzC8bI9+VqT/bblWp/fj9abf5GPXmTnM7vs++ovlHZf76n9q+See4D
8y/mn016P/d7n6g8jO9tZI/nazss/uG/XWpP7te+0fuZ/3vMf5gHmy1+8PuF
fWof1qODpg/q158mL+rd33hOnMPzqqPJubTXcfFQH8wHJ5L1PO2UeOg/7K9O
j4f6oL6fqfczn7LImawf7cmuv0D/bHI5v4d3JNexP3U2eRBfXU0e1ONu5Fp+
L+uu8rFf9iTr7yl7k9M4n/WLh/aGPjeZPNBnkNqH+hSS13J/PtiuY14uiof2
Rj0frvpyXrrb9Id/7jV58XuDB8ja/8eSXfxh/zDB9Ed8TrL1Me9NNX1Qj2aY
/eXvc8npPP+Lk13/QD6nTH/k51yzL+RbQHbxh/nrCbKLP+zXntL3V8k8/AzZ
1WP8nul5sk/7vWj6oT69bPbFecgqsps3ML+tMfnQz98ml3A//q49j3jdSG7k
fqVR38d5ebPdj/q5ReOZ8bfd4gXz1Bfkucynr8iVnEe/M/lQT37UfGM8/Wzy
oB/sN/kxb/5h+Yn5/7DGU1T89Tdf2Pkf55FHkj3+/uVocnYVf29LruT3wOP8
0F/oNy3JW6RfvHeissTbjxl+KG9Qf045xa5jvVPJRdxfn05eKfWv/AxymtSb
xWfq++ivv9v6gXn3nE3OFf1PPtf0Q31rT54bRb+49TxyIeMhW1nOx2ovJJey
nnVU+8j3pKZO5Hx+j+ps6wXf53Iu80N/Ip+6qr4yT427wuwZfI+c141cz+/D
V9n66IfXmLxB/h/l6Xo87+lp9sJ5bi/yTp4f9CZniv+TeeR0sc+KvuafYN7Z
0t/sGSz/+wBl7o8Hkl09wvnMINMP9fBmez/qwS0af8yfWy0eA3k33E4+IN93
fhxi9oA/i8w/QT50Gab6xrCfuWW4vQ+/hxxh/kB9KFZ/yTz9+kjzX3AesHOU
xRfq9f0WX+h3D5Cb5Pc4vUdbvOL74kMmXzCuzxqn/uX8N97iD+dRE81/wfjc
/LDZC/lZTi6hvlPUn5wvK8gZ/F473eITfy5UafLL3xupfPL7188jal/5Hnko
Zu+HfxPkWv6eqdr0CeJxaI3ZI7DXlDnmL+wHHiXn8PvFfLLPv5d77P/GxzG1
Gk/y++vzn9R4kt/35C02/wTz5N1PW7zB3nXqjxj6+XPPajzI9/UNSzWf5Hxw
z/OaDzHsv05YZvYI5rFOL6k8PC9ZofHPv1d7hdzal/niVXKd/P8KXnhN14uj
X334OjkvLvPKGnIZ/x7/LZUnIfVjnT7Pv4der/Lw/+fRQF6ewPP+f8iH5Pn6
jeTVSVn/A82Xalm/kbyxGvKf9F9yKiXn0R8bB/E64FPy8BrRfyu542zsx2Pb
9P1zZJ7dTu41V76f7CAPflTs/4XG96NSP3drPM+XeexrcsUC7M/7Nqn/H/P+
F4joUFs=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
            Rational[1, 3]], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH18V+P/x/dNGJJJmIRRMSQLsdzkFCqVrG/5GspvJZmkRqp1a7XS6nN3
Pp+tmiSjaOjBokhKQzLfpOmbLOnXKAyh3CS3/a7zer/e5/34fftnj+fjnHNd
7+t9f13nfDp72Jh/3t0sLS3t6iPT0oK/m5684ZWfej3kpQX/ohXervZHTZ83
gNxQ4e1ftrHvFXeQH6rwml04+5Qdw8lehdf6hV6fTRpN7l3hndc5fXnbYvLS
cq/ryrrxb0wnf1ru9btiTveCCDlvnnfnmhtbNJtH3lbuPXDNsR8vWUxOr/BK
a//95A3V5P3l3o4Pfh24ZwW5psLbN2D1mbNeJ5dVeD0Kvqg/5x27f9Cepx/b
8AG5utx77sDWm4Y12PW1D5VnNv/c5G0VTPgtuaTcK0x+N+XaX8jNy73JwYL/
JheXex+es/O3aenjhPPLZf2tyNdXeFOv7XLnmtPJWeXef24alpHfgby33Dt/
cOKtXzrp8xXewyOdRLnjwvE/Kv763M49yPXlXqD+D/qOC/X1TlbNg4W3kCvK
vdMvdhb8H3Im9VlITiv3HBVd8yA5vdwL1LVzMrl1uff7NCfALJPXaedfLRM2
vpMmfXkluaxc7POU3X/G7cOv2v08uaHce+Wnv7YVr1J9lHstAgdaT65Oec88
tiGrpo5cWe4F6rpxK9lPyXg7TX6M9wV5ZrmXF1swutUP5EWU75CNB/majRcu
4HqPGx/ej/WeTG5f4QXqOfYs8vCU6C+b7PyhvzNf10vIfrn31R/PHth6FXlb
Suxxw/hQv0+58PqrP7k25V21++bYgnxyYco7zan3omHk/JR3MNs5xH3kUfSX
ceSKlOdGT343jVyT9ILll5aRW5R7gftkpsaH9omMchI+Ru6YEn9+mvxpyusZ
KPSF8aH92jl3HrmaPDjlXR8M8Ca5KemdHQiwidyYknj7iLw05Z0169sBq/+X
nEN7NpG9lOj/gK4n6QXqLfqDfFlK8sGRE4Q3pCQeWpL3pbyqNs7BM8mLUt6b
zryvnE3OSXmfTXIBeiH56pTkq8smhPbA+rqRM7m+XmTnj9Uu3c0ZQF6d8t4b
/8YTbe4gr0yJfw0nt0+JP4xWeZPemCCBTCA3JMV+08llKe9n575fzyVvS3r5
QYKsmBCuH/loMfnTpOTjZeQ86nuFyYP4WUP+MyXxvWFCqF/Is5kcTYk8H5t8
QTr+olHXm/QWueEe/EbHS4p+fiLvT4p+/iK3SEk8H10cPo94ySDXJ8W/25Az
UpIP25GXJr0ObnnXXVQc6mPz++7f5cWhfYJ0ertHrkxK/r+R7OLHPR0ZNZBc
53uBe/02mFzC+BhBHpX0AndsUUQuSol+J5K9pBe475ml5MuS3kUvPf7Dsih5
Ctczn9w6Kf73BLkgKfH1LDkv6WUEBn6JPDzp/enSxU1ryf2S3lKXbj5+x667
apA9eAu5Be3TQD6UFP/9nLw86aF+f0t2/of8+IvJi/zzN3kt9ZE+Udj518TA
oVuRsxnfp5Mbk2LfDuTqpOSvTuTcpNS73InhfKif3clZSe9v5+7n9iU3+RI/
g8g11OedZOc/Ab50D/mhpPQfD0wM9YH8Msmeh7/PJJclpd+IkZvTHgvIGUnp
B6pMPtSH52w9gbk3vkx28YN8so5cQntuJF+flPxWb/Ig3naQZya9xW64vnvI
OfTvfap/X/zhIPlnPn9Y2Zfnj5lEe/jyfCvyXl/mb0uu8OX5DuQSX+S/mLzI
F/lzJ4XjY/09yM7/UX/6kpdTf7dMCu1b6dyn9k5yni/6L1ROSnw/QC7zxX6T
yRm+F6TLlTPtefQ3cZMf9WqBXYf/PEmO+pJfniP3873AnFkrye2T3sJH3b91
ZJcP4L/vkut9720XXol68jZf8sEn5Cpf+sk9ul5f6tF35PSk9LsHyYN8ib/D
5KW+5KNjJgvnM35bKfve91OcgtpODvWB+O9ArvS9oN25+WJyGv0td3Io77su
/XbvQc72Rd99yTUJ79Lg3y3kHF/y153k5dRX4eTQPsh/D5Bb+NLvTSY7/0S+
mDk5tAfqQWxyuH7U7wXkmb6st0o5Ket9zvSBfull8iL65zryKN8L0tvajboe
+ke9ybfFpf+nd9h6UJ/3kHNp3316f1L+HiT39qXfO0x2+Rv1OH1KqF/Um1bk
Al/67dPJLn8hHjpMCdcLf+5Edv6L/iSX/Kcv/tidXORLf9mX7PwL/jSI7Pzj
n879vh1CHuxLPbiH7PJToN76oinheuAPk8jNfa93oNBScpov9Sw2JdQX9DOf
fMiXv1XkvbTns2Rnf6fdi3e9RG7NfLWW3NGXfPuO3R+Ey4VbyO1975Az12MN
5La+1JvPySW0x7e2HvjPz8aBOgb8Tc7hfEdPFR7O+U4kO/9HfWpDdvkf/VR7
chbXdxH5aq7v8qmhfZBPPXJ9Qur7jeQC6nOgXQ/al8hgGy9wl1/vJmf6st8d
Q44yfxdPDfUXuFOXGVPD9aF+Rsj59Jd55Ot96c8Wk1f60k8vI2cwnlYYS384
NbQH9gcbpob6DbaL0zer/nyJh+02P/TfODW0P/LN1+R06uMncnHC6xMk3D/J
DQmvZZCAjpxG/SW9U4MG7gRyNCnxnkl2/Q/y0znkh3zpNy8ku/yM/c9lZJeP
xwUJqxs5k/WnF7mR8g0g57L/uZ3s+i/E213kJubf+8muXiO+x9t16K+E7PIh
+q055MH0pxTZ9VOIz0XkUcxfT5Odf8K+L5JdfpP9F7k+LvnnTZXH9yYEE2ya
FuoX+6Nt5JK41KNd5N4J6fe/mhbaB/3TfnJtQtbzO9nFD9ZzxMPh89g/tSC7
eov9zikPh/cH7drjZ5FXJ6T/zianJySfXkIuSIh9riK3Z/6+weZDPuxPdvGF
+ngrOS0h/cRQvR6XeB9J9hOy/rF2Hf42lVySkHh4hFyW8H7c6hTkk+sSUr8f
JeezX3qKXBuX/L784dAeiJ9VJh/s/wY5Lyb9UZ2tD/XgQ7KLp/uDgvgJuTnz
615yW/ZD36m8cTnf+VXHY31MKxE+xPmbkxvikp+OIefFRX8t9f44+xPy/rj0
/6eSm+JS79qWhOtDvGSRXb2F/juQq+Oyn7uAXBOX9XWy+eEvl+r1hOTbXHJW
XM7Dri4J7SP7iZLQPtBPT3J+XPJtH5Mf/eHN5NVxiedBNh/8M5+cnZB4HGLX
ke+GkQsT0u+MMH2gn7qP3JH5sYhcy/7ooZLQPrh/InkU759Gbs/99QzycuaH
2brepMgfJRcnRX6fPIj77XnkbfSfhWSXH6GfxeRM7s+WmDzQfzW5iv3scrLr
X2CvFaov7hdesfUjv68ht6A/rCcPZ7+0gVyUkPpSRy6gv202f0V+2Wr6x35/
u+qX9XYn2eU79LuNur6Y1MO9qq+E5PuvTX70C9/b8+infiTXxyT//Ur24lKP
/jT/Qj5Im075E16w3NFHTg/lxX7jWLLLF6hvLcnFcS9Ih8NP0ufjkv8z7X7s
f9uSK+OSv8+2+7Gf70DOj4n9LyA3xcSeF5M1/i4l1zFf5pLT45KfriGvjsn5
dnfy/pjU8542HvbrfXX+uPTzN9v90N8gvT8m5wO3kTPisr8cQnb5YETwb5it
H/uxe0we5Ov7VN6Y1PsiXU9M4uEhcmNM/HWijheT+juNXMZ8N8PkgT/NJrt6
gfoaJedyfb6Nj/O6eTY+6udCcgPtvdjsjf5vCTkzLv1otc7P/LNc/Scu9lth
86PfWWXzoX9fo/qJS/5fb/bFee7bZi/IW2fyQN7N5l+Q90OdLyH7te02Pv7u
JHsxyR+7bT3I93vJadRvEzk7Lv7zHbkq5gXpPftHXX9M4umgXo9L//OH2Rf+
kDYjXB/Oj5qTC2KS744hu/qDfHQ82dUT6KvVjFCfsO+pdj/i//QZ4XqwP8gi
F8WlP+hA9uPij+eTXX5APu9EbmS8XaLzxSS/XUFuiIm9ribv5/yeXo9LPrmB
XByT/XgfcklM9nf99Xpc1j/QrqM+36r6inJ/Qj5E/Q+19UL/d5NdPkE8jlT5
otJvjCH3Zr4ZS3bxg/gqJjv/xfuaKWSXT/F+bDp5dVTywSNkZx/0g3PteeS7
hMmPfqDc7ke/W2nrgT0fV33HZX/1JDmN/vSMzY/1PK/3cz0vkrOZL1aa/Oin
Vpu+0Z+uU3ljku/fIlfHJH9vJLv+F/V7k66H9tmi8zE+tpk+cb6/g+zsg/3u
LrKLP/TTn5Ndvod+vlT90N++NX0hX+8nN0TF3j+bPHgf+hvZ5WvUl7/ILr+j
X21WSn2z3h5dGs6P/clx5MaovP/KKA3HR747mZzH/HyaMvvRM8npjIdz7Dr6
8fNKQ33Dfh1LQ30E6nkix+RB/9CFXMb83ZXs/BnjdSPnc7zrTF7I14vs4hXy
9SO7eIR8eTYf/OuW0tB+OC+8XeePyfnHnXY/9HcXuTf99Z7S0F7oD0Ypx6Q/
LCK7fgXndeNUvqjYd5KOF5Pz7Wm2HpwflZKruT+cretn/YuavPC/JDmX8TnP
7IN8t9DkQz+32BjxvsTsh/ioJtczfy3X8WNSP1aof0Wlf1tFzolKPl5DTuP+
Z73ZA/Z6W+WLin7rzH7w9/dNv6jHH6o9IhI/H5ErmS8/UX3FpP/bbfbDedAe
lScm5/NNth7kv312P863Dpg+0e8dtOvw39/J2Yyvw+avkP+ImWTaM31muH7U
mxZkF384vz6R7PwB++tTyIXUf5uZob2R784iO3/Afrudjkf/zp4Z2hf5oSO5
lvmms47H/fHlNh/OG64kO/+Bvq4lZzO/Xkd28Qx79yb7zB83kXNi0r8OsOuo
Z/8iu/4f/czt5CbWx/+ZGdoL/e1dZFcPcJ5WSK5jfbhf1xeV+R4gu/4E840n
u/4D8TGJXE9/eNjmw/pKTV7U9zKy8ze5jaz9QlKfT0g8ztfno3IetVDlicp+
7Amy83f0f0tUH1Gp59XmH9gPLjf5UH9WqL6i0h++Yv6G/esachHz4XpyDePr
bb0/KvW7zvQz36Xbr9636+hHP1R5qe/t5EO07yfmv3j/s5vs6gfWv8fWg/zR
pPqPSr7fZ/6C+nZA7ct4+cX8Dfnqd7M/+q3D5q/IL0fMCteD/WO6Mfy7xaxQ
3zh/PZFcSHucTHb2R35vMyu0N+Q5c9b/l6cduZ79b/asUD+oxx3Jrt5AP531
fvpHF3IO+7Mryfk8T+ym15lPriM30F69yOnMX/1UvqjUtwEmb9DexG6x8ZBv
bie7fhT7mzvJZczPd6m+YtLf3KP6ikr8jCK7fIN8VER2+Rr2HEd28YP90UTT
N/af08gufpE/Sslp3A/MNvkgb5ScTXl90yf69Xm2fuSXR81+sPditW9U+oOn
bHzod5naLyL7o+dtvch3Naof7mdXkl1+Rz5/jVxN/3zD9Il4eUvni0q+eFf1
F5X90ibTB9431Nv90P828mquZ4fpC+vZpf4QZ/9JdvGH85kv1b9i0l99q/rh
ed4Ppo+xwYHQz+ZfiP/fdH3c3/5l+kL/0OyRcHzUy6MeCceD/x9njPp2Atnl
d+Sr1uR0rjeT7PZvyJ9nkF1+Qz92NjmT5w3nkjN4vnoB2eVfxPPFNh/6+0t1
fNo3l1zP/Hs12eVbxHt3cm1E9NGT3Mj46mPj4Xu3mx8J7Yt8MND0g/cd+fp8
VPx5MLmO+WsouSAq+5W7bT3Q10iyHxF/H23yIp+MVX0y/09Q+bkfn6LPMx+X
kLNZH2bZ+NDnHHIO+7O4rQ/xkjL9oR9ZoPaIyn7/MbMf8lWVrQ/6XkrOo/89
a+Pj7wtqP8bbS+TCiLyvfFXljUl/+Lr6W1TOB2pVH9yfbiBXcn/4HrmB+Xsz
+RD3w1tNX/Dv7WTtx3eaP8Ceu83f0I/sVfsz3pvMXtgff0d29RfnFwdMfuTj
g2YP9Le/6/Os94fJLv+g3zliNu0d9QL3vyp9djg+4qvF7NDeOP89cXaof3w/
cjK5gf7UhlzF/cuZs0N7Iz7bzQ7tie9zzrP5kK862nzwxxxy76icp3UhO3/B
9zFd/+t6Nxsf13vY+lCPeul8Ebne157H9TxybkTyxyCdj/3gbWRXL/H8EF0v
nx9GXs3rI0xeyHcfuZHyjSHX8fpDOj/XXzw7tBf0M9XWA/1N1/VGRL+PkF3/
Av3PJaexv0qQs2i/crLLt7BvJfkQ7b+IXMP3X0/q+ug/T5PLIrJff87sCf97
gVzIevWy6Rv56lWyz/OftWr/mPh/rfkD8t07qq+I9LPv6fpjsl/5QOWNyvnm
VnIl8+nHtj7s53eqPtgvN5o/Y3++1+RFfviaXByVfP6dPY/94I+mH+Sfg2SX
z9Fv/WH+g/x12PSHfuGIMsofkfyXTk7T/SG5kecfJ5aF8qLfO7ks1A/6qzbk
1czPZ5Jdv4H6347s6hH62/PIrl/BeVdHci39NUfv536/S1moT/hLV3JRVPyh
G3k/+9ke5AKed/RSeaNiz75k1w9iv55HTuf5yyCdL+YFx3etbysL7YN+Y4jN
h3w/zOTB+90Rdj/OY0aafqHvMWSXv9CPjtXr3H8Vq314PjClLLSvfB9sz6Pf
mmX6QnzPJbt8jPcncZsf+ion5/D8cQG5kPV+kcrP8/sq9Qf2v0/beNh/PkvO
pn++YONDHy+pPFHxv1fsefQ7r+v9cfGv9WTXL+P9wgayT/+pM/9BPtxMruZ6
PzR9Yr3bbT2oZ5+Qs3S/SNb3zXv0+bjYv8nkxfcl+9S/Y/L3gMmL/eov5k/o
735Tf+P+8m/1F+5Xms0RbuB6jia7+oD1HEcuYb+VMSfUJ/JXa3IV3z+eNieU
D/3+GWTnr9gfnkMupr+eS87n+fAF5Ky4nM9erPLwfOJSsrM3zvdyydWsF1eT
a6j/7mQ9T7phTqhP9Ct9yHXMh/3nhPqCPw0kFzCf3Ton1C/y1R06HvvrAlsv
9Dvc1ov4uJfcyP3Z/bp+7t8eJOdE5bx/vM2H/myy6p/+8LDaj/5dqvIzf5aR
Xb5GPEfJtdRf0vSNejpP7R2TeraQ7PF8ZbHZC/VkifkH+s1ltl7kn+dNPpwn
1ai9mF9WkvOYj19T/4lK/V6n9qd+3lJ7UD8bbb2Il012P+rTFtMf/Os/9jzs
1WD+jPj+1OyJfuMz9be41Psv7HnU429UfvrP97Ze7I9+Mnsj//5q82G/8IfJ
j+9/0uYKZzCfNCdXsf89hlzA/Hj83HB9qN+t7Dr2a6eQq3n+0Ibs4gP7/bNs
fNS/duRa9jvZ5CzWr44qX1T8sfPccH3QdxdyZUTO77vq+BHZL3WbG64f5zs9
yK6+ov/qRXb1Gt8T9SWvZv+SZ+vBfIPIuXyfma/yR2W+IaZP9LtDVT7mhxE2
HvYrI2192L+OMXmgz7HkTObXCeR87henzA3tj3gqIefQf2fp81HJ93PUXqxf
cWP4S8oY58HzTR/I14+R03i+9wS5mOcrS1U/7B+qyfXsx5YbIx5WmH5Q31eZ
P2D/tMbGg77esPXA/95We0bk/eO7ZNfvwt83mb4Q7/Vkn/32NnIh42uHyQP5
d5m/Y7/8mT7PfvBL9W/ub74xeZHPfjD/xP71J1sf+qlD5DKet/9p82F7mxYJ
14P+8MhIKC/qyzHkIubrlpFQHvhPK3IO+9lTyFXMf6dHQn3AnmeR8yJSX9tH
Qn0g/2eTXf6F/3ckN0Sk/+1Mdv038mkXchb341fqeBHpp7qR03ke0UPlZzz1
IjdFpN72JVdHZH+TR3b9OfLhILL2o/nkXPrbELLuF4eSXT+PeBlBds/J95OR
0F54vzNa9c/xxqr+uP+dYPrGeFNMPoxXYvdDvpmmP/jTHNMv9qsx0w/WmyI7
f8d5ynwbD/G1UMeLSj/5hOkf+WGJ3Q97VNv6sP9a/l/2rVGOSL5ZRc5kP/Ga
rRf+8obpH/nyLV1/VN6HbrT7cR62iezyAfrzLbZe+PM29VfGd4PpH/3Zp2Y/
nJd8Rk7jedAX5r+It2/Mn9CvfG/6QX34UfU7V+rfr+ov9K8/yMX018PqX6xv
zaOh/Ni/pZPTqJ/jyS7e8P3dieQCnn+fTM7g+USbaLhe1KczyfXsb9uRi9jv
nKcckXx6oV2HP+aYPPCfy3R+fk+SS+4dkfPda3R+5ofu5Lq5Uh976npjYp8+
Kl9E8ld/cg3PwwaSnf+iHt2q6+X70ztMHvhvATmX70OGK0fl/OFecibr5f02
Hvq9B8weOI8Zr/PzPHGSPY+/D5u+kH9K1V4RmX+2rici80fJ+5lvfRsP/llB
9thvPEpu4HnJ4+RKxu+TNj/y6TO2Xuj/OXIt4+NFWy/q98tqP/aXr9r48Oe1
5NXMv7UmP86LN5CrGJ/v2Xjwv83GiKet5Dzu57fb+pFvPrHx5XsBux/62kOu
pr6+IhezX9qn+uP+br/pA/3ez2ZP1LPfyC5eUR//Un1FpN9pxn1sFr/nOorc
m/vPY2OhvWDfE2Kh/eHfJ+n93G+dSq6jftvGwvWgf8giF0ekf2sfC/WP+D5f
749If32RMeKhs95Pf7g8FuoP5z9XxkL7ox+6llzG9wHX2fpQP3uRNR/1i4X6
w/ry/mt9g8haz24jZ3P/NcTGQ/4aSnb1E/E2wuTF+f5IcjrtN1r1Q38ba+tH
/z+BXMn3q1PIRew3SnQ8vv+eSXZ1Au8D55BdfoW9Y2Yf9CdJci37/flk1y+g
H1to/oD6vpis7xOXkJ1/Y7++zBjx97zKH5HzuRrTD+rjSvVH+v9q0w/6x3Vq
T9bnN+1+6Psdswfyy791/rlSrz5QffH921bTD/rJj01eOb9Vf4pI/d9NruJ5
wl5dP/vZJosP1MN9pi/Y84DZE/vnX/Q6+5/f7H75PZvFE+zfjN/ZunqHeDiK
7HP/elw8fB756QS7jr+tyS5foJ5l6vWInCe1JR+if51NLub+qgO5kOdP59t4
uL+TzY/7LyGX8P7LyQW8/ypyNt+fXhsP9Yv7r1PWOIyH9sJ6+5EruT/OI++n
fgaR9bzlNnIR909D7HnUm6Fk51+w1wi9znw0ktzI78FG63wR8Yexph/4zwRy
Nd8/TjZ9wt9KyE3sp2aqfBHpD8vIWewXYmSXv5BPk6Z/7E/n6XojPD8iZ/D7
ncU2H36v9RQ5jfG4zPSPevS8js/z5hdNHsT7SlsP6q1+B+7iFvl1rd4fkXzy
ps7HfPyO+Qv2n++Zv6Kf+4Ccx/5nq+qT9Wy72Qt/d5JzYmLv3Sof7beHnMl+
/iuVh/vJfeQ69oP77Xl8v/Cz6Q/6/c3kR/76y/SPfPePRLhe7KePSoT3Q1/H
kt2+Df1BS7I/V87TTtLnub86NRHOj/x+uj2PeMpKhPbB+tuTC/m+Kptcw/6m
I7k3+8HO5BLW6y7kXObjrolQf3hf0M3Wh3rZQ+WPyH6tp8mL/qyvjYf13EzW
ejWQnM38kK/ysp8ZTK7n+U0BOYPnQcPJ+9kv3Wvzwz73k10+xfcGD5ALWP/H
mz6wf5hkDP+cZvKh3ys1eZCPZpv+5Pe5pm+c/yVsPYjnCn0+IvFZaQz5FpEb
2F8/afJjv/a0yhORfvhZex7fM71A1n7wJXIR69sr5Hyeh6whr2b/tp7s+ifU
87fNfrDvu+pffF/2vl6PSLzWk6u4X9tm9yN/Npi/wP92kXP4/cRnpi/E0xfm
f9DHN+Ra5pPvzf/hTz+aPKgHBy3+0G/+Yfej/z9s/gB7/YO/e6/meWRzP5wP
72OO8kN9yve2ZBePeL9yrB/qE/WmBblG6sV7LY0Df/s+g5wu+eekk/R5zney
H8qH+U7V+6U+lpzmh/YK8s3S08m9GY9nkLPl/cS+s8j5sv4Tz/FD+yK/tbf5
gvC97Vw/1B/8IZvcJPuZqgvIxdzvdLT5gvdJTZ380L7I751t/uD9XM6lep3x
1IVcKOcLE66w8YL3kQu7mn2wH72KXMd6eI2OL/F/pGfj4bynh8mL89zr9Xl+
f9tT7Sn2T/UmZ8n7mVV9bL6g32nop/4h+6Pf+5s95Pflpl+czwxU/fJ7z1t0
POaDW83+iJ/bzB6BvJvu0P+XQfLV90NMf7Bngek3iIfLhpl/BfuZW4fb/fge
coSuj/1LITlT+ul1I83fgvOAxlEWD8jXY8hp/F7iAbNP0A/0HGvj4f3iOLIv
5+9zJ+h1fp8xkZzB86jJGi/yvdz+qSYP4rOEzO8BLpth9kF/OVOf5/vaR8iH
ZL9TWWb+IL83IldKvH0aNf0H/v9n3NYH+yZtPuSzcpMv8Meh83Q8+V5jxgKd
j78vetTmQ/w8pvLx/P5x9Ufp546uMvsF5fy8p8j8/U7vpervcfST9z5j16Hv
ah0vjnr+/HMWH/Cv5RavyBcvqP7i2H8dv8LsFfRjnV62+dA/r1J7MJ5eVX3x
+9rXbLzgPPfF11U++T32lnXqT/z/IdarPvh7u7fU/+T3djkbyMv5/zNsVPn5
/3nUkTsm8bz/b81nSfk+4H3yWnl+ywcqX1Lmr9d8l4T8J/yHvDIp59EfaT2Q
/3+x/8d6f7msf4fqpwL78fhO1d886Wd3kaPz5f3JbnL7BaL/z8iLKiV/7iVf
XSn92JfkikexP+/TpPMt9P4PYFRHHQ==
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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

          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
bPJf5utT3XWx/0C4C707E/bCOm+fs8hfj8R37iLf3qIPeXBFSPVmCGz0SObj
Sxf5/pTzhl/B7djrSjgXfb3a7Uf8PRruRT9+A+8Laf96I7yVevY793zpZ26F
p4S0Pv43fCCk/e3v4f0hPU+bAqehB3e5++V99zr7y/tmwgPIjzluPbK/++E4
+1sIl4a0vlc5ln9r4DzsGbKfD2k+1sNFIT2PSsCDwjqPtcJrgtr/rXTPl3q+
Bj4U1HmwHa6m/qxz/pL+8Bm4O6Tz6wbrr5Dq4fNweUjj8yW4I6T1u8vGV9Cr
N3L74VZnT+lH34Q3kc9vueeJvd918Srf/+yGZ7D/PbDJd9GPXjgzpHq/z8W/
1LfP3f2SL185/4tefWv9GdJ+64h9Hvpy1GL/8zI/psPJkMZ3BpwW0vPXk2AT
j+KPUxb7/hB9HwhHWM8Z8C7Wcw6cEdL+NxfuSz3OW+yvX+wzBDb9oNhnmHu/
5PevYKM/Uq+Hw3H05Gr3fvHXKLvesOrXWHh0SOvbjfCikJdqb2pugk0+i97c
atcT0vnmdng8+vx72Atpf3PnYt9/kj/T3HXRozJ7Paz+vA9eE9L5aLZjmT/n
wya+RT8WwlUhnQeWOPvKequdfWW9QetP+vUonI++NMDT8HeL86/0Byvg7dh3
tXuezEePwUYvRO/WOvvKPNsB70XP/+rsLfH5HNxJvrzorotevAKb/JF5aQu8
NqTfN3S794v9t8MHgrqfd+AK9vMeXBii/4RNPZbzmX+750t/9QmcTn39j4vX
6akDoQNwB/n/DdwbVP98D2eHtH/o86Cy0V+pl8fAB4j/Ex70/SH17cQH/c+L
Xg2AC9hvFmziX/TzZ+669GNnwTuCet5wLmziWfT8fHgS+XwxbPoD6e8vgXuC
6t8CuAv9LYTzyfer4K1Btce1cGdQ8+s62OSD/N7tBrhvSPVgHGz0R77vGA8f
Dmo8l8AR9OsO+7ygzit/cPsVe02FM4n3u+FC9GQ6XBVU/Z/l7C/1tgIejx5X
wjlBrQ+L3XrFnkvhrJD2Z7XOf5IvYWcf6Udibn0y7zfCFUHVqyQ8KKT2XgV3
EH+PwLnU38fhKUHNtydhE4/yfeVfXHxIf/g32NRjOR/YaOMhqPPpJnhsUOP3
VXgA/nrN+Ufm4W1wZVDj+y1nT8nnnT/y527nP+lH9sL7g5rvve55Mh9/CncH
9fzic7g9qHp80D1P+ttvbTwTD0fg8qD2O0ctUd4U9FLhf3k6XEx+Zbjrcv57
kmP5/cgpcEdQ42kgbOJF5pcz4KFBzc9z4JKg/j7nvCX+ekSv8hxLPObDkaCe
pw2DTf7J72Mug/dyfThcwPURsOmXpB6NgrdyfcwS3x9yvQjui34UL/HtL9dv
cSyfnwDncH0iHOT6ZHgR6/uTe75cvwdew/UZ8Fr2X27fF1D7zIOT2G+BW4/Y
90H7/KDafxls4kP6q8CP/FcHG/0S/8ZhE3/i/ybY6JecL7fZ/YY0fh5y9pV5
/VG4jPh73NlD6tVTzv6iV3+BTT5JfHe69Ur8b3TrFb172flX+tlX7eeDOq+8
Dhs9k/PNbS7+RE/fho0+yjy/0z1f+uUeuDCo8/leuCio+vARXIGefwrvCuo8
+IWLb9Gfg7DRD+m3voNNPop+HbH5EtR+4agq5e3oXzrcFGQ+hPtSn0+Ch9Lv
nQIXB7W/Gljl21/0+Qw4l/p/DtzNvHFelb9+Oe/Kg1cRr/mWiadh8Ebi5TI4
m3gYDk+j3x/hPi/nHaPgSuaTMe66zOtFsIlP8VcxbPQ8dXw34Ba4KqD9xgR4
AHo/ETb1QL7fnQwb/ZDzmKnwDux9D5wZ1H50uvOHzF/lcF6Q81F4NPVwAWzi
Q/qtxZZDmt/LYFNf5PuTWngQ9qqDR4Y0P2JwkvhvgtcS30lrv6D2vw+59cr8
+Yjzv8Tn4269Yo8n4VLi7xnY9jt/c/aW+HoeNvou3y9sgsuJny74AHr4GtzB
ft+ErV68BW+inr3r9qfzovO/zG97rH9C6v9e2PT/8vuSfdY/9AOfw1nMq1/B
1UHt775x9pJ8+cHFs8wrfZYqT2M/x8Im/2Q/J8Bbqa+ZS/31iX4NWOrvR+L5
p3AV/f7PYFMfZD48Gzb6Kv45194f1P77fNjoh5zPXgx3kd+XwCZe5HyvYKlv
X6kXhbDp58X+V8Hl9NvXLPXtIf3KdY5FD6+H24mncUt9e4qe3bzU95fo1W3w
UPrrUvs+7DsJtvXvj0t9+0u/ehds9Enmtz/Dph7Jef9MuIL+bC5s4lXi4X53
v8T3Qjg3qPpZ5ewh+VztWOwXcv6Qehp18SD1LAFnUI9a4NHUk5WwqYfSb66G
O9Cfx+x6OE9aC5eiLx3u86LHf3X+lvr9rPOv2OdFuAj7bHb+k3zZAnvUpzfc
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
ND7nO39Iv7cQ3lirerQEtv3Lcrsfzv8Cbr2SzxE4j/yMw6Yey/qa7Hror9vs
/pjXHoJ7OX96xD1ffs/0OJxWq/Z7Es6gvj0Dm/5dzkM2OJb+7XkXj1LPX4K9
WvXvKz+K163wFObtbne/1KPtsNE70c8dzr4Sf+/B2fRT77v9Sz594OJH7PGx
ix/Rk8/s+smPL2z+1Wo9OOjsJ/3md9Y+nL8ccc8Xf/1X0F+fnEf2Dfr3y/cx
x8AmXvX3tu5++X7leHg983cGbHRF5K4fnKnx9lmmvb9W9Ofkk4O+P+R9p8BF
zNenBX37p/6p/KnlWtGbVafDpr6Jv34G92j87Dsz6Nsjtf+TzoYL+f4hBzb6
kErfW86FS4mHXHiNno8lz4fL0LM82ORf6vuk3oucPUTfh9j96fdz+ZfAI+ln
hrn3pfqpWb906019H5m4zD1f5tHL4Y3Uwyvc/an8P9qzfRDnPSPc++Q8dyRs
8kny/1rn35T/w6Pd81P2efo6OK79zg7bpwR1Pvr2esf69+VwLucz42D7fchN
8FD04GY4m3nzFjhD17vltv+/3s8mwE36/exJpTa+NB+GToSZZ26eBG8P6u8h
J7v3iT5Mgbt1Xn92Klyl5wE90xyLXt8Db+X8+F54ks5b106H9/L94n3OHql2
fdksGz/0i7Nhj/OoufBh/f54/zy7Pr4vqLR9Ivt9wL1f+stFsOlv5PvaB22+
aH8Sr4Lz6EeWwZ2ab7uqbf7qfHO41tqL39OF4AP8nqnOxXcqHu+IWv3Q38c+
EHP7kXmgwcYz5wWN8C5+39YMj9XfYx+btPETlv73vBVwlv7eerTt++kn//iw
3b9+37FsDXxIf+/32KPwDP197ZZ2eJD+HmTf4zZe9Pe8P1ln403/3uyip2w8
8Pu+p21+8fdqf7HvC2t/8Vc4on9P+cTfrN5EpF698az1X0T7leetffl7/Bft
evXv9fM32XiPab3bDJfw/5/pstcb5PPBv1v/JfT3AVutvRv0/a/b/TXq+7ut
P5tl/Sf+A57SqufR/7Txr///xevfhsNtuv934JkrZB6v3QnPWan97HvW/w/p
9ye7rV6tVvu/D7/7sOrnXuv/R7Uf+zf8u8dkPr+uFz7/f7z/AxwTW4o=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
mwQfK1X9vgKOL9V5vi88okT9fy08uUT9eQM8qFTz7yb4eIn6J8Ner0T16XY4
WKLn23fCm0u0ng+Dc8M6r4+C80u1n78H7ipR+2XC/Uv1fOB+eH+JzpeT4M4S
b2r0vylufzKPPQwXlqhe/wUuLtF6nwNnlmg+zIaHlmq8zlsY85/U3wVwWonq
3SK4pUTjaZm1Z6nW1yJ4IvsrhvPCel4XgtNLtH6WwVlh9XcEzinR/q/O7Uf6
0WY4u0TzvcXGT1j9txFuDWu/swn2wtq/b3HxI/r/suVSPc99za63RNfbBm8P
63rfhnuV6HrftfEW1nltn7u//HvA+i+s+nEI3laien/E7Vfs22ntT/x8Cc8o
8aLynvq1tXdY8+mEXV+J9j8/2v2ENR7iFilnhvX8qDs8Oqx6d47lEtWjX8Ad
2Ksn3D+s/r3Ufh7S/L8MLg7rfJAMm/iU/qAvbPwv8fhreHtI9bwffDys+XYj
vC2s+vYbez/8NQjuEdb7e/Z+YdWTu+G4Ep3HR8ImXmS+GwMnl+j+x8PVYa3P
98FHwswncE5Y7f8QnIb9/wTHk4/TnX2l33jU3U/0Zha8NaT5lQsPCuvzmjw4
IazPxxbCXSHVg6X2fmHtB1e49YjerYHbQ9oPBGATj9LvlsKT8Wel27/MVzV2
fWGNp0Y4i/08DY8N636ehfezn1bYxIP0U5vhgrD2py+6/Yjev2r3H1L93gGf
Cmv93gkXhdQ/79jPQ5ofe+GTIT3ff9/uJ6Tz7odwSlj76X+7/Yp9PoFnhzTe
voDz0etjcF5I/X0c7hXW56Hfw6UhrS8/ud9Lv9ptsXJFSOvt2bCJd5lPzoOP
hfT5VwLcPax6d7H9fVj1+ZeLY/aXfrQPnE4+XLk4Zg/px6+B00LqvzQ4P+RF
zVPVHzbxJ/3DQLglrPp9CxzH9QbDhVzvLrg+qOsbDm8O6fpGw8msbyzcGdL4
uhduDel54QS3Pjn/eNDtR+z3RzgzpPH6MJwb0v5ghrue9Ic58JGQntc9Dpv4
Ef/Ohw+G9Hx7AZwT0vOjxdbeIe3vlsF7Q6oPRXCQ+PO59Uh+huAC9K7M3V/6
uQhs9FDyvQ5OJT+aYRPPol8tbn1SPzZaf4W0f9sEZ4RUj7fYeMNfL8Mmn8Rf
r8Ee9m2z9kffdrn9SD1+F+5F/vwLzsIeH8BJIe3/Djl/yXnQYbhHSM/nO+EZ
QdW/Lrg5qOdbX7nrSb93wvlX4vcHuCOo6z/t7CPrP6Mgtn7xZ4+C2Hql3sQX
xK4n59cXwkNDOl9fAp8Kqv17wzPQu8vh5JDO21fBY9HPVMvoQ1pBbH2iNwPg
vUGdj29295PzhlvhiqDa6w44PqT6eheciL9HwC1B1Y/fFcTsL/3rOHhyUOvZ
HyyHtJ+ZAJ8Man38X7c/6W//6PYv52nT4O1Bja9H4O5Bvd9jcCf3mwP3D2p+
zIf3s7+n4INB3d9iuDqo9b0QPhLUf1fB+UG1p8/9XvIxDBv9kvOoMhsPQZ3H
quz6A9r/1cEmH6SeN8PbgjoPtjj7Sf3Z6Pwj/eELsIlvmV+3WHsGVA9fhtuD
Gp+vwdlBrd9t8OagFzZy++kuGy9B7UffhYux9z63P7H3B9Y/QX3+c8j6P6j7
P+zuL/rRCaeHVO+73H6kvn0FB4OaL986+4le/QDnBbXfOg2PRl/OWKK8N6Dz
Yw/4JPEdD8cH9fz1QvgY/rgYNvkg+t4bzmI9fZbE7CHruQo28Sb9byps+gup
x2lLYvYU+wyAJ2Kfgfb7Qc3vW2ETX1KvB8OtQdWTu+z9Auqv4fDWgOrXaDiV
+jYOTgh60fZm1b1LYvYVvZkAtwV1vnnQ/h59+yM8NKj9zcOw1dMZbn+iRznO
fuLPx529ZT6aB6cFdf5csCTmf9GPxXBKUOeBZe76st4ieBvrLXb7kX49BO8K
qr6shbfj74i7vvQHtdb/2LfJ2U/mo6edPUTvNrj1yDzbavcbUD3/O5xLfL7k
7CX58ipcgF68AW8O6Ly0E84L6POGdsvYfy+czX7eh2eznw/derX/dPEl5zOf
wHFB7a++gNMDWl//Y+Mv4M2KHggdd/kk+f893B3//GTtG9D+odtSZaO3Ui/P
gtOJ//PgodS3C2Cjb6JXveBq9psIjw2ofv4KTg5qP3YFvD+g5w1Xw20B1fNr
l8bsIfl8w9LY+qW/v2lpbP3i3wzYC6j+DnLXl3y/E27FHsPgieTXSLgjoO+7
3bM0Zj/Rg/FwSkCfd2TZ+xHPE+ER6NdDcHtA55U/ORZ7TYfjAhrvM639A6on
s+CkgOr/XDgroPU2D94WUD3OhzMDWh+WuPWJPZfDowPan62GM4KaL363f+lH
Sqw/Azrvl9vr029Vu/WIvevd+iX+1jl/yr/PwAXk23POnvK88m9wWkD7w3/Y
+Aro+cA2uCWg8+l2+Lhf4/dNZw/x19uW/ToP74F3+TW+98EmXyWfD8AVfvXn
IfiIX/uRI/Axv+Z7J1zv1/n4S2cvOb/4Ct4QUD0+YeM3oP3tD3C+X+PhtI1X
v/Y7ZyxTTg140fC/rcey2Pokv+LhjICe/14ITwvo+yMXL4vZV+KpN3zSr/NL
HziT/LwKPujX93OugTf4Va/S4InEY394RkDP0wbCJv/k/Zhb4EF8PhgO+vXz
IXBCQOvRcLiN34+Ck/h8LGziQfQjEy716+f3w7n8fhLcg99PgYu4/1R3fVnf
X9z15fNH4XQ+nw03s//c/7LPk+73Yr+FcKJf7bsULg6o/VdYe/q1v1oDt/vV
fwHYxLf4t9TuD/9XuP3L+XKNs6/ETwNs8l3m9fVwq1/j7xn3udSr52ET36JX
f3Pfl/jeChdS77a5eBG9e93Gg1/72TddfMi8stvGg1/PN/e4/YuevgebfJN5
/oDzn/TLHW49Mp8fcfEl+vCZ+1z0/Eu4V0Dnwa/hLL/qzwmXT9Jv/eg+F/06
DZt8lX7hjMKYv0X/ehTG/KXzIbzXr/X5wsKYfaTfuxg2+ij9VW84k3rXBzb5
LPX/Ktjol/S318Bdfj3vSoNPEs/93fUlngbCncTLLfBQ4mEwbPRC+tkhcKFf
zzuGw/X4c1RhzB8yr4+FTf0Sf2XCph5Hj+963Q9X+7XfmGQ/96veT4HjA/p8
d6q7v5zHTIcn0x8/Crf5tR+dBY/26/yVC5t+Q89H4WY/7wfDm/3aby1x9pP8
XuH8Kc9PVrv9i70Czp6SHyXOPxL/FbDpvyS+q2Gjh9L/NsApfp0/18FZxOcz
1n9+tcdzcLpf4+8Ftx/pd/4BHyG+Xrb2COjzhe1uvxI/bfB+9PLt/9rvu9a/
7Hefs7fUsw+sff3Mi3a/fp3fDrvvi/87YVO/5P2SLjiBfuAr2NQTmVe/hY0e
S3/3vYsvyZefYaOHMq90W648G30/Gzb+l/2ctzxmP6mvCctj1xP96gWb+JF4
/iWcHNB+/1ewmc9kPrwS7sA/V8Np9N/XLo/5R85nb4BN/Et+3wQbPZHzvQy7
PurFIDiP/LzTXU/67bvhQfQrI5fH/Cd6OAY2+iXxNB7ehp7d5+whevUAbPRR
+uvJbn9i3+zlMf9IfvwZNv6WfvUR2OidzG9/deuV8/45cAH92RPuehIPT9nr
oa+L4Xr0sxA28Sj5XAQnYD8fnE0/E3L2lHpWBtt6FLH29Ws9qYNz/NpvNsGJ
AdWfp2GjD3KetMHtR9bTauMDPf67iz+p3y/CFdjnVbd/sc8OeL9P82WnjSfq
0ztwi1/j65/2+3711357P/L7IFxIv/GRiz+p9x+7/Us9/hzeRfwcdZ/LfPQN
nEm9+87tV+aFH128yPs/cSti15P86w7H+bX/PQc+Qv3/BXzMp/W754qYP2Re
uwTeht73dizz/uVwf+rfVSti9pL8SV0RW7/4Pw1OYN4dAGdg74ErYvaV8/tb
3OcyLw1265PznSFwLv3XcNjon7xPNMqtT+JtLDyZ+2XC+T7Nxyz4lE/vNwk2
9Ub63Yfgap/ub6qzr8wr0+31/Dq/PgqPxZ6z7O/9qq9znX2kPubBBeRTPlxK
/C6BC9H75fBen+rNang08eK38eDT8+AwnEf9Kbf+9On5XpWzp+hbvbO39A/N
cDb1sAWu8Gk+bHTrk/q+ya1P5qct8Gzs9RI8jfh7DTb1Wp4/vuHsJ/G+08W3
5Hu7/T799l44nfx63/lT1v8hbOYPmZc/gof6tL594q4n/v7c3U/07D82Hnw6
v34DH/dpP3USrvfpefsp2PTXMt7GrVQ+6NP+8Ey43af15RzHkh/nr4ytR+Kn
J5xIv3HJytj9xB6XwfF+9eflK2P2kPqaAp/0qf6nwluJ/zTYxKP0vwPgPOah
gXCLT+fxW+1+irWfGgzHYd8h8C7yabhdv0/r7Sg4iflmLDzWp3qYadfj03qQ
BWegv5Pc+kV/HoJTyJepsNFzfX8SNvOPPN+ZCU/jerPgHujZXNjoo1wv77+u
lw+n0i8XwK3E03LY5JPMq6vs/Xy6Xz9s6o+cp4QdS36VwUU+7Ser4BE+1Yc6
uIPzkWa7Pp/OXy12/cXq3w3wZp/qzSa41Kf9xN9ho28SLy/BJn9FL1+Fh/r1
eegO5z85D9sJd6c/f8f5R+J5r7WHT/N7v4tf6c8OOnvLeclHcJZP9eJj2Obb
59Ye9CtHXfxKffjafV/q33fwduLrR7gX8XraxZfUt+5F+Nen81sPOB/7/KIo
9n15/+7Coth+Ra8uLortR84nesMe9akPbOJb+tur4Hj6nWvgDT7V0+vc5xKP
/eF24icdPuLTfiUDNvkn57u3wz3QhzvhROrjMNjovfhnpN0/+jUGbkPPx8OF
Pq1H97n9Sn49ABcTv5PhzdgzGzZ6KucPf3brEb17BA76tN97DO7Pecycopg/
RY/nu+vJv0/BFejPYjiNeXwZ3Mr9i9z95P7FcAfxGYQLfNpvrIW7fDp/V8JJ
5G+N27/oaaO7vth/PdxCfjzr/Cn1+3nH0l/+DU6gn9sKz2Ce3ebiRc6Lt8N5
Ps3PN+Fmn8bf2y7+JJ/2wEZvZJ7fB4+gH/nAxY++L+DuL/Y67Owt9vrU7Vf6
pS54KPp5zPqPfu+4vR/17HvnX6mPP8F2vuq2SjmF84ezVsXsJf3vubCNrwvg
k+jPRbCJV5m3LoUPohdJ8ET6h2R4L/1byqqYvSW/fw13FWt/fT0cRz4MgHcR
DzfDpj+R859bV8XsK/3QHbCJN3kecJe7n9TP4e734o/RcAL5Oxb22F+m+1z0
437Y1COZvya564t+PQTHk29T7Xr8er4/HTbxK/6b6VjibRZcSv8/FzZ6LOd9
edY+9Bv5zn/695POv/I8cLnbr/h7lduf9Cc+2Pb7Ydj0o9KPlcFt9AsR5w/p
d+vgdOb1JhcPkn9Pwzmcz21w65H62OrWr+/TOXtL//ginMr56CvW3vS3r8Mj
mGfecvEm9Wo33J3422PXSz/5nvOfnt86e0v9P+TuL+cJR1y8iX52uv1JPeyC
J+PPr2DTn8j8/C3cQX/2vf2+n79ng5Pwf7fVyrY+nAUbfZL59Tw4iD5dAE9E
z3vBndSzxNWx/ch5UtLqmD0lvq5YHfOP/v9IVsf8Id//NbyZeOwHt/D9G+Fk
vn8znML1b3PXl/XcAZt6It+/Cz7J+kfAxex3NJzhU/uMhYfSn2bCu7Dn/e5+
+vcccDzz2EP2+vRjU529RY+mw2mcZ8yEPeJhFtyL8/+5zr5ST56A43hekg9n
008VwKZflP6wEDbzsPQLq5z9RU99cIVf59MQnGjPj2BTr+T9nQhs+kX5e61a
2J6XN8GTqUdPu8+lf3oWHsR82wrPpt5udusXfd3q7i968gp8ED1+3flX5s83
4SP0c7tdPEv/s8fuj/PEffBW4uMAnIS/D1n747/DcBb5/KndH/nfBY+gHzwG
5/j0/YXjsJmvxL7fw/3Rr59svKN3/7NG2eSDzNNnrYntT+x17prY76U/OB9O
5DztojUx+8h8dSls4kv0/bI1sfVKPiXDpn+Q/ae4z2X/qXAx/U2a+77UpwFw
EvV6INwdPb4FNvVUnhcMho8Xa70cApv8lXltGDya/mwUbOq77OceOIX9jF8T
84/sJwueRj8z0a63WPvlye77oufZ8C76pT/Dp4rVP4/AJv7lfYPH3H6l/s+B
E5gf5jv/SXwugDuKtd9bDG8tVj1aZq9P/7ISNv2gnP+tgYP0/0E4j/wsdfuR
9VXAGfRfNc4fMq81wPb8aR08uVjfZ3rGxZPY7zn4YLHq0wvOvnIesgVOpn97
2e1X6vlrcBr+fQOeQbzugvcXa762O5Z6tNddX/Rzv9uvxN+HcHOx9lMfuetL
Pn0M5xarPT6HM9GTo86fEk9fw53FWg9OwEPpN3+0+6f/Pw3H46//KWY9Pj2P
7F4cW688jzkLNvOsvm8Lm/oqz1fOheOoN/Gw6QdE7s6HTf5F4+1oAmz6iaj+
XHQR3M79LoZHcL9L4RzVv/xfwhmqN/WXwSY+xV+/gj2Nn67L4ZN6/nThle56
om8pcFDrxf1Xu/VIPKTCxzV/qq+FR6NnaXCKT54ndfaDrb4PgE19jT6f638T
vJn6PrA45t9oPzX3N86+0eeRZbfAaczDt8G9OK+93a0/mv9nenAC529D4FTO
c4fCLeqPmcPgQvW/fwRcrP3oppHOntF+Z/9oeJfORz+MgfvzfsA45385nxnv
vi96eC88FD24z9lX8ud+Z4/oenc+AHcRP5OsPTSeL5wMT1R9TZ8CZ+s8c182
bPRH3oecCtfT/06DT+m8/uJ0+7k+T+iYYeORfu5RFz9S7x5z64n2A8NmwfE8
X3wcHqvz6Iq5Nt/oF+e59cl51BMuP6Lt87En3e8lP/OdvWS/i+D9fu0vC6z9
/fq8dqnzt/y5UCFcxHn4Cns9Pc86WGTjS+ebU6vhGfjX5/YrehZw94/G40Mh
u/6A2GtRCZzI87S1cAHv15TD1QGdbyqtPfwSH2dX2/UEpf+9ptbqjb7fM6Le
3j8g/eSfG+EN2LvZxmdQ6vnT660/9f30nS1wh76v2fUMvF3fN/zFRnu/sPRj
/Z63+RHS/nmTjW/+Xu1vNj74e7u/2/2VyHnus/+w8Voq9eqdF228r9V+5WWr
F6U6379q80//Xr//dqt//P8Zdlj9iej7Bm02viLy++K3bPzU6PsBu+AJtXr/
3XBSnd6/Hc6tl/Vf8E94foOeR/8LXt0k8TrmPas363T/78PD1ss8vvqAXd//
0372Q6s3z+rzk0P2/hvV/h/BVzyn+nnE6tvz2o99At/XKvP5yE547ybv/wNH
SpIk
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
0h85372FPIz6MJJ8wIH6OKYk7j/xz50lcfuJft1NnumAnk8gRx2oRw+QVTxI
fj1MTnEifqeQm2nPacZ+cv7wT3IC6+Vj5vvS7z1hrpfzmLnkFgf0eAF5kwN/
nzP7Ff1ZTFbxJM9fqv3B55eQs/n8Uu1PxqeTXMB+w0dW9ULm7wqyyhfJ3xBZ
62k1OY31ts7YS/Jjrbmf1O+X9f6c6C9fIav8lHjeQlb5Jfq7laz0X86Lt5OV
3kl+vkdOYn/0Afkk82kPudSBef5jchb1Zp+JL/xewMSD2Ouw8Y/Y62sdvw70
Sx3GHqKfx8ij2e8dJ2ewnv1q4k/q4+/kKQ70O11Wxv0n6z2L3NOB/rcbebQD
/j1/Zdy/Et8Xkg85MW9dsjLuX7Fv6sq4f6R/6ENW9Uf6t35kFf+S31eRU3i+
dg15GvNhyMq4PyQebiCr/k7Of24i57MfupWs4k/eB9ym98f6OdZ8X/yRRc7h
/rLJKr9lfzlkVb9EPx4kH3Ng/ppETqJ+PUJuYb5NJ6v+Q873Z5BVvyr+m6Xt
yXibbfYj/f88coYD530FK+P+FXsUGvvg30+SlR7I+8Bl5C2Mz5XkUp7XvkRW
eih65iZnsh/zk1NZ3yvJKj6l342Qcx2Y12vIxcy/er1fJ87nmshKb6Q+NpOP
MP43kQvZP75OLmF9fsvYU+z9Dln1t6Iv75v1S73are/vQPzt0etlP/kJuYh6
tJ/sZX93UMcnzxOOaHu4oJ/tZDVfST3sMPEh/vxBM+fnn816pP/5lTyc5yt/
kCfS/11WxT+XfDiL3JXz67nkPOrT+avi+5G/PVfF7Sn1LIWs8lnOk1JXxdcj
8XW5uR7/PxLyVl5/FVnNK3L9YPIWXn8dWembXH+DWY9cfzN5Dtdzq2G5/jZy
kOvPJKv+Q/abpT93wD7ZZNXPiX1yyO2054PkBs5Pk8x6pN48Qi5lPzadfJJ6
NIOs6rv0B7P0/R2Ih9lk1a9L/Mwj57CePEPW8VZI3sT4LNL2d6I/LCZv5/y3
khyjnr5k/C/zqcv4B+dH5CYnfr9TSc5w4d9rhcn5LuRjjV4/63e9WY/0T2vJ
Uc63zeRi1ttN5EE8D9xi9i968pZerxN6/I7xr8yf75HT2c/tNvaS/meP/j7r
2cfmc/m7n5xKfx/U+eCA/w6beJF8/lrbxwF/dJjvSz94jDzRgd8vHCc3l8G+
v+r9Ub9+N/kjevenF8HZnKfPIqt4EXt1I3fyvKI7WfU3cp52IbmF89UlZCf1
/VJyH+ZrH7KqT7L/fuZz2X8a+VgZ4nEQOcGB+jSEvKkM8TWUPIf9241k1T/I
+4IR5BQH6uWoF+P+kXltjHm+9GfjyMO4n3vIg7ifCfr53E8uubUM/cxEcgb7
5SnGvqLn08gHytAv/dN8Lv55zNxPfm/whLZXGer/XPKhMswPC8iJDsTnQnIm
+73Fxj6iR0vNfvDvc40/5fzvRXM/yWcnudiB/PSSsxxYX4B8sgz9V0jHTxnm
tSrjL+mHa8ltZfg9U6Pxj9hvPdmiPm009pTzkM3kXM57bxr7ST1/m5xE/75r
rpd43WXWJ/naauwl9WgvuakM+tlGjjL+PiMns5/63NhP8ulLcjPt8a2xp+jJ
UXI+4+lHckkZ6sEJcgf7zd/M59L/nybvpb/+VEouw3lk19L4/uV9zFml8f3h
97bkQgfer3QrjdtP6k0SOR314r3uZDUf2/F2NJkcLRP9ufBCspPPu4jcUYbn
XULuh3mt8M/kZLyvjl5KHkR//YU83CHx03GZfj7mnwv6klX/L/rWj6z6RTt9
HxxAns94SCPvwjwTHEg+Tj0bZNZvv09qH2z2J/o+hNxZJu/n0q/XnzOfhpKL
HNJPzfsrWeWn/T7SfyO5jfPozeTRPK+9hTwR+X+mRc7l+dsos345zx1NzuL5
wRiyyg/b/2WZ2n6orxvuJG/CeVBbFrkZenjqbvIczsfjtf+dOJ+ZQJ7J87j7
9PqpBw+Qi5k/D5LTcP6882FykPEzidxEf04h98F8lDGVfAzz2gPTzPPl95DT
zf5EH/LM9+1++vUZJr7s84BDM8le9nOPk1v4e4knTHzb/cCY2eb78n7xKe0/
p8yjy+eRp7H/e9rsT86jnjH3s9vnY8+ST8I/PQq1P7nfRTp/2V8WkVU/KO9r
XyBvRX/iLdb54uK/NyK34n3NgRJzfzv+O1fp/OPvP17S+cLfuziMve14fMSl
4xm/11jkMc+TecBHjvF9YLm2L99XVWj/uiQ+zg6SS9zS/14Z1vmH3/dkRvX1
Hukn/1mt/e2BvWN6/x6p5/V1hiW+GnS+eKAXjXo9Xpm/zlun8xv/XmDwy/r7
/D39Bv18H/LpFfIRH/qLV3U+l8t57trXtD8DUq8+fF3HQwX6lTf181Zjvt+m
4wP/Xj99u44n/nvuHeTBYfzeoEXbNyLfL31fx0cUvw/YRd5XhefvJp+qwfNb
yf5aWf/5/ybPrcN59H+0v9dIvN79idaDtdj/p9pf62QeX7WffN7L6Gc/Iz/Q
jPcnB8l7NsD+n5NTN1lPpaWcKDys7fOq9X/+2K4e
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
5zMdv2KPA2p9LvR/h8lpbpwHHdHxLefzHToeRP86yd3dON/6RftT+r0T5CY3
4vc0OYHrP6fil+s/Lxec7YY/Y8lxHtSbOHKuB+fXl5LT3ZivryDn0P59yPHU
u2vJZ1yYt/uRyxjfSeROF/QhmXzIBb0ZQq53YT4eTjbzS84b7iSPc8Fe9+RG
/SP6eh+5xA1/jyO3uqEfD5PHuNG/TiSb8SX17HHyLDf6mafImS7Ux/8ht7jQ
3/5D7d+N87RZ6vkuxNcL5Aw+7yXySC+eN5/c7kR+LCIncn+vkZtd2N9SctiN
+p5HjvHg7xr1Oe35pvrchXy06fvLeZST3N2JeayInORC/+dX8eBCPS/Tn8s8
GCIPdqH+1Oj9S3+4We3fhfl1q7a36OEOZQ8X4vN9cpcT9btJrc9t2Ey5/X43
2XChH/1UxYcT9t5PbnPB3ge0/+T9z2Fyghv7P6LjW/Sjg5zqhN536vVIfftF
7c+JfPmNbHFBr06Te7vQb53T8S/6ct6yqD9lfowld3chvuPI7S6cv15KbqE/
Ll8Wtafoex9ynBvruYZ8yIn19CN3uND/JpEbXajHyeQU2mcIeYYT9hlG7u9C
ft+pnu9EvR5FnuaCntxHbnXCX2PV+lzQrxTyHBfq20S13kIj0t6seWxZ1P6i
N0+R3S7MN1PJY1ysf+RkF/qb59TzmT9ztH1FjzLIpr6IP19ZFvWfzEcL1f2d
mD+XkHc7oR9Llf2cmAdW6OtlvfnkM06st4C8xYl+3UoOOaEvheSGQvjbS85x
oT/YQG5ywr5Bdb0T81Gliicn9C5MznRinq0nZzuh52/r9Ut8bieXMF/e0/4W
vfiQ7HNiXtpFLivE+4Zm5c9C2L9Fx4fs5wu1Hyf28yV5m4v9p/a3nM98p9bj
RH/1E3mcE/X1v8p+hca8yIFQFzlciPw/Rc6if/4kdxWif+i2PPq51Mse5MGF
iP+LyS2FqG+XkDuc0Kve5DQn9ptATi+Efl5Nri9EP3bd8qi/5LxhILl/IfT8
JnKuE/l8K9ldiP7+dnIZ/TtC31/0d+Ty6P4l3+9dHrWX2OMBcoIT+fUQObsQ
v3d7hJxXCD2YRE4sxPuOdPU8B+J5MjnZCf16hnzGgXnlWXKzA/aaTfYVIt7n
anuLnswjH3JA/xeo9Rei3mYrdkCPc8jdHagPy8gjHbDnSvKYQvRna8klDuTL
erJRiH7ETg45MO+79PpEr3zqebR3ifIX469c2d+Bv1V6PZJvtSreHHhf+S9t
X+kP/63iw4HzgQZyvgPzaaOynwPx+xG53Q5/7VH+dGAe3qfi14H43q/9J/l8
kJxSCH8e1uuXfqSdnOFAvneQhxZiPv5Z21fOL34hxzigxyf0eqS/PU3ezXg4
p64vRL9z3oro55HwvyuWvM2O/IojWxw4/72UnG7H70cuJ2cwnvqQCxyYX64h
JzuQn/1WRNcnv8+5QV1vh14l688lHgfr78t52jBybwd+H3OHfp58Poocy89H
r4jaX+rRWHICPx9PbuXnqeQzduhHGrnJjs+fJM/g96doe8nn09X97Ph8JtnB
9f2T3MXvv/j/9pdJnmPH/rPIbQ7Y51XyGNrvdbLPDvsuJ8fQ/qvIZrxKf7WO
HKL/3iKX2eFfh7Iv/e8mN9hxvlxMHuxA/JSSkxyY1yu0fST+qshm/km9qtP+
Fr36l44/ie9tev0S/w3kWXbo3Qfa3tLPfkQe6sC8slet14bzzX3K33bo6efk
Rjvm+YMqfh3ol9u0v2Q+b9f7EX34QftX9PxnHV8yDx5X8WuH/pxQ37ej3/pD
20v065zKLzv6hfPyovsR/Yslt9g5H+ZFny/1+VLN0u9dTo5zoL/qQ06gPl9D
jneg/vfLi/pX+tsbyGZ8yHlXMrk/43kw+RjjaRj5DOPlDvJkO+JhFDnFgX52
NDnWjvOOsWQz/sWf48lbHJjXU8mm/oi/0si77Ubk+K73k/pz6TemkJtt0Pvp
ZFMv5P3uTP08OY+ZTc61w94vksfZ0Y/OI5vxLvNXFnmkneejev/4fbD6vgP9
1jJtD8nvVeRUB96frCWHmT9vkTOYH3a9fol/N9nMZ4lvn/q+Hf1vKbnDjvmz
nJzH+Kwit9lhj1pyGeNvs7KfHf3Ov8mm3kh87dD+l/cLjfp+Ej9NOt5ED/eQ
07jfT8kOxsd+Fe921LMDer+YF3X8yPx2hNxF/3fo+8vvSzrJ29gP/ELOsWNe
/U3ni/R3p1R8M1/Oan/KvNJtZdQ+sp8LVkbtKfu5mDyD9TWenG+HfvUmZ9oR
z39bGfWP9PtXk029kPnwenLYBv8MJB+yof++iWzGo5zP3kpOZn7frtcr53sj
yGa9lnoxkjyH8XYv2dRb6bfvJ7fa0K88RI6jHk4gm/og8TRJ71f07AlyO/Xq
abJZn6S/nkbu64B9Z5CnMT+eJ5vxJf3qC+ROG+a3l8kjbTjvn0/eYkd/tpic
ynh4jdyb8b2UXED9zCOPYD7nk1tssN+b+nqpp1ayWV+knjnJqh55yaZ+SD3x
k838kH4zqPcj+lOp7yfnSWHyGK6nnmzWA9Hjt/V+pH6/QzbjV+zznraf2Gcn
+QzzZRfZYH36hFxvR3z9hzyZ/mrV8Sj5fYicy37jax3fUu+/VflgRz3+Ucev
xM9R8m4b5qNfdXyJ/v5OdtgwL/yh/GvD739iVkW/L/nXnZxtQ/97ITmD9f+v
ZLPeS/3uRU6xY167YlXU/6L3fch5Nsz715Jnsf71I3enfiWtitpD/J+8Kuof
icch5CYb7D1MP1/O7+8gm/Ei89Iosllv5XxntL6f9F9jyWa8yO+JxpOTGW+p
5ATOP2nkLivyMZ1sxrc8bwo5if3uM2p/NuxvJnmwHfPKbPJJG+bXF8lDac95
6vnU1wXkNM6L2eR85lOO3p/E7zL9fNH7leR0G/RmLbnEhnhZr55vw3mwjWzG
i+i1i2zqmZzvFZHD1LcS8jEr+ocytX4b9CKk/G9DPtTo50t936Q/l/lpK3kO
7bWdPJnx9z45x4b3jx+SQ4z3XeRM9l/N2h7Sb7eQ623Iry/IZj8i6/+SXGDD
vPw1OcuG+vad9o/4+0cdP6Jn/9X5JfPrr8p/VvRTJ5U9rThvP0OOt+F9T8xq
sNuG/vB8cqcV9eVC8jjmR0/FVsRPL/IcG/qNK8iZVtjjKnIq/XktebIN9bU/
Od8G/U9aHbWHxH8yOdmG/ncIucsGPR1GHmHDPH4nua8N/dQo9Twr7Dt6dXT/
kk9jySVW1Nvx5EQb5ptUzaKHaZqlHqSTD1kRb1PIjVbozzPkaayHM8lm/OL3
k/pzeb8zlxzL+J1HjrHx/7eRR/J+2WTT/3K/HHIG15dLrrcinlZqe8m8uoac
wP2uJ6fYcJ5i0/Eg+eVU97einyzS14s++Mnd6Y8ysqn3Mn+F9PPEv2GymY+i
N5vIHVb0E2+r9TNetuvrRS/f09fL+9CdOv7kPGyXso8V/fkn+vkSzy06HiS/
W7X9pT87pPLDivOSr9Xn1Itvyf05v/xIPmNDv3JUx7vUh+M6XqT+/a7tI/H1
B9lBPTin7S/1rXt+dH0yv8XmR/0v9vkr2YwP+f3dpeR4K/TqcrLFivOJPmSz
3kh9uobss6K/7Ufewn7nBrLZn4ue3qyY8TiYXGBF/AxV37eiXxmRH7WHnO/e
TZ5mhT7cmx/dr9THB8gp9M9Der2iXxPyo/YXPZ9ENvVR6tET5Bbm19PkZsbv
NLV+K+w5g2zWJzl/eJ5sxpvo3QvkbCv6vZf09XIeM58cskKPF5FN/ZW/r5HN
/BH9WUruoD9XkN18fj65kc8vUP5jfFrIpv5Kv1FINvVM5m+PXp/kbzF5DPU0
QG6jPleo/TE/qlX8sH7X6fiQ/vJfev0Sz9vI26zQ3way2Q/IeXEjuYH5+RE5
n/G3R8UD82mfsocV8/x+vX7RmwPkvoz/w+RU1qcjKh5or+/Jpv5Kv9Sp7Es9
Pqb3L/1eF9nUS6lnp/T3pT7+qZ8v/U63NWCzPsh6e5Cz2P9eRA5b4d9LyGa8
S3xftiZqX5m3riTPon37koey/0kkm/VS+rf+5N0W5PeNZDP/pL++hZzKfBii
7y/xMJzssOL8505ymQ390D1kU2/lfcB95C7Wz7FrovYSf6Ssidpf9pdKHsP9
pa2J2lP040myWT9k/ppCzqR+PaPvL/k2kzzDivP92WSz/xH/zdXPk3ibp+0r
/f8Cstmfy3lftnq+HfbIUfa28f9PqvvZ8D5wJbme/l5DzmN/8ia5jXpmU/ay
oR9zqnhgffeq/bDf9ZPNfJB5PUg+yfyrJA/m+VyY3Mz6WK/Xg9/TkbPZP76j
/S/1+V1lb/a3H6jvc575WNtL6tVeZW/OD/vI8ewnPycn2Xh+q/0n9f8wOZ3n
Ce3KP+xnO8jt7N86yYfoz1/Ipt7I/PwbOZf9zym1Pp4PnNUs/u+2NrofyYce
ZDMeZX69mKzq4yXkThv+9iaHWM8SyGa8y3lSX3IW4+s6ciL7nQFro/aR628k
O3j9IPI2Xn8buZHXD18b9Zdcfxd5GtdzD9msB3L9feRWrn8cOcx5PUXtl/ZJ
JQ+lfdLU/Xle9STZ7N/x/znIcTy/eWZt1J/ir5nkeJ6Hzlb2Z38wV69f4mEe
eSTjZwHZYD1ZTC5gvOWQzfiW+Mwlm/ks/WEeOY/9whq1Ps5jb6r1OzCfWtX+
mS9Ocq4dv9/xks35Wv6/1gayOi8PkttZjyrJqeyfqsnmPC35Xq/9I/V2i4oP
ngduIzfZoCfv6v2IHn+g7GvF/PmRjm/p5/aSmy3of/Yp+7Ge7dfxIn8PkudY
4e/D5Mk8rzlCzuF5xfdkiwX+6FT5ZEE/eEztx4rfL3Sp+LbAvqeUvSzQrz+V
Py3Qu7+sA4csmKd7kLtbYa+LyAlW9Ac9yX2tOE+7bF30+TJfXUkeyXp3FTnO
inxK1J/L/vuTT1qw/yTNEo/J5MFW1Kch66L2k/gaRnZYoMd3kHtb8b5gFDls
Qb0crZ8v89oDZLOeSX82fl3UXrKfRzTLfiaRp3E/6eQtnM8nk81+QfrlaWTD
Cj2fQe6woF96npxK/7xANuNHfm/wEtmMP6n/88m5FswPi8iTGZ9LyHkW9HtL
yY0W6NEKtR7ae7X2v5z/rSM3WZDPFrLZD0h+OsgNXJ+b3GpB/1VMTrRiXivV
8ST9cDk5xYLfM1WRD1lgv1pylwX6tFmt34rzkK16/9K/7SCb+Sf1/H21Pgv8
+6Fen8Trbr0eyddmvR6pRy3kfAv0s1XbQ+LvS/JQC/qpr/Xnkk/fkrNpjx91
/IieHCXnMJ6Ok9veQj04QY7hPPmHiu+30P+f0+sXf/2lAHzGgvPI7mQzfuR9
TA9yb867seRkC96vXEQ2+zupN3FkM19E7nqSSxBvR+MLouuP6M9ll5HdFjzv
cvIIPu9K8iyL/M35G3kM9KbkKnIH8/Fqcizip/Nachnmn0uvJzdZoW/99fMi
6fvkQHV/K+IhiZyE/PHdRI6nniWTzfkz8j6pYxC53gJ9H6LtGXk/N/h28iH2
M8PIeeinFvxdPy/yPtJ5h/q+BfPoXeQ4ntfeXRD1ZyT/zzfIWVac94wmm/26
nOeOIVusyP8HyH1xHr1+nLI37LPpIRUfVul3WlPIu6GHpyeQHZyfJmp7y/nM
JL0f0cPHlL1t0IMnyA3s554kj8P5866nyYk47zg6RdmX/pym/IF5YOh0stlv
R+aZJ2aQE2z4PeRM7X/Rh1lks1+N9NPvzFb2w3lk2xz9PNHrF1V88fz4JbI5
T0f6gQfmkc3+SN4vvqLyA+/7Vi1Q+cF+cSF5Bs+jFqvn2eT98bFXVXzwfUGO
yh/u9w29Pukvc8lzbHhfu5ycj/7EkUdu43n4KrI5r0TC5VC+yke8jzyzVjHP
P95U/ubvXd4iH0M8PmNV9sDvNd6wq3jg+7RC5W+eF7iUffj7No/yp0Pi4wKf
ikf8vuGGDeR2/L5pXIm6X6H0k88H1H4KYe8y/XnEfZUV5KH4fe2uELm1EHpR
peLTJfPXX2vILS7pxwbVqfhxo3/epPKTv2f/l8ovL/qLtxUXyXlu9b/JuT6p
V5+8o55XjH5lB9m3AfP9e+p5fuhHI3kn/z/3TvX8UvzeoIncIyDfL/hY6Xc5
fh+wm/xNBZ6/l9wYwvObyY9Wyfov+Q95URjn0Z8pPaiReJ3wufJvHfb/hdLP
TTKPrz1I/mEz+tkvyT3fNn78/WTp+V+p+H/b+F+ITaDx
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
gAqnyw0fknsG1GnLXZ795D4B1JsvyX8E4I/vyYfKED8nyRMCKmyOKX+Q95fh
eRc8B+7K511CTgygPvUhnypDPxVH7sL93Wi+L/u7hfyfAPRUkccEUN//Rr4+
AHtOJb8VUOH2ZcM0cnxAhcPll8fJtwQw7y4grwlAv9PJyQEVDqcRK8lflqF+
biDPDCBebOR+AfRnPvK0APrpMrNfyadaciDA/pD8TADzQQt5ckCFx8UXPiDv
DyAf9pEby2D/Q9o+ZdCbb8nNZbDHT/p5pWpCWHDPkk+Xqu5hATp/BTirTF0R
buAuJs8vQ773Jqsy6NPV5Hll6DdvILeXYf4ZTo4KqGfDgjWKvJfrG0dO5fqm
rIisT/TsEXJCGfLtH+T+ZdDfp8iTypDfi8lzS2G/THLvMvRb68jpZYinLeSO
UuSnV39eCv0qIbeVwL/V5MllnL/0/kqhP2+SF5WqJeEH7CLfUob5qJ0cXYZ6
9Bk5vgz9/jfmftI/HSPXlGA/Z8gx3M95z9M+pZifYsnDSzHvXE5eWabC7Vr+
VeQJpei/48lVpdDTm8grSuGfO8izS6Hf95K3l0IPJ5vvS318iFxagn7iMfKp
EuT7XHJrCfa/kHyyGPH2HDm1FPmwhjy5VJ3Yaxkol1xRgvrtIo8pQf0tIvcq
gb4HyTklyJ8G8uhS+P918vxi9Eet5GPFqAcfkfuVqKfCBfFT/fxi6OsR8ppi
9EM/kJNLcL7zCzmzGPUxKjNyvTw/OjNyP9GnC8ldab/u5C+L2Z+QVTH6/yvI
3UpQ7/qS64qRL/3Jk2n/QeT4Ysxz15OrirG/weTdxYiXm8mjiqG3iWRfMc7D
RpLTijlPkJtpn7HkacXQ2wnkLsXoD+/X6ylBPieTh5YgPlPIVrxIPk7Xn5dC
72aR80rR78wmP1KGfuqf5NOsT2nkIPujReTRlbh+KTkxiOtXaHtvw/UrySlV
WM9a8pZqrD+HfIrzbS75cc7bNvK9NbCPm3xjDezjI8+uhj23kqOrYf8Aef42
5E9Q2y8If9Vqf1ViXmgkW/2O6Pt2vZ8yxMMbZG8p4qeFbOWv1JdW8teMtw/I
vYqhL3vJB7di3t9H7tyKeD5AXrQV/e4h8u1FqIdHtP+KoPffktO3ol84Sk4q
Qj91Qq+/CPr3Czm7CPXorM6nIuhB1AvgMUUqvN3555MnFGHe6EY+WIj61p08
uEiF5TD1UnLPIuh/b/LsIsy/fcmjiqDfA8zzZJ4fRH6/EP6/nvyfQvhziGY/
8u9m8h+F8E8i+YEi6NOd5K5FON++mxxfiHo+Vq+nEPP6RHJqIfr5+8nZhbBf
MrlXEc4HHiaPLcJ8OZ1cVahmh//NIocKMY89QXYWQq//Sa4pRL1PIzcXIh8W
kU8VIl6XktMLUX9XkL2F0LuV2t6FiKe15FI/6msOOYP7y9X+K8R5nY08shD1
003eRH/7jH+l/9tKTipEPxog31SIfA+S8/zwXy35iB/9TgPZXoj+fTt5eCH0
/w29Xz/Oc98mV/ix3lZyGtf7AXm7H+v9iDzDj3ltH7nFj/8PkJUf+vE5+aQf
en+EvMYP+3aQ4xg/P5jnheU9/gQ5uhD5dIrs9qP/+Y083494iFoJzvXj/Cia
3OSH3l24MrJ/0aM/ky/3w149yYn07xXkoX7k/5Xk7n7MB/3JGX70B4PIM/2I
x+vISX7o+WDyI8y3m8hpfujbreR5BfDXSPLf+XxFLvZDT+4165V5fAI51Y/5
bjK5F/c/lRznR31+iJzl53xCnkX7P2bWK/Z/nDzBj3ycS17hR7+xgDzGD71Z
SD5bgPxKJz/jx/uaDPIkP96PvUDuXQA9WEMOFaAfXG/sL3q3mez1ox94ydhf
+l0n+XQB/JlPbirAfFVIXlSAeCo1n8t+Ksk1PuynmnyNH/sJkYf70E81kZt9
6E9fI4/0Q+/fIu8ogH7vJKf4UL93kfMK4J8P9fU+5Ec7+ZgP5/ufmPXIvPsZ
uc2HfvpLsiqAfb4mTytAvH1PDvqg18fI6QXw90lyRgHeh/5KjilAffldr9eH
frXLKl6fj3p7AblHAeaTi8gdBXj/1YPcXgC9u4wcLIA+/4V8yId+tB95LPPh
anJCAfrxa1dF7CP+SyBb/gubp2Aoub8f/cMIcqAA+n2beZ7cbxS5mfe7h3zE
h/WNM/uR9U0i5xZgfUmrIv6Q+HqQnFqA88JHyMkFOP+YQXb6YL9/rIr4Q+L1
CXJcAfqDeeQ5BegP08jKh/O6Z/X+8+HfZXq9PpxvryBP8uH8aJW2TwH6u7Xm
etGHHPJwxt+L5PE+5KfNrFf0zk0+6EM/5yOfzUe+byV785EfAR0/PuhXkJzt
Q/2o1ff3oX9rIOflQ4+3k1vorzc058Nfb+v48MK+reZziffdZH8+6vFH5KE+
5M+/yWNoj0/Jp33o/z439pHzoMPavz6cz3fo+PZB/zo15+N867i2hw/93imy
pYcSv2fIKcyvc+Qsrv+8rMj14s8YshX/Um9isyLPl/PrS8iJPszXl2dF9iv2
70MO5EPvriLH5GPeHkgen4/4jtfX+6APCVkRf4jeDNPry8d8fAs5NR/nDbdn
Rfwj9rqLPCkf+noPuYn+Hk+e54N+3EcO+dC/TjH7k3r2d3JcPvqZR8ixPtTH
/9PP86G//Ye2Xz7O0+aQ++cjvp4iJ+TjeU/r++XjeYvJSfnIj2VkZz729zw5
l/tbZfYv9T2bHJ+P/zeS0/NhzxfNfiQf7fr7HpxHuclWfsg8VkDu4UX/t1X7
y4t6HiCP9GIeDJJTvKg/tdoeXvSHjeROL+bX7eSofOjhG2b/Ep9vk3d7Ub9b
9fc9ym7J7Te7TXxJP/oR+awX9t6nP/fC3p+Ssz14//O58Y/s/7CODw/0o0Pb
0wu979Tr9aK+HScXe5EvP+t480KvzpAXedFvnSOneaEv562mP7yYH2PIWV7E
dyy5txfnr5eQQ/THZasj9hF970Pu8GA9/cjzuJ6B5KAX/W882fK/1OMEch7t
M8w8T+wzwtxP8vt2cpsX9XoUudUDPbmHHOuFv8aRZ3qgX5PM/qW+TSGne1W4
vdn4IPmIG3rzCLnFi/lmhlkf6p9enwf9zROrI/6T/Jmn2QM9SjPPE38+S47x
YD5aSp7jwfy5gjzcC/1YRc7wYh5YSz7pwXpzyOO53lz9fQ/6dZvenwf64iJH
0d8+stOD/qBI24v2LSP38mA+qjTfF72rIffwYJ4N6XjyQM9f0f5mfL5O3u9B
vryl48UDvXiX3NeNeWkXOcmD9w1t5E7av13bx4P9fKLXx/18Rm53s/808S/n
M1+Tm9zor7439pX6+iM5260Whg+ETprrJf9/1f71wD+/k0d60D90WRPxh9TL
ruR4xv9F5GY36tvF5EwP9KoXOcT99l4TsYfo51/JbW70YwPWRJ4v5w3XkK34
Fj2/fk3EP5LPQ/T63OjvbzbXi38TyfPc0N+R5Fw38v3uNf9tj7FmPZJfE8hD
Pfi92/3kSW7owVS9Xzfed6SQd7gRz9PIaW7o12PkHm7MK4+TnW7Yay65vxvx
Pp+c7oaeLNTrcUP/l5APulBvM4w9RI8zyTPdqA+ryR0u2HMdebcb/dkmsnIj
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
6jKyFS9yPtGHbMW71Kd+ZEvvpL8dSLb6Del3riUfoZ7eQD7NeBxKnsn4GU72
sl9JNNfL+e6d5GY79OFucqod9XFsTsR+4p8JORF7iX5N1p/boOdTcyL2knr0
kN6vA/n1KPmYHfE783/smWrWK+cPT5Knsf94yqxP+r2nDct5zOKciP9Fj5eR
F9nx//NkrT+rtL34/LXkEJ+fo6+n3uaSU+yIzzxyjB39hss8X+bvfLIVb5K/
hWQrnkVPS836xf4V5IPMj2qyVa+kfteb70t/+TI514543mHiR/S3mWzls5wX
txh7SH6+Z+wt8fcBOY75tNfEh8zz+8hJ1JtPzf3xewFtD/rrMLmN9vrGxIP0
S53kJurnMWM/6fdOGv9LPfuV3Jf18Xfzfel3umwEW/2GrLcr2dIH6X+7kZPo
34vJzTbE96UbI/6XeesK8lkb7NuXnM7+of/GiD+kf4vbGPG35Pd1+noH+usb
yVb8SD4M08z6egv5kA3nP7eTe9jRD91l9iPvA+4hT2L9HEdupz8mkU9yf0lk
xf0lb4z4X/TjYbNfmb+mk4fboV+PmftLvs029pLz/bnkkfTffHIr420hOdGO
/n8J2dJHOe/L0NfbYI9MslXf8feTZr3yPnAdOZr+3kjOZX/yIrkX+307OdmB
fsxt7Cf13Ue24lX63a3a/g7M62XaPsy/SvIOO87nasgJrI8h8iLWsya9f/aP
r2l7OVGf3yTPZL14x/hL9OV9cm/Wqz16vZwf9pLz2E9+rP3F88AD5CjON5+T
rXyU84QjOv6onx3kOPZvneQg/Xlcr8+B+flnsz7pf341+Yi/ZzP2Ff932QQu
Zj50JY/h/HqR/pz18WJyJ8+rem2K2FPqWW/yPDvOk/qSh9oRXwPIqex3BpGt
eUmuv46cwXgcbL4v199E9vL6W8hBXn+Hvh/r611k5cT195CHc/3jyVb8yH4n
kfX5SBI5h/UzmXyI9nyYnMD5aTq5L+vNY+TT9NdsfX/q0VyyNV9KfzCfbPUn
Eg8LybmsZ0vIPVhPlpOt/JR4yyTn2RGfWWSrXkh/mE2Od6Jf2GjWL3r6or6/
E/OpTdtbnx+R9zvw+x0fOcuJv9cq0uxAPpaRdf9QadYj/VM12ZrXJN9DZj1S
b5vI/amvO8jp7I/eNPYUPX7HfF/mz/fIvXleucfEh/Q/e816pJ7t0/tlv3KA
3G6Dvz8nW/2S+O+wsbfk8zc6PuiPTrLVn0g/eEyv34bfL5zU+WSDfX8lZ9qg
X7/r+LZB7/60GRzFeboreR77k27k3nb0B93J1rwk52mXkhM5X11BrmG9u3Jz
xL6ST/3JTdx/HNmq17L/eLLfhnhMMOuR+jSMXGxDfI0gn82DHt9m1iPvC0aR
41gvR+vPbZjXxm6O2F/6s4nkjjzs535zf9nPVHLAhv2kkBfZ0M9M0/u1oV+e
qe1lg56n6v3moV96ktyaB/88Ze4vvzd4muy0of4vJh/Jw/ywjHwoD/G5gnws
D/3eKuMP0aO12t+09wazXzn/20wew/OcPL0+G/LTSbb6LVmfl5xmQ/9VSB5v
w7xWYuwj/XA5ucWG3zNV6e/nwX51Zj2iT43GfnIest08T/q3N4w/pZ6/TZ5J
/75rrpd43U2eZkO+tpFjbahH7eQcG/Rzv7le4u8zHS/sp74w65d8+oocQ3t8
Z+JP9OQoOY/xdIKcwvOKU+S2PPSbv5Hb89D/nzPrEX/9KTeyXzmPjCb3tuF9
TFfyvDz+3pZs5Ze8X+lGnmNDvYklW/Eictc9N7KecLwd7aGfB/259FJykM+7
LDfiX3neFebz8H+ZfyEfzBO9Kb6SHMqDv/5KTkX8dF5FtvQsvP9LriZnU9/i
yFa+hdP34WtyI/aUeIjX9nBI/vivJ8dQzxLIVj0Mv0/qGEyOtkHfh5F32OT9
3NCbyWms7yPIPWzSTy25lWz12+H3ke7byKdtmEfvMOuXengneTf0+XxFjuf5
22hyLzvOc8cY/0j+jyVnwf9bxmt/2sU+DRPIHeh39k8iJ2H+PzNZ39/Bvy/X
/rbhfGYquYn6/qB5nujBQ+Rk5s/DJj7C6931qI4HnHccnU7OwTx7yUzyNMwD
w2eZ9YfnmYdSjT/l95Cz9f7Zv8whH0E//dpcslUfwucBh+bp+GP9WUDOY717
WvvLLv3A2IVkq9+S94vP6vzB+fv6Jdr/7BeXavvwfcVyw+H2+dhz2p98X5Cp
44H7Xan3y343y7C8r12j94t5x5lNHs7fn6zX8Yn3NQdzyJl4H3l2E3kR/fui
tr8DevYSeT/eHzxm04zfa6x06Hjl+zSXeb7kj4fc7MR8k6+f55L4uMCv94vf
N1xbpPeH3zeNL9b56ZZ+8slSzR7YO6D96ZF6Xlmh/edBfAV1/HigF1X6+fky
f/25lpyAvxcYXE8emY/+uYEcW4B8epl8Nf/e7hUdv/h7u+pX9f0LpV59+JqO
lyL0K2/o64sw37+lPy+GfrSQ9/DvuXeSVSl+b9BKnlQm3899n/xlOX4fsJsc
FcTz92h7VeH5bTreamT9F/+LvKUW59H/Jj9aL/E6+WPyphD2/4n2Z6PM45sO
kLc1qW7FCwfEH9T6/Ir6f+w7mwY=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH981WP/x3cnGXZnEpIw/TJMinKH5CrU1KQ0DKt7ZTLdyVJq1WRq1cqq
6fzcOWe/zjnbzn60zjKZJEkYJZNkKt9SuQ1hkYTo+znv1+s61+Nx+6fH8z6f
8/lc1/vH6/1+X5+z++qpzzzwRKeYmJjbzo6Jify7o+Kejb+MnqNiIv/12aC+
7NvlRccE8k0bVEf1e2P/9Rh58wbV6frll3yRSW7YoLo3jP5qwUzy0UZ1zaDY
+l455L4b1K1NLXO3vEj+v0aV8q8VIzJeIn/aqCZvujeuk4Pc0qhm3XHe54FS
8oeNasnWDyvuCZG3NKovdv028UgjOa9RHZvQfOXSN8iHG9XIjK9be79LfrxR
pR6p9G7fRZ7VqGqP775vahv5wUa1eY6tR+fD5McaVbfIA78nj25UWS//kHvn
r+QVjWphZMN/k32N6pPe+39fFPsc+I8w9t+NvLJRPX/nkMmbLid/EFaf3jc1
Pq0f+XhYXZu+ZtuvA8hTwuqF6daKhpJTw+qznG/7DxpJrg6riPl3jSV/HFbv
JoSfzXqQnBxWl99oefDf5Pww7JlFTgkri7LveJa8MKwi5tq/kHx9WP2xyFrA
UnJRWFnWeajrGrIvrKzVxNa7zXrFP37y4LC64tHM2w/WkeeH1cZf/tqT8yp5
TFjFRQLoLfK0sKrybk8It5Bzwypirnt3kzeux/32kwfxfl+Tnw+r8atcM7v9
RB66Hus7Ra5aj/V1mgt+dj32ez6523rs92JyeoOKmOe8q8iqAfZLJA9uUOMs
9916E7m1QX3zZ83x3beTY9bDH/eQMxqU30qvv8aZz28/eP8qVxo5oUFdZpn3
hqnkyQ3qZKIVEP8hr2xAvDxHPm+9su7+8g+LyF0bVGT7SwrIyxpUJHx6rCW7
16mXZlgr9JK7NCCeK8lrG9SoiEEbyKfWqT5WOE9vJteuU3dHbvA2eec6dXVk
ATvIp9ch3z4zfNXS7yc0/x+5/zr4s51sXwf7H9frX6ci5s3+k5y4Dnpw9jzw
xnrkQ1dyR70q72kFeA9ywjr1tuXejVeTa+vVVwusBL1+XvR+oleDyfZ67G84
eWo99jdaP2+dCllyt2IC+USd+mDulrKej5FVPeIrkzy9HvEwkxxfr56JCMg8
cnY9/PciuahOnbDC99uV5NvqVVpEIO3kD+ugR6XkrXXQ42pyZh3s3aj3W4f8
2URuqUN+bycvrsN6PjL3l/V8Ti6sUxE5/voQ+YE65bNu9+x35MF1sM8v5NZa
2Ocv8uE65PM5OeC/a5Ev8eROdYjvnuSb6qCHfci+WtXP2t5dN5A7atVHO63/
btHX16qInD6qyL3roP/3kjfXKuvbL82YSD5doyLh9Xs6eXgt8mMauahGRcIx
Lps8uQb2nU/uUqMi4XvlEvLRkLphQ8lP1YXkMTXYj5N8SQ3ir4ycUoP8qiFv
qlXxEQdvIM+pUactubhvM7mlRgUtufn8XfLWGmVVg8T0j8n9a+CfNvKhEOL3
MHlbjZL6/T352Rro46/aHiHoz99m/WKP2PngPTVqfiSgu5HjapDfl5P71sC/
/chpNdCvAeSkEOrdUHJRCPVzBHluSP1thXv/seTCEPIn1dxP7Dl5ftSeEdzw
JPlACP3HLHJbCPqyYH7UnhLv+eSHQug3Vpn9iD9c5O016AfKyQU1qA+1Zj8R
d7/3Cjk9BD15k3xlCP58j+wOQd9ayY+GkG9fkJuqVal1u7FHyANCiO9jen0h
xMNJ8r5qfP8MOYvfP3cBeG81vt+NPI3P77Ugen/5fj9yeTXWfyN5WA3WP5R8
uAr7H6m5GvVnLHlcNez3IHlMSLmt8Nk6mdwpBPtnLYjuV/J7FrmwGv5bSHZW
q4hcNuWTk0Pob1aTl1WhXrnIK6sQPxXkjiroSy25f7WKuDOhiXyySnmKrf/e
JP9cifh9n5xbpd6x0mtNq7ZfFfRgH3lLFfrJI+QHqlCPfiD3rUK/e5L8UBXy
7wx5cyX06NyF4LxK5G83claV+jHXMlAv8t+VyP9+5OmVKtLu3H8j+dFK+osc
W6net+R3xEhyUyXsPZa8Kahujvz3IHlnJfRrsmGxV9bCqH1E/2aR2yvR7y0k
D6+CXuSTb6tEPVhF7laF+u0iZ3O/5Quj9pP91pK3VKJfeoXsr2R+kfdWqoi8
bX7P2EPio5W8LKg+tuS/8gtjX6nPR8gng/DvMW3vSv7v5F1B9HtnyN8FUY9j
c6Ms9aYbeVMl+u3LyXGVyId+5F2ViOcB5O6V6E+GkrtWIh5HkHcH0V+OJY+s
RDylkk8E1QNW+H0/iZweRD14kpwVVBHztmaTa4OIhwW50f0nRwy6hGwPop6t
yo3aT+zjJOcG8G85eWoQ/qwhnw4oy7o3frmB/GGQ9YucHITevkveGFSRdLn+
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
/06c988lz2B/tpC8k/HwgrY/43sJOY/6WWDsK/lcqNdP+71MPsB66iBbei/1
zENWrEel5IGsJwHtDyf6zWpyO/Wnjmzlt5wnhclBrqdJxxf1+HWzfqnfb5KT
aZ9tOn7ssM975Fjq5Q7yUQfq08dkK38kvj4lZzrgrzazP8nvA+TNdvQbX5HT
We+/JrtZj78jN9kRPz/q5zkwH/1irhf9/Y0cw3nhT7Klt/L7n5iV4DbqZ2ey
1X9K/3su+ZAd+vhPcgLrd7eVUX/LvHYJOdYJve9JHu/AvH8VudmO+teHPIf5
k0g+Tf8nka16IPE4iNyL9h5i1ivn97eSCxyYl4avjPpXzndGki19lP5rNNnS
J/k90ViypU8Sb+PJx/i8VLKVT5KPaSuj/pLnTTLPl353Crndjv1NM+uReWW6
eZ7Mr8+Y+4k9Z5PtdujrPHM/qY+52n7Mpzyy1T9L/C7V9rRD71do/7C/Wk3u
zHhZSz5lx3mw09hL9NpLtvJLzvfK9Poc0LcgWbF/CJGt+Ba9qDf2kXxoNPuV
+v6q2Z/MT5vIA2mvLeRyzpfvkC29lPeP72v/2BHvO8g631vNeqTf3kOOZ359
QS7k+r/U8WHDvPwVOcaB+vZfsz7x93fkbOrZTyZ/ZH79Rd/Pjn7qlMkHOW8/
TU6z431PzEt8HvvDs8ltdtSXc8mtduRHV/IBO+KnGznBjn7jkpei+xV7XE4O
2uHPqwxLfe1LzrdD/xPJRXbEf5K5v/S/g8jb7dDTIWRLj2Qev41s5bP0U8PJ
YTvsO1J/n/k0mtxiR70dS862Y74Zb9YnephKtuJH6kEaeZgd8TaJnEv9mUKO
Y75MIyfb+ftJsjUfyvudmeRYxu9ssz78fRt5IO+XSz7F++WRZ7Be5ZP72hFP
K8jKjnl1lX4e97tW+9eG8xQn2c788mj72tFPlhn7iD4EyEdt8EeIPMeO+ave
2Ev8G9bxZoPevEq28kv6ideN/yVetuh4pV5uM/6W96HvGfvKedgOcoYd/fnH
Or5siOc9+nPmdxu53Ib+7ICJdzkv+crYR/Tia70e5tt35F7sV34k97CjPvxM
zrGj/v1Gvpvx9af2J/XgDDnRjvrWuTB6f5nfYguj9hf7/JPstuP3dxeS06lX
F5MtPZbziZ7ku22oT1eSLf2U/rYPOYn9zjXmeaKn15N9jMeBhdH9SvwMNs+X
fmUo2cpfOd+9g5xLfRhBtvRK6uMospWP4p8x5Dbq1zhjD9HziWSrX5F69LC5
v+TXY4VRe0r8ZpA7bLBnpvm+nD88Ra6n3j1NtvJH+r1ZZn1yHjOXHKIeLyBb
8SH/vEAeaof+LCHn0Z/LyZY+y/MLyVl8fpG5v8SnnWzll/QbxWQrX2X+LtH+
Zv5WmOeLnlaRrXgT+9eSj1Lv12v72lG/XyFb9V76y9fIOxnPm8nldujvVnM/
OS/ebvwr+fkB2aoHEn8f6XhkPu0mW/2ozPN7jT9Eb/bp+LLx9wLmeWKvI+b+
Yq9vzH6lXzpm4kn0s4Ns1R/p904Ye0k9+93YU+rjXzp+7Oh3Oq0CJ3G9XchW
fZb+9zxyIf17waro/iS+LyLbbZi3Ll0VfZ7YtxfZigfpHxLIsezf+pKteJb8
vpbcyv76BnIL82EQOZXxcIu+vwPnP7eZ9Ug/dCc50473AXeRe7B+jl4V9b/4
I4Vcb8P+xmt7cH+pZKseiH48Qk6xY/6aRLbqg+jXFPIc5ts0cqID5/vTtb3Y
r8809pB4m0229Ef6/3nk8Xac9+WSrfoi9sgjx9Me+cZf8j5wBTmB/l6l/c95
72VyL/b7ThMP0o95yAWs76Xanux3A+S+nNerzX4l/+r0fng+Fzbfl/rYRD7B
+G8265H+8U2yVf+kPr9NDrFevEuO4zzzoYknqVe7zPMk/nab50k/+bm2P/Vo
v45XzjcHyVa/LOcJR8k7qZ/thqUeHjPxJf48bvJB5udfTTxJ//M72eqP8Pds
5Gb6v9NqsM6HLquj65f59XxyO/XpAnIy9bz76qg/pZ71IFv5IedJvciDGV9X
k5s4X/Uj9+D115KteVauH0CO4XnlTWQrHuT6W8z95PrbySlcz53kAt7/LnM9
9kEOOrDfFHI55+Px5CT2p6nkPJ63PGLsg7/nIM9hvZlCTnPAX9PIIerRdGM/
6Q9m6v0xHmaTW22In3nkXNaTheS7+b4kjxzL8698bX/2hwXkrZz/VpHTqacv
k63+WuZTB9nSa5wfkeOd+P1OqbaPE3+v5ScPZT5WG39JPaojuzmPrtf7syPf
m8j1nJebyXbq62ZtX+rJ2+RE6vG7Jj5l/vzA+EP6uV3Gn9L/7CZb+ij1bC85
g/GxX++H+XPwf/x3xPhL8vkb8jEb/HGMnMB+sIPc3Y7fL5wgN9tg39/JPhv0
6y8dXzbo3T/W0N92zNNdyHtssNd55GE29AddyRk2nKddRN5sw3x1KTnLBn2/
XF/PfEpYE7Wf7L/vmuh6Zf+J5FQb4jGJ3N2G+jSInGlDfA0hhzlf3EpOs+F9
wXByL/YDI8ntazGvjSLHsz8bS3ZzP/eTW7mfifp+NuwnjWzVU+ln0skpNvTL
GeTta6HnmeQD7JeeIlv9r/jnaXKLDb83mGX2J/V/LnmgHfPDAmM/ic9F5GQb
+r0lZCseRY+Wm/vj73P1+mw4/1uj7WFDPtvJVjxKfrrJx7g+n7bPWvRfFWSr
f5R5rdKsX/rhGnKuDb9naiAn0n4bzHpFnzaSC204D9lEProW/dtb5n5Sz98x
6xf/vm++L/G60+xX8rXVxLvUoz3kbBv0s037h/H3Jdnqv6Sf+krHE/Ppa70e
2uM7nV826MmP5CTG0896v2tRD06a+JJ+80+zXun/z5DH01//KAJb/aScR3Ym
W/Eo72O6kPW8G0vOs+H9ynlkPX/HkYeiXnzQlRyySbz9GE9OxnnGRReZ+8nz
Li6K+lued6lhuewy8gyb6E3wcnIL/XUF2ZrXIuY9dpX5fmT/F/Ymn6a+9SWX
26RePNKffIrxkEgeiPwpv47s5ryTZPYXeZ/UPsDsR/R9EDnHLu/nBt6sv898
GkLejPOFef8y+4m8j/Tcaljm0dvJVr8u9fAO8jHo89mKbPXPct4zktyZ57l3
k+OZ/6OM/yL+X5tMTkd9fXWMtg/6o7YUY5/I4/8YR97O+WkCeRjPZybq51MP
H9T7pR48bJ4n+fMI2ZrfI+vd8ZiOR6z3x0nkBMyzF2Zo+9slHwZPJefbZZ55
ONPYW34POY3czP43y6w30k+/OZ3cgfPIQzPM/UWvn9Gfs97NIjehHxg1W3+O
eMh6jpyFeXTlPHJf9n/zdX7xfcVC7T+HvD/ueJ6c4kR+5ml7Y/4ZvJi8k/1l
Prndgfe1y/T+0J+4C3Q8Ofj3RuQCvK85UKjthfnm9Gpyd/7+42WdPw7omU3v
D/3ZFIfON/TLi13kQr5vLNbx60T+eM39Zb4p0f5GP3dOubYvft9wjZ+c6ZJ8
Tw6STziln3yqSu8P7+tXhnT+uqWe19Vqe7oRX/XkHsXQiwb9uUfmr382kpPw
9xoDXiHnetA/v0qO5d+rvab9x7+3e12vr0TOc9e/oe9XKvXq4zfJW0vRr7xF
nlqO+X6bzp8K6Md28iL+/zO8R97ox+8NWsgNQfl+0YfkfZX4fcBO8pYqPH8X
+XAIz28lz62V9V/wKbl1Hc6jPyP7GiRex31Ofi2M/X+h86tR5vHV+8nnN6Gf
/ZJ8pgnvTw6Sv9sI+39FHtyszp7vT9t7WPv7dfX/AumtTQ==
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
aCfqQ1pZLP6y3tyrxiPvx4PptQ48b/gTPZXxepQWrK+P0fFc79F0VEP9eIJu
d6J/nUC7nDjPniqLrbfsZ6bQ5n6T5+Nf1euyv322LLZe8nlaPt2sIb9eLIut
t/y+OfQgft98ulDD/lhIJ3B+r9G5TsxvqRq/PN9XqPWR/66ij2mI52razAe5
H530WA3Po9zq++R9rIY280X2f0H1ujzPo/b4NdwHG+mTGs6fdfQsJ/rDDWr8
8v66kU7UUA83q/WR+fmRvb4OnN9tdI4mnGa5/Xq7ir/sR3fRnQ7Eey/dVUO8
D6jX5d9/jtr5x/mfsMenoX6csvNBQ73vsNdfw/l2TsVD7pcf6VYN9eoXO94a
+q2r9vpoqC/XlHN+Gu6P8eWx9ZH5nVAe+z75/PWm8li85HrcXB6Lt6zvKfQh
7t/edAvHcwd9VkP/25/ur+E8TqMvaYjPvXQ74/MA3Yf7+0/0Cg3ndWZ5LH6y
njxGGw6s16jy2HrI+jW2PLae8nybQC/WhNXerJpM99NQb6bQRRruN3l0usbz
j27U0N/MoBM07J9ZdMiBelSg5ivXcx59yoH70QLazBd5/yyhm1g/lqrvl/eB
5XQGx1thf78T461U45H9umavt4b6UqUs19tHVzrQHwRUvsj4RtT6yftRg4q/
rHdrVTzlfbbJHr8D9fyftIP5uYku4375UMVD1otPVD7I+9I2O94O/L2hnd7j
QPz3qPHK+eyn13I+h2mz3qH/pNM0PJ/5SsVT9len6eE8X7+3888hXrYeCHXa
+4X7/2f1eXJ9LtNDNPQPXZZxvg6cl9fRRcz/G+kOB86339IVDtSrHvQQzjeZ
TnCgfv6ejtPQj/WlPQ48b7hzWSz+sp7fRV90YD8PXBabn+zv71fjk+ubQeez
/g6hmx3Y70Pt8fD8GUm3OLC/xtBpDvz/buPseLyNejCRNuuj/HtHjpq/zOdc
et/bqF/P0OZ+kPeV5+ixjNdMe77/EFlHVic98gI9/Z/if++MXMw=
          "]], 
         LineBox[CompressedData["
1:eJxdmnt0FdUVh1NMaYoRUVEQUKOkEmuqoUINinhEChQojSWtQYMrsFIWUgQU
ClSjxgImgbzuzOUhDwkCAppiikFQUSMigiBSpIIFFrCAijZSVFQQ0J7Z5zuz
V5s/yPq4d2bO3vu3H+dMrh4x7rd/aJGSkjLP/hP9btfpvI7bxj1pUqKf4pfN
OwNvrrhjAtyUNG0KejRungzXJc3ZlZ/v/HUJnDnLfHzG/kcpPCZpPvj1iDYF
0/31oXl9UYcb91fAfUIzyN6+qBreEZoIjwZwXtJ03nv6sdFz4Oykaf2z1Qv/
Mx/umTTfPjZ6/cQ6vb7sso+2f7MUzkiaCaMSn5WshNOT7vcquFPSNN+17srp
q+HcpPnzJ9d2TVvr7Umalk/MunPmq3Ayab7YaQ1qgk8E5nH7+HAjnJ806S2u
L7tsC1wQmnlP2Z/34Jyk6dI1rb7TTrghNI2bJ72+6EN4bmh6Fx3dcc1eeHzS
vP/NkMPLDuh6Cms2fJV1xMcnaaLl1h/z6wnN5MjBnyk/O39jRsPncHNobop+
voZPJc2b7y7+5UvfwgdDc2L5poE3f+/9H5pHb+9+3yvnlTlumzT1ne4pvjUN
Lg1Nj8iAdNgkTeTu2y+CS5Jm7tiLpzZdCrdPOj11gI+EJv/wsvkbr4S7hWZq
k11QZ3hFaGy0l2/qUhb789DDbVf1y4Zr0WNOWRzPaLm/6q7rGWcf/24PuCh0
n/eC14fu895lcXyeto8b2M/by+cD4eLQfZ4HWz28t83+5MNpXD8UzuL5w/T7
8vmI/3v+SLg/6/8jvIfPx8H7WP/EsjheYv8UtVf88yh8Ev89AacknX+fhHfh
/xn++tD8JBJ8DTyR+IUaL4nvXLiO+C+Abb622r1k/G2L4XT0swy2+TLYloMe
z8FWj6K/VfCU0ES37/6i6iX19zbj16o+RN/r4YzQ6b9Jr3/lVzYD34ZtfkXl
YvkWb39o6mz5ydwOnwpM5N7FO+H60Ez/ty0Iu+Hc0Jyy6Td/r9dzaKJ0b39Q
9bY/0zrsiNdj6OrDJ/Dm0BTfeuA3VZ/Bx0ITuafVFxp/qT9f+/gG5r7IgDNw
Zujq1/fwtNBE1eH0eeWOKwNX/9Lg8tA8EBXg9PLY/1H5GnMRbPN5tsWPL4Vz
QvOcLd8jOsATqc9Xwra+ROXqns5w+9D0fenLc7u6wONDc09kYDZcgF5z4Cb0
1B3ehl56wLZ+ix56+eeFJsLG3rCtp5dHAuin65V4DtTPI/lm5MF7iFc+bPWw
qp/NiKGw1dtbX2UV1gzz3w9cvR8BLwjNjVFAR5bH8ehj3XVmNGz1IP4ep/5s
eMgGaII+f2T0MwW2+XRF5KASOJt++ARs8ylqdzumK0t+z4Bt//raLndDtd5f
/BXCVh+SH3M8J53+F+j6RN918MbAbLHtpsMyeExoro4MWAkXoc9VyuKP1boe
0d9LsK13t0UJ/6p+X/T1BpwVmuM2ne/bCK9IOv1s1u9LPXxP7RN7/w7XYu+H
ao/0s3/Ctv98t2vKJ9cegAtDE7lj4WH/POJ/TK9fYdtbRTM8KnS/P1d9ROV0
0ldwatL81qbnv0/7fEq6fPlO9b3Uumt3iwrHUwJnz48q/jd+58PH6K9tKuL1
S/1qC1v9i54vhxtDE5WPOVfAbUITySP9Gvgs8bkWtvPUddGA8FM4PzRvZ9gA
3wgfCVx+3wTbfhSZd1cubPuf9Iueul7x/x3entD0jxrML+Fs5pUBsK23Ug8H
K4uehvj1M4/dXRHHR+rVvbqeqNwUF8ET8W8xXEd+3A/3DE00Hq5/AF4XmH9Y
OXR9CLb5+2Ak0EnevtDNZ4/A9ejhcbiW+jrVx5P6WQ7vClw+V8L9Q+e/hMZH
+ukseEzg+tk878/A1a+n4SL6yRL1l8yby2Fbv6X+PA9b/UZyGNsAj6K+NOr3
pR6/rPGX/v2a1wv+2QCfxD+b/HrJl61wOf3pfb1e9PUBPDdw8drjmf6wT/0v
88YhjZ/0+6OqH+nHn/p8CJx+jsO2XnWMBP4lvIP6+436W/YLZ7yeAtPOjv9D
UmbE/pH8S4XbM//+GN5DfbxgRuwv6d8Xw7ae/N3K4bHLZsTxlHrfAbb9LxrH
C6+aEftH+l9n+CDzThacJP7Z+rnosauuT/zdHbb9cqt115c91B7ZL/XS9V0f
bXh6wyWBm7/6qT2RfFYOhKcFTm95cG3gnpcPp5CPBXAuzxsGW33JvDscnot9
I2Hbj2S/Mtr7NzB5Vq4Xj4Pz8OcE2OpP6utk2OpD+mMJbPNZ8qkU3oF+p8NZ
1PsK2PevarVP9BLoeh+x4/Gh2Xq91Ov5sK1vV0UD4CK1X+rbUmWZH1bAqYGr
F/X6PMmHv8FW/9Lf18C2Xsj+6RV9nvjrdfWH6O8tuCEw0XIffkftE71vhfsE
Lt93eP0l3Ly9y/s7cPn1EWzzQ9a/H14fuP3yIdWX9Ld/wXZel3h/Cmczn/8H
bgrc/vVLuJF56hS8OWEW2Hb90Fm1R7a3KTMdNwduPvwhvDlw/eXHcAH50RrO
CJx+Lp4Z30/mjcv0evFHR3hi4OJ5FWz1JP01E06l/mfBmYHTf7beT+bfrrDN
b6mn3fX+sh+/BT6RcPNUr5mxv8S/veEFgcunfnq99NuBcGHg9jd5cC71MB8+
knD9oEDXI3ob5tfP/D0cziFfRsLjAzdPjIbTAvOMLS/nxsJWn3K/CX791LPJ
8MGEu1+Jj0/C3a8UrmVengbbfil6qoDbsF+tgvOxN9B4y3nKbDiL/JoHm8DN
k4vgbtSHJWqfxGMFbPut7L/q4fbEtwEuod6sgW3/kXniZXgbenkdTlIvN8A2
v06eswPoJtjqX87Dtvr7B24+fx9OQc+7/PWhy+89cB3z2T61R85LDqk9Ui+O
wqfIt0/VfzKvHIft/lD6wxfK0v++8XpFX2fgdPT6PWz7nfS31MrYP7J/S6uM
1yv+uaAyvn9U7qdepJ9LvboUtnqS84kO8KDA9acrYVtPZb7tDFu9ybzTBd6X
cPX0ejgXfecoi366Vcb+kXklF7b59aewfervb4MzqA93wIb+2Bcuov4OgHOo
X4PVPqnnQ2Crf+lHd8M2XyW/7oXT0G+R+kP8WeztC9z5w/3+eurdA/A65s8H
YatnOY+ZBLehHj8MF7C/eRzOp/5MVX/J88t0PfL8SriY59fCexJOn0nYzxtP
wbYey/57Ibye/F2sLPX0Wbgt/n9O7ZP8eEHXK/37RY2nzJdr/XqZ59arv6X+
NsG2n8p58Ub1j+TnFv95wunvPdWj5NNO2NZz2c9/qJ9Lvfmn6kf0f0CfL/46
DG/DXx+rnmReaoa7UY9PqP0y752Es5jnT8PT6I/n4MaEm3daVMX3k/W2hO08
IPNvK7hPwsX3QrgUfV8CW33LfqtdVWyf+LdTVRw/mR8yYFvPZX7LhJsTLr+v
gys5X/sZfIx86FoVx1/08AvY1hs5/7nFX59w89DtsJ3/5H3AnXAh/bMfnEk8
BlXF/hf78uBTCWdfPjyKfjYUtnqX/dcwuCTh6tdweB/5NtL7M3Dn+6Or4vhI
/MbCE9HbBP2+zP+T4XTO+0q8P/FHKZzEH9PgToGJylfrCrgn8a5S/8l8ktB4
Sj2brfqQeWwenE9/fxq2+pR5d4k+X/bry/Vzyb/ndT1yPtfg/Ul/bIQH0c/W
qX9kfnxN9Sf9+U3Vi/j7bXgX9eVdXb/0q+2qB9HfTo2PzJO74ZPUo73qf+n/
B2C7H5DzhCPKUj+Pqb3SD5vhJuL5ubcv4fbPX8ENzD+nvX84H/hO/Snxb1Ht
uJH5qyVcx/71fLiE/nghnEM9b1sd2yf9rH11vH45T+oEdwudvq6GbX+Veecn
8Hi+f111HC/5/g1wPt//OWw4r/pFdRxv+f6tcDnruR2u5f53wv0DflfH/hJ7
B8Hp+CcPbqZe5MMbA+fPoXA2+6dhcArnN8Or/zdeI3U9Uo9G6/plPhjr7UMP
E+Bc9DPZ359+8ojeX/RWCh9En9PgQubDcngF80KV2iP1NAHnsT+dpfpw50dq
74CoQT4N9wlN1C4/egZOC10+Lvf+Zr/9vH5f5qcX4HryvVH9J/12nepN6ut6
jZfUkzfhIurx255537NF7ZN5bjt8lvlnp+eE62cfwrY/yO+96m+J9wHY1m+J
32G4J/n8sfdvwsWjWfUo8+AJ75/ARHI7fBJein9Pe/8nXP06B9t5R+rdD2oc
234h++mWcPuE81cruDzh5oPW+n05T7sEbpNw+6t2+n2p7x1r4udLPmXAOdif
CTdgfxZcmnB6zNbPpT91rYntFX111+dJPe4Bpybc+4Je8ET6Ze+aOB6yX+sL
t024+WwgnIU9v4GPYM8QOJv6UFATx0fmmULYziMyLxd5exOunhfr5zIv3Q83
EZ8HYLsfkL83eBC29Vj6/yR4GvuHh9Wfos/H1F6Z96ZqvKQelcHF+HsmnJ5w
5381sN3/Sj4n4fyEy8+5Gk9Z3wL1l8xfi/V5sl9bptfLPLzS21dronRLXQUX
4r/V8NlaV59egq1e5TzkFXhzws1vb8Cnal0/fwsuIr7vwM3odZv6T/J1h/pf
+tEujZfUzz1qj+hvv/pH5qlD8Hjy6SjcH398Ctt5S+rJcXgMevoCrqMffK0s
8+YZ1avM/9/DlcTrB7VxvOU8MrU2vl7ex7Ssje2T/W4abPujvF9pBbdn/50O
W71LuWsNpzi9HW8D57j6c8kl8AKedymc5Hnt4EGu/pVeruuL6s3SjrCttxKv
K2pj+yL3Nl8Fr3f2X3QNPDfh6lumrjdK36HX1sb+Ej1k1cb+jvKn7qfwOupZ
Nmz1FL1POnYDvCvh6ntX9U/0fi7npto4npJP3WGb/9E8NflmOM29j5zXA85n
P3orbPUk/fA2fV6U/z80uh457+kN1yfceW4fuID87+vj786jg/4aj8g/awbA
bdy8s2eQri96/LeD1b+i17s0HnI+MwQupx7+zl9Pv75b7ZH8Ger9494Xbr0X
tv1M9DMMtvOyxLNI1xvlQ7cR+vxoP3N3MWz3s1F6TRkJn2V+GQWXunn6tdFw
gzsPODgGbqT/jIM30u8e9P52+62+E/x6Avd+8U/K0bg+YzK8jfnvz3Au51GP
wFMCeX984lG4kPcFpV7/bv/T7S+qD5kvp3l/Bu597ZNwNzefzC1X/0m9n+H1
4N7X7Kv063F/X3G22ucH5x8J9Z/UsxBuG4oeh8/yenbz9V/mwBmh2w885fXE
+8D5Xn+c3y/0enX6+FEdvM/9fUOXZ+Ad7ry0/1LYJGWevP9Zr5+k8/cK73/3
/v/553y+uL832loPZ81y9WKVv/8s2X9d8Def/7NkHrvhRR/vWW5+XuPjNdvl
01ofjzluvnjZ18s5cp77wqs+H+ZKv3r/NV9vnnLzyhu+Xsxz+/sN/voFrn5s
9Hpd6PrdJl8fF7m/N9gM37JYrq99F059xv19wDY4e4l7/nZ46RL3/B3+fstk
/Rd+4P253J1H/8PX75Wi18G7fb7VO/s/8vr5q+zHq/fC5ze4eXY/3Nzg3p8c
gLusdv4/BL/woqufR+CyNW4e+5fX01rZnw84Bl+/zvwXWnMz/Q==
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
SET388PhdOL9QnhYtfrzUjiD/LvcjSf+yYK7IqpPV9v5R/R8+1q4PKL1/Ea4
IKL79YnwgYj28zfDhyNqv1y4N6LnA7fBORHdX06xXO1Ni/83FTb6Ivuxu+Ft
EdXrP7v7pd7PdNclH2bDFRGN13lwXkTr7yK3HtG7JXBxRONpBZxdrfW1Ak6p
1vUFLEf0vK7a+VfqZz2chb+b3e+l/2uD94e1H11n7RfWfO+AIxH13wZ4dET7
nWcsV2v/vhH2qlX/X7D2D+t57svOnzLfbmcvme8bNt4iOt+34D0R3a+97Vj+
7oYPhlU/9jp/iN7vt+OF1b4H3Holfr6Ax0e8uLynfw13hzWfDtnnR7T/+dHF
v8RDwhLlWETPjxLhsojq3Qnw4Ijq0S/gkRG110A4O6L+PROOhDX/z4K7wro/
GAb3hrU/GA5vC2s8/tpyRPX8Ejgrovl2GXx9WPXtN/DMsPpr9BLfHjK+B6eh
Jzcs8e0j+/EJ8Oaw7u9ugjvCuv7JsBfR+nwrnEl858ODsP9dcFFE7f9HuDis
+TgdNnoj/cZ98I6w6s0suCSs+VUMm/iQ9zUl8Kawvh9b7OwterDczV/6wVVw
FL2rgo3/pR8I2/FD2u9G4c6w+rPJzUf2Vy1wbljj6S/wMNbzOGzyQ9bzJJyM
XnTCWWHtp7rgtLD2p8/B2WHV+5fc+kS/X4VNPEr93gpvCal/3nT3S37sgk3+
yvn+u/CusO5333frk376QziAfT6GBxFvn8MJYdXrfmdP8fdBO7+wvg/9Hh4f
1vryE2z8I/3qgKW+PaTeHg9vDun+5KSl/u/l/VcKbPRV9O502Oid6PMv4ZSw
9qND4TLy8VzY+Fv68QvgvrD6L8M9L26eNZlLfXtI/zAKTqA+XbnUX688b4x9
Xkifd52db0jnNw7uYn7ZcA7zy7HzD2l83QK3h/W88HY3Pzn/uNNySO33Bzib
eL0b3hPW/mAGHAtrfzgTTg3red2DcAn+ne/8I+fbi+DZYT0/WgonhbW/WwGP
Dqs+VMDpxF8QTiY/q+FoSPWu3tozov1cM3w4pPneZseLaH6ss8+PqH51OHtI
/djg/C392zNufNHjjc6/4q8X7HXq/cvOP2LfbriQeN9m4yGs9fgtOJH8+Rfs
YY/34Iyw9n974YKwngfts/ER0vP5Ay4fRP/6XHzL+dZX1p8h7fcOwcOI3x/c
82X+R+H+kM7/mDJ/fuLPJLgzpPUmucy3n5xfnwqXhHR/fQbcHlL7D4F7Qqp3
Z8P7Q7rfPq/MH1/iOx22+pBR5q9P9GaEfV5Y98dXlPnrlfOG38ImvsRe18Db
0Nfr4LyQ+ns8nEy/9Hv4YEj710lwJKT17H/gorD2M7e78aU+/i+8KaT97R9g
owdynlYE5xNf98DFjHd/me8vGW+Om5/kx3xnP1nfQ+5+Wd9SuDGk9b3czUf+
VsIJ2DMIZ4Y0H2vceuU8qt7aL6T7sTXO39L/tcFJIa3n6+zzQ7of7IB3BbX+
bIArQtofPguXh3T/uhEuC6kevgBHic+X4dEhrd/dbr01Rm4/2QYXhrQffQs+
gv6+7Vjs/Z57vrz/2Qtns/59Nv6Dqh8H3PxE7/vc+qW+feWeL/nyrfU/evWD
je+Q9ltH3fxFX45Z5j9f9o9JsNEbie9k+GBQz19Pdb8Xf5wOd4dU34fAI5nP
0GX++DKf82ATP9L/psOlQa3HGXAa9hkBR4Nqn1HLfHtLfv8WzgxrvR4DeyHV
k+vgDPw1Dk4OqX5lu/Gkvk1a5tsn3t5U3gIPQ29uh019lP3NnXBRkPoHdwS1
v7kbTiB/Zjj7iR7NtBxUfz7oxpP90Tw4FtT95yJ4f1D1Yyl8OKj7gRXwYOZb
AWcx3wA8KKT9ejW8Jaj6UgebeBd/N8O9Qe0PWq29se9aODek+6PHnf9F79bD
BUHdz3bCe4Kq53+D24Man8+78SVfXnL2Er14DQ4Edb+01a1P3jfsgPux/y53
v6znXec/Wc/78LoQ/Sds9FrOZz629g1of/W5e77U1//AB4LerPiB0EFnf8n/
7916xD8/uevSPwxYrjwjpPXyODiJ+D/JsdS3U+C+oOrVoOW+fWW9g+F+9PNX
y/35ST92DmziXc4bzodNvIqeXwibeJJ8vnS57y/p7y9f7vtb/JsFd6K/o+Hk
oOb7tXAq9rgR7glqfk1wz5fv3W6GN6EHk2ET7/K+Iw8uJ57z7XqDql93wSae
ZL/yR7cesdd02OSjxPu9sIkn0ZNZ1j5B1f+5sKknUm9L3PxFj0vhIwGtD8vc
/MWeK2GjX9KfrXbjSb6EnH+lH6mFs4O6329w/hK9isElQbV3OzyI+HvUzieo
f59w9pB8ewq+PqjvK/8KpwS1P/w73BjU84HNbv6yP93i4k3i93U4H3+94eYn
++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
/lzh7CHjV7jrMn4ANvko8Rlx40u/UQePZv/dBA8if1ucPURP/wJXYP/H4GT6
oSfhTOr303AO/eVf3fwknjfBR9DfzbDRVzkv3gKvIz9f/3/x94azj+TTTnt/
le7n33b2Eb15D84m/ve6+BR77XPxIvb6BE5i/97n8kP0s9/Fj/R7B+EC6tn3
zl5SH39y16XfGVCpbOJD5nscHKH/PRG28XVKpW8Pie/TKn17yn7rzEp/PWLf
VDiV/mEYXEb/lgaPJL9/XemvV/rriyt9f0o+jLC/D2o8XFHp+0POf34Lz6Yf
ugY29VXeB1zn1if1c1yl72/xR3alb09ZXw6cyPpy3XXRj9vc/bL/mgIbPRL9
usvZR/JtGtxfpef70+F2/HcvnMb7kVmw0Qvp/+e658l5Xwk8mvwotfbmPKwM
Nvop7wNX2vHxdyXcx34vCPeiZzXOntKP1cP2vK7ZxYf0u21wQZXu19fCCZzf
PA6Xcj633s6vSutjJ7wLvehy90v/+Jyzv9TnF934Yu9X4G705R9wPvVqu/u9
xN9O5y/pJ9+By9Gj3c5fUv/3wkaP5TxhPxxAPw+4+6Ue9sEz0Y+vXH7I/vlb
l0/S/3wP2/OBn+Es/D9gte8PyYfjYKP3sn89ybHo0ylwAedVg+BU6tlgeBDn
4alwGfF1DtxOvzMcTuT86dfwen5/CTyM31+22l+//P4Kd11+fxVs9m8yn2vg
wfz+OngX8x8Pj2e92XA/9smBM4Jqn1w4hj1vg/Poh6bA11Nv7nLzEX9Ng9dV
qR5NhxvpD+6Fy4mHWbAX1PiZC2dTTxbY3/M9SincQXyW2fkEtT8sd9elX6h0
/hQ9DcJGv2V/Wg0fZL9VDycH9PudZnh/QP+9Viu8hXxc6+JH6tHjcDHnzU+6
9Ui+d8JJ1NsuN1/R101wKXryImz0W/T4Fedv2X++Dhu9ln5uu7Un/c9O50+p
Z2/DmcTHbjd/8fdeuBf/7YNnsF/7BE5jP9kHZ9EP9tt4q9LvFw7C+dj3e7iC
/v4n9zzRu/+ij8qq0v30cbDZD4q9ToR7V2t/cDKcwHnaaXAZ+6szYROPou9n
wXvIp2FV/viy/jQ4g3qaDhcQjxlwCfVpRJXvD4mvUXAEPb7SPV/eF4yp8v0j
9XKsm6/s126Ec9i/TLT2YD03u/FlPZOrfP/IevJgo8/Sz+TD0dXaLxfAxeh5
oZuP9Et/gpOoL/fAxk7yvcH9lqn/c+Bc9g/z4dIqjc9FcCH7p6XOH6JHK9z8
9d/nuvHk/K8KLqrSfI648SU/o86+Mr9GZz/pv1rgzCrdrz1i10c//Kjzn3zP
9IT7vdjvKTiwWvXpWTiF85CN8Cb6txfgLur5y7DRJfHva85eEq/bYBNnkq87
YJM/Uo92WUY/e5x9Jf7ed/6WfuoDOJt8+gjOwx6fOXuJnnwJpxJPX7t8knpw
yNlb+s0f7Xzp/4+6fBF//VfAt5+cRyYG/PHlfcxxAd+f+r1twH+evF85Ee6u
0nqTDBdovXj9ZDinSuLtyxQ4UfXntNMCvn1lvNMD/vxlvDPhTv1b+ku4XM/v
2s9yvxd//cqNHzdv39lwkq7/1HPhAPqWZrlK6sVt58PFvF9OD/j+kv9dyoVw
B/udDNjke/x90oFLAr6/RN9HwGb/H38/l3k5nEJ9HwX3aD819zewqSfx95H1
V1r/sB+9Ct5EPbwanqn5f6wHD+a8Zyxs9rtynnu99Sf5f6P1t/o/NN75O26f
ZybApp7F+52ebHiH6uEPN8G9xOskOML5zGS4ET28xbHowa1u/ZI/t8Gefi+y
9Q7nf4mfKfBs/Gn7vl6tFyOnOv/E9zO3Frp4ke8hp7nrog9FcLv2089Nd8+L
nwf0zoBj6PV9cBfnx/dbf+r7wRtnwQc1HooedPkUb9dXzXXxLv3fPJs/nEct
gE29jbfP/Qths/+T/Cx18SbrXWLjm363zNonqO9rl8PX6/uNaLmbn/57I5jz
rD0VNn71feSR1W594t+giz/RszC8TePxrmoXr3F7Lam1+cP7tDp4F+8DG+Aj
7G+abB+v32MfH4P79f3QBa1Wf/T7nvHt8AztJ//0F+tffV+/ap3VH/1e+fHH
HEt8ddj79d/X9D1h7aHfp/xig52ffk95ydM2Hvie/hnrj7Dm01/hBP693d/s
8/TfZz35dzhb/z3Um89ZvarWfuUFO79q3d+/ZPOtRvVji31erda7V+39Uf3e
oNv6p17uD/zD2qNBvw/YBo9u0vG323hv0vF32HhZI/M/5Z/wopieR/8L3tki
8XrTO/CcNl3/u/D57bIfX73bPv8R7Wffh5ev1fcne61+Par2/wD+8jHVz/3w
6g7txz62ev2k7M8nHICHrvf+D3E9aYk=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
5PcX4ETMG18K29zvv1amfvy9xifFz09gU69pf/SrxhvV398lXrBf+FOvp+//
xK1gzkP+dVzh2pvm37PApt5SfTwXXI3+3QWciP3ahStce1O97ybreXm/fxm4
BfNezxWufSh/UnV98n/aCte+FI99wHWYB/rp/XR+3x+cgf3SwBWuP+h8Z7Cu
T/PXMJWXvk80UtZHvGWCk/G8LHCJl/MxW/Tz8fPGg9sw707Q+0m/SSKPl/cr
k1Ue2r9OVf3IntNlPS/X19ngIuwXC4UxnxYpU/wuUf2p3i8HV6F/+UQfxEsQ
bPKPzoNLVX6q1xXgfJzvPSvX43xlLTgd80O1sJfrRQ04E/mwQfzr4/6+CZyD
/dNmjR+y1ztyP/aX74NN/aL3jx+Cm70c7zvANvK9Ua+nebtJ9Pdzfu0T+3lZ
/gOiL/bLX6q/qL99o/Yhf3+v/qd69rM+n/avv4o/PDxPHZf48/J5+0n1H21v
455xr6f58HSwiVfqL2eBh3s5PzqBbS/HT5dn3PVp3rgQnAF7dAcn+difl4Eb
PNxfU3Q9qv+p4GzMz2nKNP/20eupnvaT53t4P34LON/L89RAsNnfkX0HizzI
32HgOi/325HgTC/vbzLB6einWeBm9INstQ/F23hwIurPBJEH+TJJ1sc8MRlc
7eX3O1NEP8TvdLEX9qezwaleXq9QP6f1itTeJF+x+pPiabnah/arXrDp16Rv
EFzr5fOUUrUf5Ve5+pfmyWf1eqoPa8ReXvZHNTjex/uvGmHMG7V6PdWbTbIe
5ok3wUXYX7wDPox6+Z76h96HbgdXefk8bIfEt5fn893gEpxvNqm9KL+bNR5o
PvtC9aXzki/Vn1Qvvtb8oXz7XvOB5pWfNF6pP/yiz6P+97syxdef6i+K11Mq
D/W3jh7I7+X9W7zHtS/Z51yw6ff0/bvOHte/VK8uAGd4+Xyim9zv5/50KdjU
N5pve4JN/6N55yr9nOrpteDjiO90cD3ip6/H9SfNKxlgU//ofPc2cBzqwyCP
aw/qj0M9rj/JPyNEftSv0eA81POxYNPPqB/dp0z59aDYw8vxm6P6kD1zwWa/
SucPj+nzqN49Cc7HvDdN9aHzmFlg43+qx3NFfy//fRp82MP1Z7Hah56/TPTx
8vM94AbUW1v8j/OBsPqP5o0yXZ/23yv1esrf1eAWL9fTF1Q+sv9Loh/q/Svi
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
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH2cVuPWx+ckDJKRMCoMFYNkQkwku1CpZDrlGJRnSpKkJr1Nr6b3qftt
3/fM1CgyFI30YaJIopCMUzE6ySQ9RSGEIimi59q/9Vt7fZ7jnz7fz3651vta
17XvcdGA4f98sF5aWlr7E9PSgn83PnPba792GeWlBf9NnOvtbHHSlPJe5Noy
78CSDd2vv4/cZ65X74pZ52wfSG4112v8Upcvxw8jp5d7l7ZJX9asiLy73Gu3
ombM21PIGXO9HtfP7lgQIWeWe/evvr1BvXLyoXJvxE2nfrZooXKZN23dv5+5
rYqcU+5t/+j33nuWk7eWeft7rbpgxpvkoWVep4Kvay9+n1xX5vXZ89yC9R+p
PGXe0oNb7hhQp/eXe2tGlWbW/4p8oMxrFCz4A7lxuTc4+ePEm38jbyrzJgQK
/00eXO59cvGOo5PTRwvvLRP9G40Or0+6ue39q5uSvTLvP3cMyMhvSR5Y5l3W
N/Hub61Hh+s9PsRJlEvuW+Z9WvTdJW06kbPKvcD8H3UnV5R572dVPzb4LrJf
6jW9ynnwf5TLxJ6DbT1HhTc9Rl5V6gXm2jGB3KLM+2OyE2CGcrnnrPOvhgny
xDLPSZO+rIJcn/551q6ff+/AG3e9SG5W7r32619bi1aSc8u8BkEArSVnlnnP
L1ifVV1Dbl/mBea6fQv5Wr5vBzmN7/va1suLzRvW6Gfyk6Ui3xHyilKRr96Y
0J7Q9zRyA+p7NnlFmReY59QLyRWMx+wxoXw9nfvaXU0uK/W+/fOFg1tuJNeV
ij9us+vPuvT6qyd5Tal34647Y/PyydWl3nnOvFcOIE8v9Q5nu4B4hHysVOJl
9JjQX+7tyR8nk9PKvED9aSX2/iB8MlPkmpQXGeokXEBeXCrx/JzJ2zkw6Evk
TaVecxfOQ1aNCe15a/CCd8itSr2LAgE2kg+VSr59Si4u9S6c8UOvVf9LHlgq
/txH3s14O6j2LvUC8xb+SV5WKvXgxLHC9UslHxqSa0q9yiYuwDPt+jvOva9d
NDZc78vxLkGv0PtTUq+uJd+aEv06kDOpX5exoT5VrtzN7kWenvI+HPP2003u
Ix9JSXwNJKelJB6GkWtT3vCggIwlF9B/U8j7Ut4hF77fzSEXlXr5QYEsI1eU
Sj1aSK4qlXq8hHwsJfZeTl6fkvxZTT6QkvxeT15DeTaTC1Miz2fkrSkvKMdf
7yYvTnlPutc99r3qmxT7/KrypcQ+f5FzSiWfTy4K9UW+ZJAnpiS+m5C9lNTD
5uTsUq+lU++WK8nrkt7mTe6/68iNU15QTu/1yHtTUv9vJ49Kee7pyNDetl4Q
Xkf7FoX+Rn4MIlemvCAcGxSSNyXFvuPIDVJeEL4XTCN/kfKufOWpn5dEyRVJ
0WeuypOU+HuaXJeU/HqhKLR3RuDgV8jRpHfMlYs71pAPJL3Frtx89r6+P+W5
bpDd92OTB/6pI9cmJX6/ImemPPTvH8jrk1IffyPXT0n9+Zs8nfZIHxeuPy4I
6EZkPyX53ZRcnBL/thwX6oP61Zq8Pyn9LpdckpL+2XFcaP+/Xbhf0p1clZT8
6TPu/9vz/nGhfwJ85SFyi5TMHyPIQ1NSX8aTDyUl3qfbepg3YuNC+8Ef88gu
3jEPVJJXJKU/LDUO3L3hVfIXSaknb5FHJcWfG0xf1Lda8r6k5Nt2souHhe51
3feYvRHf+8mtUhIPh1U/Pn+cvI7PnzJeuNqX5xuR85OyfrPx4fvxfEu9n/Jf
Ra7zRf5cex76dyJnp6T/dCdXMp7vGh/qX+HCZ9395Ftp/8H2PPJ7xPjQ3/Df
BPLgpBeUyxXTx4f6Yr6Jk2uS0q/mkfskJX6eIfdNSn1ZSu6a9AJ3Zq0gH/G9
+U+4/94ir/clfj+w599z6ZWoVXv5Ug8+J5ckZZ7cQ/aT0o9+JNdPyrx7mHxt
UvLvOLkwKfXolAnCmUnJ30ZkV09/mugM1Iy825f8b2kcjDt3XjUhtIf4i5yV
9D5w5bdjJ32fL/buTk5PetcE/91FPuRL/bpf3+eLvQZPCPVF/RtBzkjKvDeB
PDAp9WL6hNCf6AcxsosP9O955FbUt5LcjPouJe/zZV561Vjyy+QPytuaDeQe
jI9asovfj135f2472cUT+vMe8jFf/Luf7OIT/x4mr/Nl3jtOrvClH6dPDO2D
ftNoYrg+5u2mZBcvyIeW5Epf4rk1ucqX+STX3od47Ej+wpf5sju51pd46kPO
9b1/uvD7oR/Z5Qf6wUNkl/+BeWsLTR7Ew3hynu91DQw6jbzGl34WI++mfeaS
u9I+leRi+vMFcuOk56x71c5XTF/pX6Yf6u375Ft9L0iXKz7W+5PeEeeuBXUq
H/vNV+RlSfHHDyYP4ueQ6ReYo9ffap+krHfyJOGipKx3Jnm/L/2piV73ZZ5q
MSmUF/pdSR7oi37XkZf5Uk89cjr7++32POzZm7zC94LxJdKXvNf3gnD5/UGy
yz/sd4dPCv2N+l1EdvUpCKe2U43RPyP2POKlfFJoD8xnC8kuXjBPLyEXsN4v
J7v6I/PhpNB/2B+sJzfwvWC7OGUzOYv5sM3uh/136/tZb74j19Eev5Kzfa9b
UHCPkdOSXsOgAJ04me9PeucGA9wZ5Gzme+bk0J6oTxdPDuXHvHkF2dUn7H+u
Jbv5YHRQsDqQ3TwC+bqQXfxCvl7kHNaze8mufiDfHiC7eoj6++jk0J7I7zEm
H+xXTC7ivDWb/AXjKWX6Ij+fJHtJqV/PkfPo35fJaT73X+S6hNSfd8iLfW9s
sMBGcm1C9kdbyS6e0Y92ktv7Mu9/S+7jy/x0QNdPiD5/kF08QZ8THg/fh/1T
A/K6hOx3ziGP8r1gXHvqQnIPX+bvbPJE1tOryYWMnxvJ1/pSv2+z66iHPcmV
7I932/qYJ/qTcxOS70PI+dR/5OOhPRFvk8hVccmHmeQM3/tlizOQTy5ISP9+
grwvLv33WXIL1vdl5Gzmz0pyRUL8/7bKk5D5qMb0RT/45PHQ/o8GDfFzcklC
6utesstPzEM/kgcn5Hznd/JQX/pjWrHwEa5fn/wk69Mp5CzaryE53ed8QvZ8
mf/PJeckpN81I9ckJF+yikP5Yf+W5DJf9nOXF4f+gX6tyeviEi/XkLsmpN7m
kgsTch7WnuwnuJ8oDu0P+3QmZ8al3nYjF8dlPrxT149LPvfR+xmf+bY+8rEf
uT3r3QDyqoTMO4OKQ/9gnnqEXJWQ+wvt/bh/FLmA94+z9+H+yaof759qDHlm
kVdwHozadcjvk938BH3LyXWMn/nkZexHC9Vf7C+L1J/sd1UWD8ifZeRWzO/l
5Pq+7BdeI7t8Q31fTd7NeFhr/kf8rNf4Skh/qVF7xiXeNiv7Ul+26PsTst/f
pvEYl3jeYfGOeXe3yp+QfrhX/ZGQev+drYd54Se9Py7z1C8mH+rf7+Yv9KNj
5MGsB2lTwuuBusNOJPsx2W+cSnb1A/2tIdnlX1AOB56lz8el/mdOCd+P/W8z
8u641O+L9Lov+/mWU0L7wv+XTwnlhz+vIlfHJP+uIa+jf3LJhXGpTzepfHE5
3+5Iro1JP+9MLorLfr07OTsu8/yd5CMxsV8f5bicD9yj8vmyv+ynz/veoOC/
AWZP7McesvehXj+i8sel3xeSXT1HPoxSfVlfxpErE9J/J5s9Ue+mmr0QT7NM
XvTXqN4fE/18XT8m53Xl+v649M/5ZBd/8PdCkw/z3yJyTUzm0SpyBuvPMpMP
/ltu/sG8s5Ls4hfz+2qzF+r/Wr0/Jue575Er4iJvjcZjTOTdrPdT3k8s/rBf
22b64t8dFg+oH7uU41Lv95q9YN99ZJe/iJ8f1T9RLyjv2b+QDyQknw6TW3D+
+dPiG/GQNpXvi8v5Uf2poT1Q704hZ8SlHp0+NdQP9mpE9jg/navvi0n+NyWv
isn+IGtq6C/MBy3JLn8Rj5eRC+JSz1ubPMi3q8lFCalv15Nd/MJf7VUe1h9P
n49JPbmNXBeX/Xg31Scu+7ueKh/17012/kN/vls5xv0J2fVD2L+/vj8m9n+Q
3ID5OITs8g/zxnByDuvNSGPkV5HaMy7fayaa/Pg+NoWcwXowk+ziHfPgHHse
9S6h9o7LPFBKzuS8W0HOY74+pfaOy/7qGXse8fS8rhcVfV40eaDPy+TKmOiz
wuTHPLVK14/LfPqWrYd6/y7Z5Rfq9wZdLyH9eyPZ5RP88zG5hPV1K9n5C+f7
2/X+qOx3d5JdPGKe/ors4hX2+Yaczn76g8obk3p9gOyzfx0ye+J76FGyiw/0
l79UnrjMq/WmCbt4R789meziEfuT06aF8uH7VwbZ1VfUu7PJdVGpz+eRXb3A
PHoB2dVP5MPF00J7YR6/lNw1Lv5rNS20V2Cep3PIrh5hfmhLrmT9bmfy430d
yFWM71tUn4TI18X0gXw9lKMiXx7Z9VfE111mD5wX3ktOi8v5x/3k3JjY7wHV
l/H6kD2P+WCoPY/5sJDs4gvndaNtffh3vOmH8+3Jav+4nB9NI7t5A/PdLH0/
+1+UXMz4S+r1mORnObkoJvVuPtnlA+a5haYf8n0ROYf5UUXOZ/1aRnb9D/1j
ufo7KvPbSr0el3q82uIJ/lpLzmK/f0/9HRX71ph/Ee+bNH5i0o8/sXhB/nxq
+sMen+v1qMx/u/R6XM6D9pCzY3I+v8/8gfq33+IV51sHzb+Y9w7r+xMSv39o
PFP+46of5T9hOtejP9PJtZzvGpBdfuP8+kyyiy/sr8+ZHtoL9m9CrmO9u9De
h/12c1sP8Z09PbQn6kMrZdabNuScmOyPryMfiMt5ww3kPNrrZnIR6+st00P7
w99dbX3UjzvILn4wv/bS+9nP/qXrRWWeuZfs4gn98X/0ekzm2wd0/Zicpw1W
+7E/PErOiMl6I8heTNYbQz7C/Bhv+kC/x/V56jeNvC8q/b3E9MO/MX0/7Zkk
u/xHPs5Vf8bkPGq++jMm+7GnyS7eMP8t0vfHpJ9XkV18YT+4zOIF/Wc52fVH
zIevqTzcv662+EE9XGv2RXy+p/pGpX/X6P0Jb64rt99u0vU4P39CrmD93Wb2
hb0/N3/g+88utQf132Pxhvqxz96Her/fGP3tIDmX+fKb5Qfq1R+aD1GZt46b
/1FfTpgh7PID+8d0cjHju8GM0B44fz1zRrg+/HE2OYf1vQl5X0TkuWBGuD7k
aU52/Q3zbzbZxSv6casZob1hnzbkGtqnrb6f+X0DuSQq/boDOTsq9eQWsssP
+KuLyh+V+tXD9EN/66Xvi3nBeBO7y66j3txLdvmO/c395GrWtwfILn8w3zxE
zmX+DCV7rEeF+jz9OZrs6hH2R+PUHtx/TiZncr81jeziB/uBWWSXP5A3qvan
vL7aOyrzern5B/XlCWP4e6HZA/PBs2Sf9l1CTuf+6EXzL+pdteofk/3sCpWP
9fwNtRfj823yKubLu+SurBcfaLzFZL+0UeM1Jt8baskFtP9W9Xdc9Nluz0Of
nRovOn+S3X4T5zPfkPM5r/1g8qK//mzxMDI4EDqk+nOeO2r2gn/+MvkwP9Sb
Kez6CfrlSeRaxv9pM0N50N/OIFdwfmtMdvUW+maSi1g/z58Z+gfz2EVkVw9x
3nCJckzq+eUzQ/8hn68iV3K+v2Zm6E/4N5dcwPPK9nY/8r2j6sd62Jm8Kir5
1Y3s4hW/d7uTnMf5vLfpj+8d+fY84rmvyY/61V/twf3Kg2qPqNhrCLmK8T5M
9YlLPRmp9ud8MtbuR7+daPZBPS5WfdkfZqg9aM/Z5JyozGdxZeZLyvTDPDJP
n4/Ifn8BuY71qtLkg70XmzyIvxfILt7w70vk/Kjk2ysmH75Xvm72x3z4pumD
84F1ZFffsD9db9cRvx+SM1i/N5PdPID98BaVn/uZbRaPyOcdZNdv4M9dFv+Y
R/aS05jv+zSeorI//pHs8hHnFwf1/azHhzWeYjLf/mHyIx6OW7xg3jlhlrCL
hyD8b0wnZ3C/2oDs5m2c/545K5QPvx852xjx1ETfF5P9ywXkauZnc7KrX/h9
zqVkV29Rr1qRKxmPObNCf+E8ra09j9/HtCMPjsj1DrNC++N6p1mhvdCPupCL
eL27ysfrecaoH33Ihbx+z38930+vcx4eoPaKyvVBZJe/kO8Rck1Erg8nV/D6
KHI29/dF5Cr2p0n6PO03xewP+84ku3iC/eeQ86IyXyXMfvBfKbkgKv6tMH3g
/yfVP1E5X37G/IX4eU7Xj8p+fan6Lyrx95LKw371qsYX69XrFi+I7zXmb8T/
OmPUu/fV/lGZZz9U/0dlv/IReR3PN7eofqynn5l9sJ/fYfpiXt5t9sT+fC/Z
4/nhd+YP1PMfya6/YD/4i/pnjtSfw8qct/60fEL9Ok72OS+cUBLqi/qXTq7Q
/SHZ1Tf05zNLQn0w752tzPmqCTmd+5cLSkL7of83Jx+IyHx7KdnVM5x3tSLn
Mp5z7P2Ip7b6PsZLO/I6xkMH8pGIzLOdyMU87+hSEtof/uxOLuF+Pa8k9C/8
1YfsRb3g+K7xPeQ8zoP9SkJ/o94PUHvF5PvuIF0/KucxQ0pC/8Hew3V9zqMj
7Tr2X0Ulof/lfFTXYz+covbjvDXD5EF+z9H3xeT7SVztT3uVqv/5/WieXUf8
P2n2R3xXmryYf58ju/qO/ecLJj/i8yX1B+3xij2P+HtN4yUq886b5g/E11qy
m8fxfWE92eU/4qfGrqMebjb9oe8nKh/P97aRa9jPPjd5Zb9IruT+bY/6Pyb+
32fy4/cl+y0e8O9BfZ7fT36zeMZ8d5Tclfnyt74/LvuVerND+0Ofk42hz2nk
LM6nGeRqft9oTHb1CPF8nt2Pef98sosn7A8vJrv5H/65hFzD8+HLyYMTcj57
FbmY+X2NXuf3jNzZoT/QL9or0/4dVR6eJ91G1nmlG1nPK3uSVzGeetv6qGd3
k12/Qb26T5nzdYHaJyr2HajvZ/97eHboX8yrj84O/YX922N2P877x5BzEjKf
TTB7Ix4eV/tFJb6nkUtYP0vIafzeETX9YL8kOZvzTDk5Py79bL7Kx/q10ORF
P1lEdvGMeXMJ2eUv6s+L5DqeJ1WTCynPCvMP6vEbJh/691tq36Vin3fJDy0X
+2yw+EK+bNT4jUl/+phcwP3df9Q/9Fed2Rv5/QXZzSuYN740f6Pff232QD/+
XuM5KvHzk9qT53O/6vvY7343f2C/8KfFA37/kzYnXA/5V59cxPP4U8hu3kN9
PJ1cxf7daE7oD+zXzpkT+gv1vgnZ7Vew37+Q7HPea06uZr3ONnng/1a6HvcL
bcjFtHdbsuu3OL9vRx7M8+wO5Dqe73SaE9of81cXXT8mvyfqbvog3vLmhPbE
en3mhPZHPuaT07k/60cu4X65v+pL/QaR83meMoTs5mHsX4eb/WDPkbY+6utY
0w/9cSI5m/Npsa7P/J5B1u8Bs8luHkO9iZMrGS8p9XdEzoPn6vPsPwv0/qic
7z2t67O+LbZ4wfxQZfqhXiwjZ0YlH5ZrvPH70Uq9HpP902qzJ+z1tq2P+HtP
/RmR748fkAu4P95o8iDfay1+MG9v1fUikl/bybURkX+n+Q/75S/VPxHpb9/Y
+vD39xrvUalnP2s8c//6qzHmqSPkdRE5bz9G9vi9Jy1CfSIyH54YCe2J/nIK
uYb50ZDsRyR+Gun1iMwb55B30x5NyRUR8eeF5LyI9NcWZLd/Rf3PtvUQ/62M
Mf+2IRdFpJ62JedzP36D6hOVeaoDOZv27URex3zqovJGpN92j4T+x/4mj1zN
etiHXMt5NN/ej3jrR/ZYf/qTNV8GkY9wnhhCdv0B33eGkYsj8r6R5DS+byx5
MN830fTH+4ptPcg33eyLeJpt+mO/GiO7eIO+KXJXnqfMtfWQX/PNPpgnn1b5
WB8Wkevojyp9P/dfy8jp9G+12iMi9Wal+RvzxBv2POLlbbLLB9TLdy1+8T10
AzmH52Ebzb+Yzz82fyGet9r9yO86u4757Av1f0TOS740fVEvvjb7It++N/kx
r/xk8qM//KL2iUj/+518gPH1p9kX8Xpc7cX+Vp/nZsXcv6Ur0z6nk129xO/v
zoyG/kS9OptcwPOJJtFQXvSnC6KhvzHfNo+G9sa8c2k01Bf19ApyPuMxh5wV
kfi5luxzXsk1eXG+exO5iPWhIzmT/bGzXYd/uqn8MalfPcnODqjnve06+tHd
5MqI5Nd9ZBcPiN8Cssfz6YGqH88fHrb7Ue8eJbt6hnlvBLma5zFjzN6ox+PV
Hvz3cZMX9Wea2Q/rzyK7eQPrR8l1XF/PTY/w/LaM7PbjmDee0Pu5/35K1+N+
8Rm1B+vp83Y/7L9U7c3z/5fNX+jfr9rzmC9fV/0Zz2vUXqy/68x/OC9eb/ZC
fn5IXsX5aDPZ9Ufk0xaLN+znt6l9I1JvPrf4kt8LkHN4vr+HXMV8/pbs6inm
pf2qD+vxAY33qMx7hyz+0c+Omvzoj38ZY96px31sFuU9idyV8++pZFdf4N8z
yKsY32eR8/n97VzyAZ4XN4uF9sf8kKXPc3/cguzqOfL7MnIJ5+srVT7+nqAN
2WM8XEd2+Y/znxv0/ojMQzeTXX7ie8AtsdC/6J9dyIX0Rw9j6Kf7fOdf6NeH
XMH6cU8s9B/2X/3sedSv/mQ9/xxk+uN8fwi5jv4bRnZ9EfE20vyD+X8s2c0z
OO+baO+DPYpNPvn7SX0fvwfONvvC3zFyHvd7SdUnIvVsrr0f89h8iwf094Wq
H+fdReQMnj8uMfmRfy+a/Difqyancz+xwuwpv6cju3jG/PiW+R/9+R2LN9j7
fbMn6su/dT32q4/Irs8j/rao/JwnP1P7RHh+q+/n9/ddpg/OE/bqehGpn/vI
br5EP9xv74M/D1o8Yv/8m8UL5p+jZDdfyN+zmT/h/3rxUF/kw0lkNy9j/3oa
OZ398Qyyzi2N46F90M8y7XmcJzWz9yO+LiJnc3/V0t6H+y8jF/D+1uTdPK+8
mpzJ8/bryJW8/0ay279Bnpvjob1w/y3/JX9Xsquv0LeHPk/75Nl12KcPOY2/
R7uHXMx5qJ+ux3mxPzmf9X6QrY96NIScw/OyYfo+nr+OVHuxn40lu/qMfjKB
fITfS4rJhYzP6WRX7zAflpg+mBdi5CrW06TKF5X9aTnZ535rvvkPv99ZSHbz
E/5e61nzH/JxiemHfvSiysfz5pftfuT7Cl2P++VVau+o1Nc15K6cj96xeEA9
fl/Xi8r+80PzD+a5j0wfzD9b7H70s20mL/7dYevB37vItewneyxekM/fkvX7
1X57P+bBA3Y/fr9wyOwN+x41f6N+/UX2WO/+kQgZ++mTyLmcT04l7+Z+pCG5
iOdpZ5EruV87l1zL7x1NE6G+yKcscjr1b0HOoP7Z5GrON63Irh6jP7Uh13G/
31bv5zzSjuzqE74XdFB52C87JUL/Yb/W2fTHfNadnEZ97jR9oU/vRGhP6JNP
zuT+vK89j3m5QO3Hej7QGPPSw4nQf/DPo6Y/fm8wglzF/j+GnMPz0vHkdYzP
yeQs7p+mmf6oR7NUfn4/iZg+OP9LkPOYz2XqP+ZnhcUD5HvS7In56xlyIfdr
z5l9MQ+/YP7H75lesvVgv1fUv6xPr5l8OA9ZTa7geedai1f08/fUnhHx7we2
HuJ1E7mA+Vqr+kWkH20lu36O+lln9yP+dpp/ME99afIjn762fIA9vjd/oZ78
ZPGBePrF7IV+cNj8hXnzT3se8/9xje854q9/+MJuXsB5ZH1yBX/vcBK5eg5/
b0t2+YjvK6eSi9hvGvih/VHuGvrh+kG8/ZRBdvUxqD9nnUXO53pnkzO4vz5X
r0v9Kz7PD/0Z1JvFTVVe+ut8P7RfYN79F9r7A/3PvJicxfrWguz6Z5C+91xi
jHjIJg+W/Km8nJzH7xmtTJ/ge9K+1nY/6nsbux58n8u5Ru3F8/i2fuivYJ4a
e736Q34/OL8dWf/+4Ubybv5+9ya9LvPliR7ZzXM47+lE3sfvb7eaPMj/zmaP
wP+prsrye4OV3YyDeaeuh70vWP6PnuRV3J/3Uo7K+UxvlZf18C6NB9aDu8m5
nOfuUflE3o33mX0QP/3M/vBngcVjkA/XDlD7y37t7oHkEv4ecpDGF+vDYLNv
ME+/NcTkC84Ddg81+VGvh5s90O9GkAtlHug80vTH98XRZE/O3+eMtfzC/DdO
9Y/JedQEy59gfD4wyfyL/Cw2faDvVIsnzJfT7Tq+1860eMGfC5VofvA8fA6Z
51lfRC1+g/g/Ftd4on+Tqk9c6lmp+kv+XrJ/ub0/sNfUefo89wNP2PuQPwvU
3vxe9ZTJE8THyZXkGvk+eOmzWo/k901dF5NdfQ3myYeft/yBvavIR+T7/4tL
zd6Ir2Uqj/w9zP6X1F5x7L9OX671QL7vtn5V5ePfm63U+IxLPr2u/uPvKd4w
+wfnuS+/qc/L30N9/Bb5Vv798FqNZ/49/rtqb1/qx3r1D///DBu0HvL/V1Kj
8ZnE8/6/dX3+/y82kZulZP2P1J4pWb+W3KIU8p/xH5WnVM6jP9XnyxCvPT8j
F5eJ/tvJZfL/S4zvUH/MlXl2p+o7T76f7CKvmSf2/1Lz4wmpn3tV/idkHvtG
82s+9ufd9pH3L/D+D5HjWBY=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH98l/P6x3cShmQlTHUYFUOyEIvkLlQqWaccQzmrk0yoJWr9XrVq9fl1
fz7baopEaOhBUUxKQzKnMJ1kiW9RGEKR5Gff9/26Xtd9PQ7/9Hg+7s/9vt/X
7+t63/ecNXzMP+5okpaW1u3otLTg382PXvfij73v99KC/9pXep+0P2ZG5UCy
X+ntX76p3+W3kTMqvSYXzD11xwhy20qv1bO9P500mpxT6Z3bOX1F22Ly4Aqv
6+q68a/O0OsVXv/L5/UoiJCnVHi3r72+WZNKclmFN/aq4z9ctoTcqsKbVfuf
R6+r1udXeDve/XnQnlV2fd/AmjNmv0JuWuH1LPi8/uw3ySMqvMF7nli88V1y
xwrv6QNbbxjeQN5S7q27vzyz6Wfk3EqvZfDAb8h7y73C5LdTrv5J5a3wJgcC
/0neVu69f/bOX6alPyBcWyHytyTfU+5NvbrL7WvbkNPLvf/eMDwjvwPZL/fO
G5J4/adO5I3l3vRRbke5yhXeB8VfndO5Jzm/wgvU/24/claF92bWyvsKbyI3
q/DaXOQs+C/y4XLRZyG5vsJzVHTVfeTsci9Q187JZK/C+3Wa28BsckO557Tz
z+YJcsdyz+0mfUWV7i8l9nmM3Krc+/utI67c9Qy5oNx78cc/thWvsf00Cxxo
A3lKuffk4o1ZK+vseqCu67cqp2S9neQ6rvc5uabcy4stHN3ye/JK7u8wObNc
9tdkvHBZSuQ9gdy+XOQ9hfxxygvUc/yZ5GbUX/b4UL4BznxdLyYXp7wvf3vq
wNYryVnlYo/ryPnl3mMuvP4YQHb+cOWuG2ML88nO/0536r1wOHlEuXco2znE
3eRtKfGXB8aH9nKrJ7+dNj7UTyD+rLLxoT4D98lMkTPKvcg9boeLx4f6gD8/
ob9Peb0ChT5L9sq9ds6dR9XY/q8NFnjN9nNWsIHNpg/E2wfklSnvzNnfDKz5
P31eSuzZSC6lvx0gd0x5gXqLfiPvTkk+OHqCcEVK4qE52U95S1s7B88kX5vy
XnPmffEs8v6k9+kkF6AXTAjtiXx1KXkw5etOXpES+XqToymv2qW7eQPJzl/e
Hv/qI61vmxDKB/8aQX48Jf4wmnww6Y0JEsgEuw77zbD1Dzr3/Wo+uTbl5QcJ
ssLWRz5aovcnJR8vJ+9Nib5XkbulJH7WkhtSEt8byVUp2c875Bzu50PyiJQX
pOPPd6t+k95Dbrn7vrb1oZ8fyXlJ0c8fyimJ52OLQ3kRLxnF4Xrw79bkZinJ
h+3IRSmvgxPvmgvJfVLeO1vcf5eR01NekE5v9ez3yP/Xk/cmPXd35J5B5Pqk
F7jXL0PIW5ISHyPJtUkvcMdmReSl1O9Eck3SC9z3jFnk1Unvwucf/n55lJyf
EnkWkKuT4n+PkFckJb6eIvdPeRmBgZ8nt016v7t0ccM6+/3jLt18+CZ5StJz
1SB7yHtk50+wT4PtD/77GXm/76F+f6PPS0p+/Mn0j/zzJ3kb9ZE+kftJeRMD
h25JPpyU+G5DjibFvh3ILr6QvzpNDPWHepdLzkpK/exBrkh6fzp3P6cfOTsp
8TOYnE7/uJ1cl/QCfP5Oux/9x1i9n/llEnlEUvy9dGJof/QbMfJBX+yxkFyW
lH5gqe0H9eHpiaH+A3NveoGcxnyynnxpUuy5iewlJb/VkzMZ/zvIGSlviVuu
3x5yn6T49z7yPfSHQ+Q83n/E5Mf9x02ifny5vyW5is9vS+7P+zuQD/uy/4sm
hetj/7mTQvkgf09y+6TUn37kIfTnm8gVvlfl3Kf2dvJS6r+QnJuU+B5L3ueL
/SaT7/e9IF2uLiW3Skp/EycXJaVeLSQ3o/88Sv7Yl/zyNNnFX2DOrNXk331v
0YPuv/WTQvvCf9+y+99w4ZWoJxf4kg8+Iu/1pZ/cQy7zpR59S/Z96XcPkbMY
f0fILh6Rj46bLLw7IfHbklzse99NcQpqS270Jf47TA71E7Q7N15ErvFpL3JH
33vLpd8ePcmZvui7H7mV710S/HcTeYUv+ev2yf+rr0Ky8w/kv7Hklb70e5PJ
I5gvSu066kFscqgP1O+F5Czmq6XksoTI+/Tk0J7ol14gV9A/108O9Rekt3Wb
7Hnwj3pyre+959L/EztU/qTU5z1kl19h330qry//HiLnJKXfO6L2SEo9Tp8S
yoN605K80Zd+uw15KfNJB3Iu/bnTlFDf6E9yyU3pjz3IQ3zpL/uRi+hPg8ku
X/3Dud83Q8nOH1AP7iRf63uBeuuLyHX0h0nkQt/rEyh0FtnFA+pZbEooP/Sz
QJ+foFzkPrTnU+RLfc9p96JPnidP8Vm/TF/It2+S+/teEC4XvGf3H3bmWtxA
rvel3nxGTqc9viG7+ID/HCR7vheoY+Cfqk/m92Onhs/H81qQG3ypT62nhvZC
P9V+avh8yHcheR3lu4zs/Av51CO7+ER9v56cTn0OUk56QfsSGUJ2+SRwl5/v
IO/2Zd4dY/tB/i4mu/gN3KnLTHLUl/oZIau/VE4N7YP+bAn5cEL66eW2HuJp
Fdn5i/SH5Md9mQ822vOCcXHGO1NDeyEetqv8CdH/bnJNQvLNV+Rc6uNH8j2+
1zdIuL+TXfw0DxLQ0dOEt/jeaUEDdxLZ+SPiPXNaaB/kp7PJ3dhvXjAttA/m
n0vJrr48ECSs7uQa5sPe5P3c30DyNl/y2a3kKsbbv8l7mX/vJbv6gfgePy20
H/RXQnb1Af3WPLsf/pQiu3yH+HyIXMj89YTJC/s+Rx7sc/7S5zP/vKbPj3sT
ggdsJjv/x3y0jez8AfXoE10/If3+l2SXj9A/7SevTIg8v+p+Kc9R02nfhMxP
zcilvsw7p5LzEl7Qrj18JrkhLv139vRQP8inF5PT42KfK8ku/yF/X6f3JyQf
DiBnJKQ+3kxewX5iGNnVV8T7KHIh5R9n+4G/TSV/zHiYQ85KeD9sdQryySUJ
qd8PTg/1j/r7GNlPSH5fYfcjftbY72H/V6eH9kJ/VKfyxqUevD89tMe9QUH8
iLw/Lvl1r62Hfuhbcr4v5zs/k6viUh/TSnh/Qp7flFwdl/x0XEmoD+ivOble
+5OSUH/o/08jO39CvWur6yUkXrL0/rjovwO5KiHz3PlkV/8hXydyn7j4yyUl
of6Qb3NLQnviPKyb3h/nPGEM/fQqCe2BfNuX7OoZ+sMbyTmM58HkNF/8M5/s
8hvicSi5I+vNcHKU/c5IXS8h/dTd5DzmxyK9npTf36/X2X9NtPXw+2nkpvz9
THIx88Nccn5S9h9Ve3C+9fV+ztuV5BGcJxaRM5KinyXk1ZzPlpGv5fxQrfIn
JX5WkF1/BnutIrflvPCi7R/5fa1eZ/3dYP4I/9lI9hJSX+rMXvC3d9Q/EpJf
ttp1zPvbyQX0552qn5j0u7vVnjGph3vNv5HvvyJnJqRf+I7s8hv6qR/sech/
P5u9UY9+V45LPkibQf36XiDu6KPJdTGZN44nV8WkvjWfET4/SIcjTianxSX/
Z5J3x2T+bWu/R/4+i+zHZJ7vMCPcP+x/vu6H8XSRXo9L/F1CLmK85s4I7YH8
dJWun5Dz7R5kVx9Qz3uRXT7BvN6P7PIV+vkbyS6+ob/Btl+cD9xCdvGI+XKo
yhv3Rgb/DSe7fIN57E5yfUzy9d3ktqz3RXYd8XA/uSEm/jpR109I/Z1GLotJ
vptJzouJP81V/SSkvkbJjZTPJzv/w3ldpa4Xl/q5SPUZF3svIdfEpf9bZvpF
P1qt6zH/rFB/iYv9VpEL49LvrFF549K/r1V7M/9vIGfF5Tz3Ddsf9ltHXsp6
/w65mP75vu0X89p28x/8u1P9ISb5Y5c9D/l+r+kH+m1Uf4mJ/3xLLol7QXrP
/kH1FZN4OmTPR//zm/kP/CFtJteLy/lRU7KzN/LdcTNDeZGPTiSvpL5aKsfE
vqeRM+MS/23Irj/BfJBFro1Jf9DBrsMfzyPXxCSfd1KOSrxdTM6JSX67nFxH
e3Uje3y+Z/Ign1xn8mAe72vPx3w3YGZoH8g/iLw7KvX5ZnIh8+UQsqu30P8w
8n7msztmhvZBPI4iu/yEfmOMrYd8M47s4g/xVazyxeR9zRTdX0Lej83Q/cUl
H8whH45JPzhffx+TfJcw+dAPlKs+49LvVpn+Yc+Hyc6fMV89SnbxDX96UuWP
iTzPkJ1/QZ7nzB6QZzU5Oyb9VI3Ji/50PbmW+f51srMP8vcmsvM/1O/N5Ez2
T++RXbwjPraZfnG+v8Pkw7z7icmPfvoz8tKo6OcL1X9U/O0bcgPz9X7dX0Ls
fVD3E5P3ob+Qq1lf/jD9oF9tMit8PurtsWTnL5hPTpgV6g/vvzLIzt+R704h
r+S8cDo5Lyr96Bl6f0zi4Wyyq+/ox88lp9F+Hcmuvw7U80iOckz6hy6zQnmR
v7vOCu2H9bobY71ryIWsH73JWeyX+6s8UdlfHtlnvrrJ5Md54a1kl69w/nE7
uYr9yr91PfrrneSCmPQH95BdfkJ/WKT6iMt53QNk1+/AvpPILl/gfHsa2fkn
zo9mqf6j0t/NJdew/kVNf/C/pNqH81ql6R/5bhF5f1T6uSV2P+J9Gdn1A4iP
anJRTPLXCrKLL9SPVeTDUenf1pj8yMdr9Xm01wbbP+z1BrmY+q2z/cPft+j6
rMfv6/WYxM8HZn/o4yOTF/3fLrLrz3AetMfkxfl8o8UH8t8+8wecbx1Qf4lJ
v3dI4ycm/vur+RP2f0T9Myr7P6o0XA/2TC8N9YV606w01BfOr1uUhvJhvj6V
nE/9ty4N10e+O7M01B/m7XZ2P/w7uzTcL/JDR3IW61tncnZc5uPLbL84b7iC
XE19XV0a6hv59RrdX1Ts3ceej/xxgz4/Kv3rQHJGTOrZP8lF7GduJaezP/hX
aah/9Lf/Jrv4wXlaIbmA/nVvaWhvPG8sOY39y3jVN+vXJFsf8k2365Bvll1H
fS8zfeLfGHkp9ZnU/UUlHheQXT+B86hFZNfPYB57xBj93zKTB/W8muziB/Pg
CpWH/dkqsstH6A9fVH3GZX5dq+szX28wfcM/39D1o1K/69T+UW+BS7dfbiHn
sh993+SDvrerfjiffKT6iMr7n13kGsq/R+3L84ZG8wfk+322P9S3A/p8xstP
5Nqo5KtfLT7Qbx0x+yO/HDVb2NUDzI/pZJdf4d/NZof2xPlri9n/a49TyGVR
ye+tyRq/Z8wO94/9tCMXRKX/zSa7/g71uKM9D/rpTM6jfrrodfYzV5Cd/VGv
u9vzkE+uIbv4hL16k11+QP7qb/Kivg0kO38N2pvYTXo9KvnmVpU/KvPN7eSw
/qk87G/uJNdFJH7u0fWjko+KjGHPB0yfmI8m2nXMn9Ns/8gfs0xfmAfmmr6w
3yjZ5W/s1ye7fh79eqWtj/zyIDmN9l5C1v7lMbUf9bvcGPPRM2RX/5DvVpIz
ozLPria7/Ih8/jK5OCr++So5nfHyuvkT8sVbpn/MS5tN33jfUG/2g/636XqU
Z4fai/3OJ6Zv6T9NfpzPfKH7Z3/1je6f/en39rxxwYHQQbUH4/8X82/Y5w/b
P/qHJnMoH+vlMWSXT+D/J5A9zkcnzQnvR75qRd5PeTPnhPpD/vw7uZ792Fl6
PSbnDefY75HPz7friOeL7H7095fMCe0H++bOCeVF/u1Grmb+6UGuY/3pRc5m
fPUlu3jF9243ksvYnw8iu3yH9x355BrG3xDVT0zy17A5oT0wr9zxF32NIuez
no42eZBPxpFzmP8n2P2ot1N0/zw/KZkT2hf1YTa5lvVxHtnlO/RncbKrD4iX
FLmB/chCsh+VeX+xyYd8tZScxnr3uP0e/veUPQ//Pqv3RyXenjf58L7yJbVv
VPrDV+z3OB+oJbt+CPPpRl2f8+Hb5Crm73dUn1GZh7eS+9C/t6t9GM87VX7a
c5eth35kr8mLeG80xnz8rfkDzi8OkN38hXx8SP0pKv3tr3Y//OGI7Rf9zlFz
w/0F7n9lOtnlf8RXs7mhvnH+28IY34+cQlZ/ak3uE5X55QxbH/HZbm64X3yf
cy65ivmqIzmH/XIO2fkbztO6kF3+xPcxXe15uN7d9oPrPclu3kM96k3eH5Hr
/cglvJ5n6yN/DCZn8/otJg/uH0rOYr84XJnXR6q8Mdnf3X+5Psb0iev36/4p
fzG5MSL6mTo3tC/0N+Mv+p3zF/3P1+sR6a8SJh/sV273w75Vpn/Y/yHbP86X
H1X90X+eMPkxrz9NTqP/PUvOYL16wRj56iWTF/69zu6H/9eavyDfvUl2+Rr9
7NtkF/+YV941++N8c6vZH/n0Q3JNROb5nXY/+uXdpg/M53ttv8gPX+n9Ucnn
39rzMA/+YPZC/jlEdvUB/dZvFl/IX0f0+Tz/PqpMOJv5L528W+dDclFU6nOL
snA99HunkPPZX7XW68zPZ5C1/rcjV7G/Pbcs1AfOuzrqeoynHLLPeb8LOYf1
uKvdD3/oTnb5Ff1sT2Wed/Qmu3oDe/YjO3/FvJ6nHBN7Dbb7g+O7Vrfo/tlv
DNXfRyXfDy8L7YX3uyPJzt9wHjOKnEZ9j9H9x6QfHUd2/o75q5hcouej5Gqe
d84w+6Hfmk3OZPzPJ7v8j/cncfJh6quc3IfxsVD3x3nlIbLLH/DvpSYv+t8n
TB+YP5/S/fD91LO2H+jjeXI6/e9Fu45+5xWy68/gXxvIbt7G+4WNpl/4T53p
C/nwHf095X3fngd5t5P1/dBH6t+ch3bZ7zG/7TF/hf0bzR74vmSf+Sf+PWD6
xLz6k17n+fov+nzGy58WH5hXmswTzqc8x84L7Qt5TpgX2g/1NcMY+asVOY/n
T6eTG9jv/51cyPcjZ5Mz4mKfc+aF9kX/ff68UN84n71In8f4voTs8Xwv1/aP
etGNXEz99yC7/IF++7p5ofzoV/qavMiHA+aF+oQ/DSJnMp/dTK5mvrptXmhP
9NcFKj/1O2JeaF/Ex10qH/vVe8kuPjG/3Wf7wXn/eHIj54vJZJcv4Q/TyVX0
71m6P843Zfp7xnPU9AX9JU2/qKeVah/Ws0X6e9ajJfZ81JNlqi/2m8vV3sw/
z5D1PGml6Q/7WW36Rj5+WfUTkfq9Xu3J+fZ19RfqZ5PZG/GyWfXF+vSe7Rf+
9V9yCc83GsgFjO+Pzd7oNz5Vf2O9/9z8FfX4a9sf/Oc7tR/nxR8tXpB/f1Z/
4bzwm/pLTL7/SZsvnMZ80pTcyP73uPmh/ZAfTyTXR6R+t7T7Ma+dOj+0J/J9
a3IWz2fPJFezX2yn9zN+ssk5rF8d54f6gj92nh/aD/ruYr/H+X1XfT7Ps7vr
83i+05Ps8in6r94qb0S+J+pnDH/LIzdw/hms8sckHvPnh/bB84bOD+2BfncY
uYbyjSTvjsi8Mors+jHMr2PIdTzvGqf64/w8wZ6H+jjF7IN4KrH14L+zyc7/
kO/nkWsjkm/iqj/W6xR5ZUTOgxeo/pivF5NdvOF87xGTB/ntcXIuz5OqbX3k
ixXkIsbDKrIfkfq+xuTD/LSWfJjz3avkTM6Xb5i+8f7xLWP4+2bVP/uven0e
++1tJg/ia4fdj/1/ov7E84lP1f6sb1+QPdr7a9M38tn3pg/Mrz/a+uinDpt/
4bz9d/N3jLdpEeqf88bRkVB/qC/HRUL9Iz6ak/PpPy0j4f7Rb5xKzqE+2pDT
eV57ZiTUD+pre11/vuT/7Ei4X/h/x0hoD/S/ncm1zKddjDGPX0Hez36qeySU
F/rtSXb5APHUm+zyDeptP/JKzjd5uj/mw8HkwxGpB/m2PvxtKDmP+WeY6Q/x
MpKcy/cpo8h9IvJ+ZzQ5i/V3nMkvf99GzuZ6U1R+rlei11mvSlUensfPU/1E
ZF6N6X4pb4rs/A3nKQvIrr9HfC2y+9FPPmL+g/ywTPXD85FqWx/z1wq7H/Zd
Sa6KSL5ZQ3ZyoJ942fQNf3nV7IV8+Tq5OCLvQzepvBE5D9tMdvUX/fl75Eb6
8zbbL+K7wfwf/dnH5t84L/mUXMZ88bldR7x9rf4bkX7lO5Mf9eEHlY/172fd
H/3rN7V/RPz1iMmL+taU52Z1EZnf0sn1jKcTo+F6+P6uRTTcL/LVKdFwfzif
aB0N7YH6dIbeH5H+th25MCL9zrl6/3zJpxdEQ33CH3OioT7gP5dGQ/2iX8m1
/eB89yqyx3zfg5zH+tjL7od9+ipHJH8NIPvM54PIWaxHN+vzGF+3kXfTfwvs
edDniGhof5w/3GXrI9/dS3b+hX5vrO0H5zHj7X7k40nkbP47nf9Ws57PIqdx
Hp9r+sbzo+SciDzfV/1GxD8rbP/oNx40e2L+ftj2g/h9VO3HfPqk6oP6f1rl
Yz/0nO6P/d4LxugvXzJ7w5/Xmb6Rf2v19xE5L95o+0F8vq3yRsX/3rH1EE9b
7feY57eT9bzsI9OnfC/wF3vtMYa+vjRGv7TP/AH5cz+5gP3eQfMn1LNfTL+o
j3+QXX+EfqcJ51jnH9jvMeQa9r/Hk4vpXyeRG+nfJ5NdvsW8dRo5l/ptS3bx
j/4hi1zC+bh9LNQ/4vu8WCgv+usLY6G9EQ+dya6ewx8us+fj/OcK8mH2Q1fH
QnvifcA15D6sn71NPtijv+0H8uWRMzlPDibXM3/covvh/DWUXMj3d8N0PZ5/
jiR7ETnfH0XOo/1G6/P4PcI4/T37/wkqL8/7ppi+oA/9TqCa+iglZ/B94DzT
J+wdU2Z/klT7M58tsOehH1tk9kV9X6LP4zy/jJzFeX256Rfx94zqj+dzK9Wf
WB9Xm/zyPZ3Jj/5xvdo3IvX5NXs+9P0mWeeZ/5g+UK/eVftExP+22vPRT36o
/hLl+a36C/u7XWYvnCfstd8jfzbaflEP99n9sOcB8x/Mzz/pftmf/UKu5fnA
n6ZP2L9JPLwf8XBMPLyO+fWEeCgf8tNJ5FzW5Vbx0L6oZ5nxcL84T2obD+0F
/zqLXMf5qkM8lB+/P498mL/vRNZ57GKyvl++jJzN7wOujIf2wn6utuv4/TXk
fM2jxpC3P7mM+snT69TPYJMH+ryFXM1+aChZ36cPs+uw10hyAfPRKJMH/cFo
cg79YRw5g/4zQddjPZls+oG/lZDT2E+Vkqv4vVyZrYd+IUb2OY8lbb+YTytN
Hjk/Iqfz+50lqt+o/L3WY7YfxONytSfr9zPkEr7ff86eh3hfrfqJSL2tsevI
r+t0feaT18i7mY/fNHti/nzb9o9+7l3TD/qfraoP1rPt5v/4d6f6O+29S++P
iP322H4Qz1+a/8Me+yx+0A/ut/3i+4WD5CLq9xeLB+SvP8huvkO++1siZMzT
x5CLeb5wPDmd/UFzsosHnKedTF7Jee00cgG/32lDzmD8ZSVCfUD+9uQ6+m82
Wf2xo/5dL/vBzolQHvhXl0QoL/JxV/s93hd0T4T6Qb3sSfb5frGX7pf9WT9y
PuW5Ue/n+5tBKm9E5Mknp7GfGUJ29Rn9coHKy/OgEfq8iPRLd6m+WV/uJWfz
+6+x5BzW//Fk199hfphE9uif02w99HuzzL7IR3NVPr4fjOh++f1RwuyLeK4w
fSA+q8jOf7G/h/T37K8fNX1hXntC5Y9IP/yUrY/vmZ4l63nP87Y+8tOLZk+c
h6xVe8+X/m2D+Sfq+RvmP7DvW+Q+PP/dovphvNarPlmPtpl+kT8byCX0v09s
/+inPjX7I54+JzewH/3aGPnkO3Im/ekH1S/rwSH7PfrN38ye6P+P2P5hr7/x
/wvg8TyyqR9ex/uYY8g676aTa/k+8HhyI883m5H5PuLt5rZ+4G/fZZAbJP+c
fDK5hM87hVzE78VOIx+W/FdyOtnNZ0G+ebwNuYDx+HfjQL37zjQO5G9xNjmL
+a29yhNDvbjlHHIf+kO2yj8f8bP0fNsv8llHP7Rn8D6psRM5j/m9M7lMvjfJ
ucT0i3jqYusF/dSEy1Vf8j3eoq7kOn5PcCVZ6+FV5AzJz0d7tn+c9/TU5/F7
wmvJVYz/XiqffE+V6mPrBfpZ09f2G/Q7Df1N/8Hjfx2g99NfB5r8OJ8ZZOsh
H95EzmY+uNn0g/i5xZ4X7Hfzbaofeb/z3VAyvw9uUaDySL24dLjpJ5hnbh5h
+sD3kCPVXnwfXmj6CPrp9aPs98F5wO57zH+Qr8eYvlDvxqo/xdAP9Br3v/5Q
+ICuJ+/75k9QfbD/m2j6xHnUZHte0D7vn2rxhvgsMX1B3pnmL+gvS01feF87
x+IHfy5URvb1741sP4G7fBy1/Qb+/3ucXEP7JslurkE+K9f1xB+HVZq/Bvqa
udDsg3ngQVsf8bNY5eXfyz2sv5e/Bzp2qeWToJyf+5jKI9/b9Xlc5Y2jn7zr
SXIm9a3/35Nqef//zNO2H/jXCnKOvM/c96zmM/ne8MRVdj3oxzq9QN7Nvzdb
o/InJJ5esv2jv3hZ8538/wqee0X3m0C9em+96jch/coGsvM7zPevq3/J3+vn
bNT1+Pfcm8gj+P/zqCNfmsT9/n9Uf0n5PmALuZv8PfV775KjKXl+vcpTjv2f
9F/y/eVyHv0BeV05/HXAh+T2lSL/DnKrSszj8Z3kwgXSz36i8b9Q3p/sUntV
if4/VX+skvy5V/2/SvqxL/T3izCf923UeFzs/T/RDVV1
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH2cVuPWx+ckDMJIGOkwVAxCIQbJLqlUMp3GMSjP6CQjYYiaasqkSZPu
l32/zpRkkpdBH4qQhBDGKYxOiPI0FAZhkIToufZv/dZen+f4p8/3c99773Wt
l99a17XvcfyYW/9xfbucnJw+++bkBP+uW3zJcz8PusPLCf7bUu992m2/mZkR
5KoFXtujbw499xpywQKv3alzjvx4LLl0vtfpyUGfTb2FvLTeO6lX7tIuleRI
vXfeiqZJL88kL5vvDTt3br+yeeQB9d61qy7t0C5DPrveu+3CAz9asojcfr43
a82/F1/SSC6r9z5+99eR25aTm+u8HSNWHjv7RXLbfK9/2RfNJ7xBzp3vlWx7
+L6175Jr673Hf9xw2ZhNZL/OW31HKr/952Zvx+CB35JL5nvlie+qLvpF/VHv
TQsW/Bd5TZ33/gmbf5uReyfXVyfr70ieUO9Nv6j3tauOIRfUe/+5bExeaXdy
Y5138qj4a7+cTm6q8+4a7ywqIlfXex9Ufn1ir/7k5novcP+7Q8ml9d4bBctu
L7+CvCfrHXOGi+D/kNNZ8Wc5eW2d56jiwtvJHeq9wF2bp5Efynq/z3AGzCZ3
qfecd/55SJy8vs5z1uQurSdvqZP4PGjP//vVYy/Y+oTaW+c99/OfGyuf1fVm
vQ5BAr1yZxjvR+5bW7CsSZ9f5wXuunQDub5O7reZnMf7faH+znrF0bpbOv5g
9sK+3Xp/2tdukvDKrKz3IPJGrvcIcqc6L3DPgceRV2TEf4Xkyqw33IXvvDPJ
q7PeV3889uOGC8gT6iQel5DXZr0HXXn9OXxS6N8Ltl4erSsl59Z5Rzv3njbG
7NtV6BLiJvKorOTLneTdGc/dPfHdDPLSrBcsf1YteUfWC9InP0len/HmTXAW
3kfOz0o+P2z2DAwc+iS5LeN1dek8fiU5kvUGBDd4lVya9Y4PDFhHrshKvX2g
/sp6x83+dsTK/yUvy0g8W8l7MuL/H8l+1gvcW/GHfj8rerDvZOEtWamHQ8ht
Wa+hs0vw/Mmhf1514X3ueHKHrPfZVFegp5LLsqJXZ08O44n19SU3cH2D7H6N
Tu7mjiBXZ723J738QOdryDVZya+x5Fzmwy3knhnv1kBAJpMLGb+Z5MaMt9Ol
79f3kgdkvdJAINPkCRnRo0XktRnR40fJ2zPi7+XkpozUzyrywqzU99rJof9h
zzvkSEbs+Yi8MeMFcvxFi/oj4y10t7v9G/KmtPjnZ71fWvzzJ7kqI/W8f6Ww
x3rJI4/KSH53JpdkRA+7kgszXne3vItPqwz9985699855IVpL5DTqz1yU1r0
/9LK0F/u6nkTRpLXpr0gvX4bRfbTUh/jyCvSXpCOHSr0eWnx7xRyfdoL0vfY
WeTStHfa0/f/8GiEPDgt68mS16cl/x4gF2Wkvh4jb097eUGAnyavTHt7nFxc
tpq8Ou095OTmozfMP64bFI56j9yQlvhsIrelJX8/JzemPPTvb8nD0qKPv5C3
pER//iLX0B+5U4TL0t6UIKE7knekpL6PmRL6B/HtTi5Oi36dTt6dkn5XNCWM
D/pnP3Ik7f3l0v3Eofp5SuqnhNyD+XEtuU/aC/DpG8j5aZk/biN3SIu+TCV3
SUu+19j9MW9EzX7Eo46cl5F5oEE5Lf3hcfKotBeE+81nyK0p0ZOXyIWM55vk
nJToW/OUMN6ot4/J9Slvkbvd0G1kPyX5vUOvZz7ssvXg+r32fVx/wFTax+s7
kpfy+V3IBby+O7kP7T+D3Ej7i8jDUrL+/uQ1Kek/Q6f+f/9dQXb5Ue/SZ821
xvB/OXl3Uur7NnJZSuI3jdyS8gK5XFFDrk3JfBMjF6WkX9WRB6ckfxaTK1Oi
L4+Tm1NeEM6CFXb9gvnuv5fseuTvW+TWpPe6K694s30fevCJrjcl8+Q28h0p
6Uff6f2SMu/uss9Rf3vJ5SnRowOmCW9JSv12JDclve+rnIO6kGtSUv/dycOS
XjDuXH4GuVOK8ZoWrv8tJ7/9+pN3JMTfQ/XzpHdW8N8V5I1J0a9rp4Xrg7/K
ySuSon+3kSNJmfemkbenRC9qyBNS0g+iZJd/6N915FKut4G8iet9nOzqCfPS
M+RirS/7fiBvq98kr09KfjSTa5Pee07+H/6Y3D4l/XmbrR/x3WHrx7+7yGuT
Mu/tJY9NST/OrRJ2+YB+05HcnJR5+xhyYUrqoXtVGF/k8+lkLyXzSVFV6A/k
Yz+9Pinz5VDyTuZTSVXo/3+49Pt2NHltQvrBDWSXz4F7myvIucyHqeQ+SW9w
4NBZ5E5J6WdRchv9kyU30D8N5MakxPOxqtD/zrtnfPq02pNk/yK7/IHevkEe
kPKCcjn1PfKEpLfbheu+TVVhvNBvPjdGPL4lF6Qkf3aSXb0E7hjxF7kH9X3/
6cJlSXneYWRXH+hPncn5SZmnuk0P14P1nTY9jCfWdw55YVL01CMXJ6W/X0qu
pj9HTg/XH4wv80aRRyW9IF1+vZ7cISn73VvJLh+g35Vkl89BOvW+m7wzIf1z
nt0f+ZIhVyVlPltEzknKPP0ouS0h9bTc7JX5kJyXkv3BWvLYpBdsF2e+Q26f
lHr4kNyN/m+ZHsYXevM1uYT++Jm8O+ENCQR3j31+SCBA+84Qrk96RwUD3KHk
Naz3fHIO9emEGWE8MG+eSs5Pyf7n7Bmh/XcGgtWXfAf7zyByC+0bQXb6Aj27
muz6KertX/Z96O/N5JWs70lkl2/wXzW5ICnz1lx7PvIpSdb6XEiupH49bOtD
fJ8iu3qX/Re5nPrzKrkm4U0OHrCO7PQE+6ONZFf/6Eefqr8TMu9/pfYlZH5q
0+f5sp7f1b6ErGefu4Rdf8H+qQPZ5Rv2O0eSnV4E49r9x5GXJWT+LiS3JkRP
zyQXs19dQPYSot+XkNckRA+HkxsS0h+vJPdIyjxxHbkkIfU+nrw9IeufSM5P
SL5NJzclpB7uIacT3k8bnIN8cm1C+vd8cktC+u+D5NyE6PtSsx/18yy5C+P/
MtnVI+ajJvVXQvrB++TChHdz0BA/Ie9JiL5uN39gHvqOPCwh5zu/2vPRH3Oq
Q8bz25OLEqJPB5ArEuK/Q8gun2Q+IbdPyPx/VHXoH/S7LuQB7E8F5FZf/N+9
OvQ39nOnkHdzfadXh/FBvpxFLkuI3haZ/TgP60PuST3sVx3GD/4ZSG5OiN4O
McZ8eDnZ1RPquYRczvwsJbv8Rj2Org7jA70bo/YkZd4ZR16YknnqJnIL9bGC
vJHz0R3k9fz+FPJDafn+DH0+99d3k4szYs8c8tkZsT9Cdvtt2O9rPHi+lyEX
ZMU/C9TerPhnkfo7I/5cov7h+Uwj2e0/UT9LyW5/jXgt1/hxv/Ac2e3XoO+r
yE7fkQ+vaPw4L621+KC/NKl9zLd31J8J0ZcN5BUJ2e9/aPFDPm9WfyZk3m0h
5yWkH24nu3qF3n+t/kzIvPC9Ps+Xeeoncgfq369WP+hHe8hbfNGDnJnCjb4X
LPeWfWeG12O/cSDZ5TP62yHkhb4XyOHYw8nbfdH//Jmhfdj/diFHfNHv48kb
fdnPdyd3Y76fMjO0D/E8wxj1dxZ5Deu1aGa4PujThWSn/zjf7keu8KWfDyQP
8GW/PpS805d5/nLyWF/8V6L+Scj5wFV6f1/2l6PJzb43LvhvDHmlL/uxG8jD
qNc3kVf70u8r9Hms5zssHsjXKWpvQvrvDHKtL3p3NzmX+TSHvMKX/hrReHB9
vq0P53UZclNc+ucC8gRf4r2I7PQR898Schdf5tFGcg/qz1Ky6uFyctqXeedZ
sxfz+ypyoS/6/4rFF+e5r5OraW8TOZ/9/h3LR9j7PtnNA9ivfUgu8eXfzbY+
6MdWcktc9H675Qf826rrY/58p+tPeIG8F/5k8UU97dJ8iMv884f5C/mQc7dw
uS/nR+3Jd/iidweQvbjo0cHkYl/81ZG8kvE9ilzK+j+G7OKN/UHB3eF6MB90
J/fxJR9P1uf5ouenkx9ivZ1JXuaLvp1LLotLvPqQl/L5nq0PenKJrQ/78SFk
l0/Y3w0nr+f6R9rz0Z+vvDv0n+xPyFW++P86chH17Hr7PupxPDnXl3njVnKO
L3ozkezyD/VVSa6My/uaKrs/3o/NVH/HRQ/usc8xD95rz4fexe1+mAdS5Oq4
zLv15GGM5/3q77jsrxabvcinR8gRrucJcg+u5ylyGdezgtzNl3lqpdmL+fQl
cp4vev8auWdc9PtN8mBf+vc6XT/j8559jvrYaPbgfP9j8wf2u5+qP3yZpz8n
O/2Ef74k5zLfvrX1Q6/byNsZ7532fLwP/Y08iv3lT7Krb8yr7WYJ745Lv92f
7Mdlf3LQrPB6vP/KI5fHRe+OmBX6F/p89KzQn5hHjyUXxqUeTiBviss8fhK5
MS7x60F2+hW454GeZKd3mB96zwr9Cf0+jzyY9+tLLmA+XExuT/sGkWtp3zDy
MNZrsa6HenWF2Yvzwqv1/nE5/7iW7PQD/vsX2ekH8vUGWz/mgwnmb8yHFeQ9
vpzX3UkuZnyn2npxvj2DXB+X86NZZJd/mO/mkAdQHyK2PuRfwvyB+syoP+Ki
dwvILv8xzy1S/7Lel2g84lIfjRo/6tdScoMv/WM52eUr5rdnyW0x0eNV5KWM
1ytkpw+I1+v6feZnk/kH+b5e/ct+/L4x6ucD8jL64xOyqyfMf1ttPTgP2qYc
k/P5VqsH6N8Oy1ecb/1IdvqAeW8XuTUm+fs7uZn271V74mL/PjXCTYxnbk14
PfpNB7LLJ5xfH6Ycl/31kTXh8+H/zjVhPKF3x5HXxGW/3ZXch/pZqM+Liz70
IC+Lid70qgnjh/3xOeQOvpw3nE/OjYu/LiLXx0RfL9b7xSXeg8nF1I/LyK4e
ML+OIJ/NfvZPsqsfzDNX6/pi0h//h+z0FPPtv2rCeOE8rVztob7cTG7Pefk2
sqtnPG8S2ekJ6mMq2dUf1neX2Y/1zbL7o7/Xkovi8m/U1g9/Juz7qMes+s+X
86gF5g/sxx6w72P+W0JuiUk/bySvjMt+cKnFA/1nuX6f8+xz9n3sX1fZ/aCH
r5DLmJ+vk8eyfzeRXb1kndx+tV7zIy7z6PvmH/j7Q4sH/P2JPj8m73+2kt38
gPVvI+dx/mw1e6D3Oyw/0d9+tO+jXn6x+0Gvfic3xGXe2kuuoL7sM5v2xWT/
mEt2/Q353YHcHJPz18PIHufxI2aH8YW+d54d+hv2HDs7XC/s6To7tA/zbyF5
U1T6cQ+y0xf4p5d+HhP/9J4d+h/1fT65KSb9ui/Z6Tf05GK9nvEaRG6lfg0j
r4lJfxuh18e9YLyJXmEMvbma7PQF+5trzT/S/3T9MZlvbjD7UT8TyG5egB5V
2PcRzzuNsT+aYv7F/nMGuSEm+jFL4xeX/cAcvX9M7I3oemNir2/rxbyeIQ+m
vswnu36DeC+y9WI+eJDchf59lFwZk/3RE+QC6t0ysutH2M+uMH9Az1/Q9TA/
X7b8Qb28Zs+DXryl9sVkv7SOnB+X9w3N5Ar6fyO5ky/r+Zicw3nnU8s/mT/N
PpzPfGnPw3z1reY/5/cfNP+i3sTgQGin5ktM6v83tY/7tT/t+Zgf2t0jvJL9
cj/yJub/QeR69rdDydXUq07kcs7T+eQK6uffyZXcPxxvjPOGE8kt7FenmD2o
5zPUnpjM92eRaxnfIrIXE/3tc08YD9R7P/Ia6uFAtS8m9TWE7PQNv3e7nOzq
CXowUtcXl/cdpeQC1t+oe8L4QL+us/Vhv3I9OZf+Gm/fR77fQi6MiZ5MtPVD
/yeTffbbKvMH9Lja7EN/mE3uSX/OJTu9xnwW0+ujUi9JsqtnzCN1Gu+o7Pfv
M39DrxrUn1Hx90Nkzb/HND+i8u+T5FLW29Pq/6i8r3ze4of58EVyY0zOB9bo
82OyP11LLopJ/r6t8WO83tF8isp+eIP6Oyr5/aGtB/W82fIZ8dxKdvWDeWS7
PQ/13qr+jcr++Dt7Ps4vfiS3Uo932eeYb38nFzMf9mr8YjLv7DOH9sa8IP0v
yCX71JMOZJcvOP89jOz0D78fOcIY+dR5Tvh87F+OJTdHpT67zgn9j9/nnEQe
zH7bg6z52NOux3la7zmh//D7mPPIbv7E533JLfy8/5xwvehHg8j5/Hwo2eUn
Pi+266EfJeRWfn7Vf91/tNmPz8eQl/HzceZP2HeT+jsqn99KruDnd9jzsP5K
cgP9M52cQ//NJBfExL/3GMP/95JdPmO+iut6Gb8UuZjxrVd/RSX+C219OF9e
bPYifx7W+0dlv/442dUn8u9JzY+o9KtnlKlXz2s8mN+rNX+ikv9rbP3QuzeU
ozLPvm2fY7/yruZHVM43N1i+QE8/Iju9wn5+s/kH83ILOS8q+/Pttl7ow9fq
H85L35m/sR/8SeNH/dll9YF56w/yburXXr1/XOaFfWpDf0L/cmvD+Mj+kJzH
/nwYOYfz3hH2OearzsbQ52P1fuz/XclOfzHfnkR2+Yfzrh7kCuZrT7LTY+RT
b3IR9eI8vT4u+dCXvCwq82x/stMTnHcMIrcwnkPJK6OyXy+uDeONeJWoPXEv
OL7rdBXZ6TfmjdF2P+j9GPsc73fHqX9jch4znlxJf99K7sl5dKLaz/1XpbGc
j5L9KH8frByTeWu2+ov1fS/Z9Se8P4mRXX3BXyl7PuqjTu2PS/4v1O/HJb8b
yE2cfx/WfOB+/jGNL/PzSfVvXPzxtF2P/HvO8gXzzotkN58gv14hu3zH+4W1
Gu+Y5E+T5Q/08B2NH9f7PjmX6/3Q8hf97BOzX/aLZg/2b9ts/Yh/q64nJr8v
2WHPx78/6vq5X/1F8z8u891v5GrWy19k1x+wX2k3V7iC5x37zw3twXoOIju9
Qn/Nmxv6A/rViez6K/L5aLLLR8z7fyc7Pcb+8AS7H+Jz4twwfpi/T1F7YnI+
e4Zdj/o+a24YT5zvFZGL2C/6zA39B//3I7t6wLx9Cdn1N8wrQ8x+6OFwvV9U
8mnk3DC+0LMrdf1R0atr7H6Yr8vMf/DvWLLWx432PMyrN5t92L/dTnb1hfP+
SeTdnM+mkUuZD3eRi5nfs2z90M9aci7rOaL34/loQtcTkX6aseehny0gV1O/
Fqn9UeknS8g6bz6q10dFf57Q9fA8aZnFF/asIDfHRY9fIOewf79k64V/XrPP
4Z837fmol3WaH1HpT++RC7m/+w/Z9X/Ea5PZg/reovnGee4zy0/0+y8sv9GP
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
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnHt0VNXVwFNEjUoxImqKKaIGTTVqqMHGinpFBCqphhJr1GAjpUgpYiwI
ASIGCRIgZJ7JTN4PUKJmKWi0lKKiRowFNVKqKPiBBTVqtKiIqCjfmb1/5561
yj9Zv3Xn3nP2e+9zZzh7yt2/+1O/pKSkUccmJSX+bm297pmvxs3xkhL/Pmnz
3ks/bnH1RPjdNu/A2i0TfnUb/F2b1+/CZae/MxXe3uYNfnzc+wtmwelt3vkj
kjvSSuBzVnuXd3bPfW4xXNHm5f5q+TVFK+Hj2rzbN/5mQL9q+FCrd8+VJ769
ugluaPOWbP5n63Xt8P5W753Xv5m0bz38YqvXN3HD0KX/gAvavNFFH/Sc8zI8
s83L3/dQfdfr8AOt3qNfbP/tlJ1WnlZv05xIav//wIvavEGJBT+Fz2vzpoc+
K736a/jDVm9hQuAf4UFt3pvn7Pp2UfK9yjtaVf5B8O9bvfuuHnn7xjPhcKv3
r99OSSkYDue1er8oDLz49cVwZqt3/wyzoxy4oNX7d8nH540Y7Z6fUP/rE+Bz
Wr2Xh6376/Sb4CGt3pmXGAv+AfbQ53R4S4tnqPjKv8JDW72EunYthG9v9b5b
ZDawFE5u9Yx2fj8wANe0eGY3yR1x+GCL2qcN3tzi/fzWqVfseQz+vMV75qsf
dpQ8fa+v/wEJB3oeXtHiPVzfNWxdNzym1Uuo6zfb4S6et8utJ8/7AP5di5e3
KjZr0H/hCvZ3GH6d/fWbq/zPFpX3JLinWeU9DZ7T4iXUc+JZcHmL6i9jrr/e
DcZ8l/8Szm/xPvr+kS+2XwHHW9Qe11lu9tpMeP1wA1zU4l2x58ZVsQJ4TLP3
M6Pei6a45x3KMA7xF3hms/rLvW5/5umhzxbBKS1eQvwlFfCaZi/hPqlheFuz
t3Km2WE93NKs/vyQ+/zYhEIfhzOavXONO8/YAI9v8sYkHvACXNjknZ3YwFar
n2aNt3/D6c3eWUs/nbjh/+CuRrVnL7yzWfX/hX1es5dQb/H3cGeT5oNj5yl3
N2k8DJznX28ZYhw8FQ42eS8Y8z5zNry70Xt/gQnQC+G0Js1X2XBHo8p3FXwA
+cbB+U1eu0l3yyfCpc3eq3Ofax5yG7yhWf1rqr3epP4wy+3n7kQCmQdnNKn9
FsOHG72Dxn0/XgEnNXkFiQQZheNNmo+a4Iomzcdr4cFNqu/1cG6jxs9G2GvS
+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
L3DXxZ6XuOsSf5fC06Nqnxy4OKr56Up4Z0TPt6+Bt0W0no9d7OtD5vUJ8I6I
9vM3woOjqr98uLBazwdugfdGdb6c7PQ1LfFvCjwmqvPYne75kq//AndHtd4X
wx1RjYc5cF9E/XU+3BnV+rvIyS/57gF4d0T9aRmcHdX6WgnnRlW+IDwqqud1
1c4+Uj/r4PSI2rsJTopq/7caPhLRfrQdTotqvHfAPRG133rrDxHtd56GD0a0
f98Ir4lq/n8eHhDR89yX4PER3W+3k1f2+xpcxH7fdPaXee0ta6+w/t0Ft4c1
f+yx9o1ovt8Pl0RUv73Ov8V/PoOzIl4ivWd86fQj8XQIDka0//ne+ltE/SHp
AewZ0fOj/vCGiOa7E+BoRPPRTx2LvgbBBRG17xkP+PJI/J8J94/ofDAMroho
fzAczscffwGnRDSfXwyvi2i8/RI2/iD57VdufbHXKLiX9T13XfLJdXBxROfx
6+EDEZ3vboB3hFX+SVYfYa3PN8MZ+HchPB393wGPD6v+/2SfH9Z4nOH2I/3G
3XBeRPPNbKuPsMZXCbw7rO9rSt3n5f3YYrgrrPngQbdf6QdXwHPCmu8CcHdY
+4EIfDCs/W4czsKejXBOROerVrs//OlhOAV5HnP6E3megE08iDydTn7ppzbA
nWHtT5918km+fxFOjmj+3gJPDWv93ur2I/Z5wz1P4mMHbOJHzvffgRsiOu++
Bxv7ST/9H3gN+vkQtv72KXwkrPn6ANyLvQ/C5RF9H/ot3BLW+vID7IW1X+23
RNnYV+rt8bCJT5lPToLTIvr+KwU2+UPy3WlwEvn5Z/D+sPajQ5f4+5d4OAeO
h7UfPx/eFlb7ZcIm3yXU05wFj4lo/zAS7k99uhw2+VSedxVchD9c654v+xvn
7pf95cJ5xGueXS+s/nUTXBnW88Jb3XU5/7gdHo/+/gjn4q93wiZepT+Y6fQl
/WGx04+c190LN2DfBbDxZznfXuTkkfOjJe5+6e+WwRVhzQ+VsIk38b+QY4nP
aree5Ls62MSv9HNNTj8S76thE88SH+1wFvmrAy4Oa/1YD08Pa//2NJxNPt4I
78T+z8MF2OsluAP9dlv/xN+3OZZ6/Kbbr8TPv91+RR/vOnml/9sDR8N6HrTP
+lNYz+d74S7yXx9cGtbzrS9gE3/S7x2C14XVf7+Dc9j/UfhISPd/TLm/ntgz
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
8N4q/b7BPS6vSP2fa+0V0PlhgZW3Sv1zEby5Svu9JfAw8tEytx/9fS6czflf
wN5P/x+FKwIan3Fnb9lfg9OX9F+tcBnz2kNWX5xXPAKb/k6+z/Q4nE4/+CRs
8rHkp2ec/eQ8ZCOcRP/2PNxAPX/J2VPs+wocr1J/3Wb1Rbz2uP1JPdoBpwY0
f+6069EfveeuSz/1vtOXxNMHbn3RxydOH5JPPnf2E3/6Erbz1CEnr/Sb3zt5
pf8/Cpv6Kvb6CXnF5Cs5j+wPG/vL+5jj4BTOc5Nh48/yfuXEoG8/qTcD4Aqt
F68OdPcn/O3zFDhb59FTTw36+pP1ToPLWO8MOFf/lv0s6MuTyDdrzoRN/hF7
/RxO1vcTfWfB6Sr/KefAxm6S39Ld/hLhe8t58Ez8IQM2/ib/XcoF8ADyWaa9
PyDvk3ovhoPk9xGw6dcT7+eyLoWziKeRcJH2U/N+5eRLvI+suxzOZB6+wt5P
PbwS9jQ/H+s5/cl5z2h4DOe5Y2B7fjDW6kvtHx7v7k/o5+nrbV+l/c7OXCuf
5sPvboBz8NeJsKnvcj4zCV7H+dlN8Cbq9c1WvpDGzy1woe53623Wv/CfybDJ
z2LPIrhS82v2FCdvYp65earzN/k+5DTnD5IfpsN8P+PZGdZ/9Txy70zY9M+S
r++28cL58T3OHol+YOxs+LD6w/R74RI9f18xz+lX+r/51t58H3UhXK7vjw/c
5+wl8Vnm/FPkfcDKF9L+stzpT97XPgjv0P4kXmH1yfdPVsClIYm33ZVWv+r/
R6qcfcS+Ias/vu8SgTvVH++otvrS+vZAzMkj80Ctu1/ip97qg/dVjXBqSPzj
+Ba3v0Q5P7/Nxrvm5/Fr4IKQ9JN/ftjer78vWNFu5dXv+z32qPVn/X761g4r
r/6+pu9xOKrf5/3penhbWPqxi5+Cd/N7u6ftfvi92t/cdekv/m7to7+nfOIf
cP+o1Ks3nrXyV2u/8jx8pFrn+xet/+jv9bO67P74/3G22Hjk//PotvaulfuD
/7T2q9fvB2yzn2/Q9V+315t0/R6bb5tl/yf/y/pnq55H/xveqf//4g1vw11t
Kv878MHVMo9X7bL2flj72ffgoWv1/ckeeFa76v99eOyjmj/3wwM7tB/7EF70
uMzn1/fa+Fjn/T/jwll5
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH2c1WP6x2cTBrOMhDZtQphlEMoOkq+kWrVM22Ck/EY7m9k2ZAvRlNHj
VFOd5znNw5kzz1Pml2KkbUNIhpK0sxnkJ1sIw4bkKfrd57re9/d+7fZPr/fr
e873e9/Xw+e6rvt76qyJ9/3hT93S0tIGH52Wlvp7a+0N674eMd1LS/3Zs9J7
r/8xj0XHwJGV3oHmLaN+ewd8uMXrduHC094uhM9e5fVcPeKDR+6Fv2jxzr80
vbXPDLi9xbuyrf3B5x6Ds1u80b9ddF3BEnjVSu/ODb/L6BaFN7R4919z/Fv1
CXu92Zu76bXaG1rgeS3e29u/Hbt3Lbylxesas77v/L/DTS3e0IIPd5z9Mjyu
xcvb21i5eTu8qdlb9eXO30/stPtp9jZOD/fq/i/4uRavR+qBn8Hrmr2i4OfF
134DT2nxZqY2/DOcbPHePPvd72enP6Ccz/57wBObvFnXDrpzwxnw4mbvH7+f
mJl/Lhxr9n4zfvmL31wMdzV5j042K8qBL2jx/jnjk/MuHQpnN3sp828f9YBv
n5f7rflr0S3wuibvjEuMB/8H/qJJ7VkEn9jsGZp6zV/hSLOXMte7M+GcZu+H
2WYB8+FdTZ6xzq0nLodbmjyzmvTWOLy7Sf1TB3/U5P16XOHV7z8Of9Xkrfv6
p44ZT8Pbm7yMVAA9D2c2e02Vm/utaYdvbfJS5vrdTriQ+70L13G/D+HVTV7u
0vJ7e/wbzmB93zl7yvq6Paj8YJPu9wT4sibd76nw9EYvZZ7jz4TXYL8s+LQm
7ybjvisvg8uavI9/XPnlzqvhAY3qjxvgi5u8OpNeP90E727wrn7/5qXl+XBn
o/crY96LJsItjd6hLBMQf4GvaNR4eQBub/DM3YOfz4aTjV5q+3NL4Z0NXip8
eoXg8xq9JVPMCivhIY0az43wskZveMqgq+Edjd45Jpwnr4dnNHrDUjd4Ae5o
8M5KLWAr3Nag+fZPuG+jd+b8z8as/z94cIP6cz+c36D2/xIe2uilzDv1R7h7
o+rB0Q8pj2vQfDgRLmjwkr1NgPeCEw3eC8a9686Cj2n0PnjEJOiFcF6D6tVA
+Fb2NwQONOj+RsDv1HstRu4WjYGLGrxXH3yupvcd8IAGja9CeHuDxsO98IZ6
776UgDwEX9Cg/nsM7t7gHTTh+8liOF7v5acEMmLvV696lID31KseN8M/16u9
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
e9L6K6zvK59xz5f+8O/O3nI+sAluC+t8utn6J6Tx+yqcj79et+sN6Ty8E46E
Nb53wbb+vwsn8ef7Lh6lH9kH7w5rvu+Hu0d0Pv7cxZucX3zp4l/0+BA8Paz9
7Q9wL+LhiFu/9DtHLVSeF/ZS4X91OlxEfmXAg8N6/nsybPRffj9y6kJ/fxJP
vWET7zK/9F3o21Py8xx4c1h/n3M+3BBWvcp2z5d4HLDQX6+cpw2C4yH9fcyV
C317y/Uh8BquD13o21vq0Qh4Slivj4JzuJ4LGz0Q/chz+5frt8Pruf+E//r+
RDiL+0+y62V9f4FHc/0+uJDr0xf6/pf9z7D2xT6z4H0htd9jsId9F8DDsP9i
OCOs/dVyOBv/heEy/BuHp+P/Kmc/OV+uhfsQP402fkI6r6+y9gtq/K129pF6
9RRcHFK9esb5V+J7o4snif9NsMkv0buX4faQ9rOvwkZ/ZF7ZbuMzpOebO238
hVRP37LxGdJ5/l3nD+mX9zj/yny+D56KPnwC56Hnn8PfhXQe/Mp+PqT6c8jZ
R/qtH11+iH4dgQNh7ReOKlUuCqn+pZf669H5EO4e1vp8cqm/Pun3ToVNvkt/
1RtOQ5/7wl5I6/85sMkX6W/Ph43eyXlXNlxMvA6A9wc1ngbBJSGNlytLff9J
PAyxHNZ+dijcEtLzjhGwiVfx56hS314yr+e6/Yi/8uCeYS91fNfzdnhPSPuN
CbDxv+j9RHhGSN/vToKNXsh5zGR4W1DtfR+8iX50mrVXWOevGbDJVz0ftesP
8ftgeAD943xrf/J7MWziVd6fLIMD5E8Y7k89L3f+lfivgjuJ7yRs4k/630bY
6JXMnyvd/SU+V8NGD8QeT9p4I/7WwUYfpd/5O2z0RuLrebd/eb+wGTZ6J/HT
Dls9fN2tT/b7Jhxnv7vgbOrZO3BpiHkRbmV+2wsX4P/9sKkv8vuSLmcf+ftL
2PSvMq9+AydD2t99D5eRLz87e8u80m0R62E/x8KmH5H9nAD3pL5mus+LfvVc
5O9f4vlXsMln6fd/DRu9kPnwbHgY/jkPnkH/fQEcCen57CWLfHtLfl8OZ4b1
fC/Hrpd6MRi2en0dbPJF+u0bYJPP0q/c6PYjeniTe57E01jYxLPo2W2wyR/R
qzvgjJD21wWwiSexbyE8hfz4s9uf9Kv3uP3L/PZX2OiVnPc/6Own/dlM2NQH
iYdHnT0lvufCA9DPUtjUB8nnMrg79gvCRi+lnkbhwSGtZxXOn6JfCbg/9aQe
3hHSfrMZLkB/HocPh/Q8aQ3cxXraYJMfosd/c/aU+v0s3Cek9nnR7U/sswU+
GNJ82QrHqU9vwPkhja9/uOeJvzrh3dSH3XC/kPYbH8CF9Jsfwp3U40/d/iR+
voBHhnU++trlk+jvt+7zMi/86Owpv/9JW6xchJ50X+zvT/rf4+Bc9PGXsMk/
qd89YBMvMq+dBmeg971hky8y758Jt9DvnQNnkz9ZcBX+z3bPk3i8FB6JvQfB
pl7J+f2VsKlPMi8NgTNDer4z1K1H+q8Rbv/ye6JRbr8Sb7mL/9O/eXAv+od8
uITnTXD7l373Lngb+5sEN4R0Xpnsrsv8eh88HXtOg3ejrw85+0h9LHb3k3wq
gcuI3/mwiS/R+0Vuv6I3y9x+JV5Czn5yHhyDB4RUryvhw0E936ux6wuqvjXA
/ekfWuB9QdWLVvd8yYe1Ln6kvj/trsv8tAFuD6q9nnP+kPh7ye1P3j++4uJB
4n0r3BbUfN8BTwlpv90Bt5Jfb8PprP8964+gzssfwEZPpb59ZJ8XVH9/Chei
Z/928SLz69d2PfRT3zn7y3n7YbceGW/TligPDGl/ePQS//5SX46DDwQ1P06E
s4ifHrDpL6XfOA1Oox89A96GP8+E1wS1vvZf4q9f9D9rie9fif9suID+91L3
PNHTQXBVUOfxq5b4/pJ+aghs6oHYdyicTT6NWOLbR+rtKLgsqPNNLjw+qHqY
Bxt9kHqQb+0V1HibAHcEVX/ucvaTfJkEm3jV3086lvc798Lrud80Z0/9921L
fP/K/YqdPeV+JbCZ52R982ATPxJPi+CckM6rS+HD7DfknifnKTG4J/W4Ajb5
Kv1kjbOf6EP9f/mjxflf5q9W5z/x7xrnH9Gbp+FAUPuJv8Gj6cees/YPql6+
CO8I6vvQLZYDeh62Ff4uqP35Gy7eJZ473Polvzvtfpm/drvvy3nJBzY+0YsP
nf8k3z6FTT2QfuULuDWo9eErF+9S/7519pH4+hEehh4cceuV+ta9zF+fzG/p
8Gjy6ZewiQf5/d3JcFdQ9erUMn+9cj7RGw5Qn/rCJfS358BFQe13zi/z/SV6
eiG8h3gc4D4v8TMQ7kO/kgMbfZHz3WtgU49EH66D26mPw8t8+4t/bizz7SX6
dROcg56PhdOpR7fBSfLrDru/oMZvAVyKPQvhAs4f/gyvR+/ugUfS790PHwzq
ecyDcBp6/Ahs8l/+ftTuN6j6M9fai+cvhAfz/DLY1D95fgDeGNT4jLj9Sr+x
At4c1Pm72u4/pPlbC5v8Ez1tgjehz6vc8yU/noDzmbefcvaT/vIZOIN43ui+
L/q7CZ4X1PPizTZegpqfr7p4lPh73flb8mknbOqpzPO7rH+CqjfvuPjW3wvY
z2Ovvfb55PPHLn6kX+py8SH6eQDOpd87aPOD+v69yy+pjz+5+JZ+p9tS5UzW
e8xS3z/S/x6/1Pen+Pcke534PgUeyLx1uvu+2LfPUn/90j/0g3vRv/WHq8jv
38DZ9NcXwaZ+Sz5cutT3h8TDFbDRWzn/ucqtR/qha+EZQX0fcD3cn/o5Au6H
P0bDZehr7lLf37K/PLd+0Y/bYVO/ZP6a4K6Lft1l1xvSfJvk1i/n+5Phkfjv
Xrd+ibdpsKnn0v8/BJv6J+d9xXCcfqPErUf//SRs6rO8D1wEF+DvpW5/0p8E
rb/Qs5i1b1D7sQq4jX4hAecyz9fD+5nXm+EI893jcBrnc2vgQuaJNvd5/T0d
nE//+CxcHNL6/AJs68XLNl44T37Nrod6td3ZQ+JvJ1xEP/mWW5+e37r9Sf1/
Hzb9t5wn7HOfF/3cD9v+rQteg358CQ/jfOEbuIH+53sX7/rv2eAd+L/bMu5P
fTgGLg3q/HoC3B19OgnO5LyqJ2z0UOpZL9jEi5wn9Vnmr0/i6yzYxJv+fyTu
fvL538BtfP7iZb695fOXwa3c/4plvv3k81fDfaiv18K7+fz1dj+8fxsJm35Z
9jvasdgnF96BXuTBxdjzdriQeXMCvJ557C44nfyb5PYrejQZzqE/uNetV+Jh
mru/xM9DcC7vH2fCNt5K4M2cX8xz/pD+sBTuRb+w1N1P9DTo1iPzaRSusudH
dn0h/f1OAt4U0n+vVQeb+iX52Az35H3z4+5+0j89AWeR723wAebl9bDV143w
QPTkBdjUN9Hjl2E7f74Kx4Paz2138Sr9z07nb6lnu6z96Ffetf4Pqr/ft/YK
qv/2wgHy+WM4j/cNXc6+0g8egE0/Ib9fOAibeiL2/d76k/7+J7s/+o1fLFce
HNR5+hi4mP7kePhAQPuDE+GsoJ6nnQIfDuh8dTo8EH0/Y7m/Psmnfsv99cn+
+8Pj2X8W3El/kw2Pph+8FB5JvR603N+P6PGV8P6Avi8Y4tYr9XIobOZLmdeG
wx3M46Pc/WQ/N8O9qN9j4U3sJ9/dT/qZ8c5+0i8XOBY9L4S3BbRf+jPck/py
DzwgqL83uB/OoP4/6PYv88Mj7vkSn7Pt+gLa782FWwKqRwthqxdLYKPPcv63
3D1f8jni1i/5GXcs66uCN9N/1br1yLzW6Pwv/fBK2MSj/J5ptf1+QO33JFxC
v70O7sd5yAbYzIvSvz3v1iP1/CV4B/59BZ5OvG6DPfJ1h/u+1KMOeGpQ9bPT
fV/i7z2XL9JPfQCnk08fwmsCao9P4X0B1ZMv7PMCGk9fwcmA1oND8B76zR+t
/QLa/x+B2/HXLwLKHQE9j+wOZwf1fcwxAd+f+nvbgL9/eb9yPFzA/J0BZ2i9
ePXEgL/fVLx9kQkHdB495RR4PM87FR7I804P+OsVt/4KztTzu4Yz3PPEX7+G
iZ+uM936U/s/+Ww4B33rD5cFpV7cfp67n8RDFrxe8yd5AbwNPcuGjf6m3ift
vxiuQt8vdfZKvZ8bcLm1N/3MIHhPQPqph34Lm/hJvY+suBI29ULm0avdeqQe
XuPWm8r/oz37/JCe9wyF0zjPHWavBzT/hzt7p/wfGgl31/r69I1wsfY7naPh
ItXDH26CR5O/Y9z65HxmLGz18BZ3f9GD2+AI+XM73BKU9W69w/pH3+98McHa
W+fZkwvgw1ovBk509k7NM7cVWg7p7yEnwbvpX4pcPKX66Wcn23jV88g9U+z6
6f/ugzdxfnw/fCAo/cDwaW598n7xAZsfOo8ufsh9X/q/h+H+vK+YCZt+OtU+
H5hl7c37gpL/2u8ceDr95TzY6Je8r10A99T+JF4Kd6L3i+F8Pc/aXWb9ofPN
4WXuuvg3aNfHvBeGp2h/dlfU2jMs9ppTDu9nHlgBt3I+WWnXF9b5phqeEZb4
ODZp41t/33B+nc0P/X3PyAa4X0T6yT83WT3Rf1+wuAVO6vv/x1fBB/X391tb
4Tb9vWbXahtv+nveX66FS/TfC1z8lLUPv6d/2vqf37M/Y+/Pv0/8G/yd/vus
J/5u9alc6tUbz9p4iWu/8ry9f4XO9y/CvapUPzZbe1dpvdti9Yz/z6Pd+isp
3w+8Bo+r1d8HbIN31urzt1t71uvzd9jnN8r6T/oHvLFJz6P/af2v///iTW/Z
6yt1/2/DZ7fKPL7sXRtv/6v97HvwyDX6/uR9+/21av8P4JeeVP3cBx95Svux
j+BPn5b5/Mb98KnPeP8PyX6P0A==
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0.33333333333333337`, 0.33333333333333337`], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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
CZv4kv567MK0P8W++dae5Me9zt7Sr94HT2V+exBO+vW8fxps8kX6s0fgA8TD
Y3A34nsuvIf5ZgE8hHwuss/Dfk/BudTTgLO31LMovBX9KodN/yH1JA6b/JR+
s8ba26/6Uw8v9+t5UhPcwnrWwEf8qsfPwz2p3y/A6/xqn5dh0x+KfV5zLPny
losvqU/vuHiS+PoP3B9/7YJNvZH83gNP8mu/8THcQL3/FDb5KPX4S7dfiZ/D
8Dy/zkffwWG/6u8P8AbmhZ+t/4L6+59Wi9Lrl/zLWJS2h/S/J8Me+vh7eLhf
63cHuJ1f57WzYBP/oved4K1+nffPhXPp186HW+h3cuBCv/q/J5xDPF7q1if2
7gsv8Ov5/ZXwoIDOSwPgPX493xlovx/U/mswvMWvvycatihtf4m3XDiT5+XB
pX7Nx5FwF543Gjb9j/S7d8Eb2N94eAbzykTY6JHMr/c7+4g9p8D56Ot0tz+p
j7Ng049KPhXCRm8kfp+ATTyI3i+Ej/tUb5bCzT6Nl2L3PDkPDsKj/KrXJbDp
z+R8bwWcRN8Szn7SPyTt537ViwbYxL/kwyq3fqnvz8Kmfsj8tN6ux6/22ggn
fBp/r8Am3+X94+vOHxLvb7n4lHxvdvEi/fYOG1/0u+/D2az/Q7d+mZc/hjtS
3z6zn/vU31/CRj9Ez/7n4l/m1+/gNT7tp47Z+PPpeftxt14Zb1stVu5Df3ji
4vR+pb6cDDf5NT9OXZxej8RPB7g3/exZcAv2OAc+gD/Phf0+ra/dYBMfov85
cC7x3xOe4dP+91K4m1/1tK9dv1/n8atgz6/91AA4y6f2Hbg4bS/Jp8HwBOrt
MLi9X+ebXPhIsephHpxJPRjp7ifxNto9X/TnLniXT/NlPGziQ38/uTjtL3m/
MxnO5n5T4FHcb7qzj9xvFjyW+xXC/VjfPHgQ8bQQNvEg8+oSeJNP91sMF/j1
PCUIDye/orCpD9JProDboQ9xuAv+SLr7yfzVAM/Cv00u3kRvnnX7l37ieXgH
8bLR3s+nevkyfNyv70Nfg4f49DzsLfu5T/vzd+AK4nmHe57k9y73fenP9tj9
+PS85GMXj6IXn8Kmvkq+fen8Lf3KYWdvqQ/fOpb69wOcR7392cZXQOP1N5s/
Pq1vGUXK+3w6v2XCpl6IfX4Pm/iQ39+dDpv8FL06Ezb5J+cTneAw9akzbOJb
+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
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1:eJxdnH1YlFX6x1mzInONzIw1t8iwqMi0sKjMjmZqSkYrFZm26pKZmVmab5mR
YqKimc77DMMgwzDAiMOLLrmUVmS0vkQumamtllZW1JqZqZn+nrm/3zPnun7+
w/W55nmec8798r3vc54Zr5n4/N+e6pCQkHDH+QkJsb/bSu/f+MuwmSoh9m/g
BvVF6gWv2R8mP7dBHa3YOvKOJ8iPblAdblrS/fM88ukG1a1m2JfzppHPNKjr
+yVGes4h99ug7mxomfXOa+S7NqisO5YOGr+c/GmDenLTA5072MljGtQL93T6
rMxPrmlQi7b8u/T+MLmiQX2+87fRh2rJNzeo9ocbr1r8L3KoQQ0e/3Vrrw/I
ExpUzqFyb/NOctcGVfXzrgcn7iGrBtU0c01yx6/IQxpU19iAP5B31qvJb/44
/95fyckN6uXYgs+SN9SrT3rtO7Ug8SXwr/VYf1fy1/XqlXv7P7npSvLRevWf
Bycm5fYmP1Cvbhj7xnu/9iGPqVevTrFmlEm+uV59Oue76/oNJu+pVzHz7xxJ
7levPkiJvjj5EXK3enXlLZYH/04+VQd7TiZ/X6csmn7Pi+SldSpmrn0vk8vr
1OkF1gQWk/+oU5Z1Hu3yBrlzvbJmkxhxkRfWwT9ryZE69dcxeXcfqCYfr1Mb
f/mjbc4GcmOd6hwLoM3kxXUq5G1OibaQn61TMXM9sIs8i8/bR17N531NfrRO
Za9wTuv6P/KOWszvJPkezq/DLPA3tVjvxeS3arHey8nT6lTMPJ2uJt9E+6WR
X6tVoyz33XkruUud+vb3yp933U0+vw7+uJ8cqFVrrfT6Y5S5/+4DD61w5pKb
atVfLPPePJG8vFadSLMC4llyWy3i5SXzPOvpb/64gBytVbHlLyok59aqWPgk
ryZfWKuWT7Vm6CXfX4t4Lic/UquGxgxaQ86qVdda4TylUa+nVg2JPeBdclKt
uiY2gW3kl2qRb5+SPVF19eIfHm78L3lzFP48YsYX+/9Mbo2qmHmn/07+Kgo9
OH82+MUo8qEL+YeoCvSwAjyZ3KlWvWu5d+M15Kei6st5VoLeRL4vCr3KIBdE
sb6B5K/WY33DyH2jKmzJ3dKHyfOi6qNZ75T0eIJ8LIr4yiO/FEU8TCMfXK+e
jwnIbPJjUfjvNfJtUXXcCt/vlpEHRVVuTCBt5Mb10CM/+XQN9LiCnBiFvWv1
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
2dJPOZ/oQd5uR326imzlt/S315Kt/JF+53ryfOrpTfr5dsRjX3KhE/GTQU5i
v5JJtvJdznfvIWdRHwaRrXiX+ji0KO5P8c8IcgP1axTZyl/R89HkbqxHjxXF
/SH59QTZim+J3/FmPLFnHtlnx/nDM2Qrv0TvnjPPl37vBX29A+cxs4y9RY/n
kS09kr+vkodTfxaRMzj+EsMyfhE5m3q7itzoQHzazHyk33CT27j/LjafS/6W
Gn+JnobITXbYv8qMJ/mxXtvXjvpdT+7sQH/5T3I747nJPF/0dwvZyh85L24m
b7EjPz8ipzH+dmh2IJ926Xi3Yz+/m5xHvdlLnsr4P2CuF3sdIqfSXt+aeJB+
qd2ML/p5lJzoQL93nBxkPTtFTrejPv5h1if9TocVnB/newE5247+t9OK+PzE
v5eYzyW+LyO32bHfuoJsxaPYtyd5rB39QwrZqlfSv6WuiNtD8vsG8ir21zeb
+Uk+9CPvZ329nTzEgfOfu1bE/S390L1kq1+T9wH3kTPsqJ/DyFqvs8z9sr5s
cjvXl0MOsJ49Tm6wY/81jmzpvejXBD0e820S2dIzOd+fQs6i/6aRt7MezCBb
8Sf9/2yypa9y3jef3I32yCfbaI8CslW/5X3gUmNf8fcK41/pT94kN1LPHOQW
O/oxD7kj67uf3GpHv1tm/CP79QqzPsm/avN8OZ+L6nhxoD42kF2M/0ZyigP9
49vkJtbnd839Yu8PtL+pL/8mp7If2kkOM/52mfGkn/zM+BfntyZepf4fMNfL
ecJh7W/q5xEzP6mH7eQi+vNnstVPyP75V8PS/5wy8Yffs5EtfRb/d1gJTmR9
uIBs6ZnsXy8mp3D/dgn5JPW828q4f6SeJa+MP1/Ok3qS8xhf16yM+xf/H8nK
+Prl+htWxu0j1/chD+B+7FZyN55X3a7vt+P6u8njOZ97yVY/I9ffR7b2L/J3
ONnq72W9WeRVtE82+TD1IofcQHs+Tg6zHxpHnsPzmwlkG/01yaxf9GgK2dJX
6Q+mmfVLPMwg72H8zCbn2lFPXiZPZrzlm/slPgvM/KQ/LCRH2S+sIDc6oadv
6udzf2rX/uf7EA/Z6r/k+zt+croDv9daq8d3Ih8rDEs9qtbXO9E/rTfrk3xv
MPaQettoxhN9bdLzt0NP3iVb9UL0+AOzPtl/fqT9bUc/t5OcbEf/s4vcxHq2
W9vLjr/7tD/t8PcBcib9d0jnix35/C15iB3+aNfrs6MfPKrtbcf3F46Ti2yw
7ymyon79ofPLDr370xvx9ch++gLyERvs1Ym8xYb+oAvZZsN52mXmftlfXUHO
sUPfrzT3Sz6lkI+vwfpTyYlcf5p+ng3xmE4ebkd96keO2hBf/cmK+4s7yftt
eF8wkJzCfmAw+aQN+7Wh5FYb+rORZr6ynofM+LKe0W/E7SvrySVb/pd+ZqyZ
n/TL48lZNuh5HtnqF6RfesasV/zznJ6vDd83eIF81Ib6P0vPx4b9wzzDEp8L
yD4b+r1F5FQ79GgJ2WXj73PJ+Tac/71Bbrchn23kznbkp4tcuAbz85Gn2tB/
lZJn2rFfKyc32dAPVxp7yPeZasjptF8duZsd+rRRj2/DecgmY1/p3zYb/0o9
f588n/790Iwv8bpd28OGfG01z5d61GbiV/Rzj7GXxN8X5EYb+qkv9XptyKev
zfhij+/JZ9ZAT37S8W5DPB0z8Sr14ISJT+k3fydn29D/nzPxIP760yrwHhvO
IzuSm9bgfcwF5DQbv29LbrPh/UonslXvpN50Jh+0Sb34qAvZiu9YvP2URM6G
/lx2mRlfxrucXMTxriBvt8nf/L+QFfQmeCV5vB3++quej03ip/1qcgT7n0t7
kS09FX1LJSfZpV48fh05ynhII6fjfCxwI7kv9zvpZCu/Y++TjvQhZ1Hf+62K
+zP2fq7vbdqezKf+5Ayb9FOz79D2s8v7SM+d5AQb9qN3k614kXp4D3ky8v98
Zewv5z2D9ed2nOcOMfaU/B9K7mkX/68ebuYXs8+GEcYfsX5nT5aZX2z406OM
P/D7cnKhHeczo83zRA8fIVv5LnrwmLGf5M/j5ADmu+0JM57EzzhykP4cr+MV
+4GMiebz2H7msTzjP/k+5CT9fPYvk/X46KffnqLXg/OAg1O1/9j/Pa/tyfPj
F8iJ6AeGzjDPk/eLL5GtfIy168tmkwvYX87V9uF51Mvm+bH2+egr2l58X5BP
HovvA2QsNCz9ZQHZ6nflfe3r5CHY77gKDeP3RuQGnGftL9L2wvvIMyt1vjvh
3zfJx/l9lzVka/8Zi8cJdvO8mL0WOjXzfZpb5x/fX3jN82V/U6zn75T4uDCg
1++S/vf6tfp6fL9neJCc4pZ+8pmQXp8H9g7r/ML3/aqryHPwfaNtEe0ffF+z
vUbnF77P++darQ/4vUafevLRYvTPG7T//cinf+r58fd2b5FvDMh57vp/kbuV
Sr36+G3y2VL0K5vJx9Zif/8eORW/1+/bTD7N33Nv1fnL/8+jhfxNWO5f9W9y
ryp8P2C7Hi+C8Xfq+dRg/FbyDVGZ/yX/0f6uxXn0p+TV+P8XR31G7rEB6/+c
XLdR9uMr95G7v6Uqn3lw3GHNeW+p/wO/Upvx
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> 
          RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]], 
         LineBox[{{324.497, 6341.}, {324.8892868852459, 6500.}}], 
         LineBox[CompressedData["
1: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
EfQ/hjyrCPNvLLlbEfT7ZvKeQszzfcmFRfB/f/LuIvjzTvLOIuTf3eQZRfBP
AjmuCPr0ADmmGOfbI9T6i1DPHyHHFmFeH0tOKUI//xj5ySLYL5lcX4jzgafJ
bYWYLyeRk4qM6eH/ppIHFGEee4H8eBH0+iWyuxD1Po18phD5MJ9cXIR4fVWv
V+rvEu0v0bul5O8KEU8ryScLUV9zyKFC7C9PXy/ndRZyeSHqp5O8rhD+9pDT
i9D/FSl/FaIf9ZNrCpHvAXKXQvivWt3fh36nTvmvEP37ZrK/EPr/nn6+nOd+
QE7lepvITT6s91Nymg/r/YI8uRDz2n5yv0L8PajitRD6cVjZywe9P0b+yQf7
tpCP+BA/P5O3+4ywvMedIZf4kE/n9P2k//mT3K4Q8RC1FLzAh/Oj9uRjPujd
ZUsj+xU9uoJ8ygd7dVsa2b/49zpyug/535N8wIf5oBd5ZCH6g75kqw/xeBu5
UyH0fAB5sw/5dhe53gt9u5e82gd/DdP3k+cb5B0+6MnD5Eof5vFHyYYP8904
8gruf8LSiP2lPj9FjmF8p5JH0f7PkcfR/s+T7T7k40xypg/9xhxyOx/0Zh55
kQ/5lU6e4cP7mgxyqxfvx95Q9vdCD1aQB/jQD64mt3ihd2+St3vRD7yt7y/9
rl1/Lv7M15/LfOUjxzKeSsgjuZ8K8jYv9lNFrvFiPyGy14t+qkE/T/rTreTZ
Puj9DvJxL/R7Jzndi/q9izzFC/98Tk5kfuxT9vfifP9rshk/Mu9+o58v/fR3
5Ggf7HOcHOVDvJ0g/88LvT6lnyf+Pkue5cX70D/I/X2oL3+RB/rQr7ZbFtmP
1NtLNct8cjnZ78X7r676c9G7a8htXujz9eQGL/rRG8lnvciH3uREL/rxW5dF
1if+iyd39Rph8xQMJJd40T8MIW/xQr+HkvcU4H7Dl0XsJfd7iLyD6xut1yvr
SyR35/qSyDFexNcT5PVenBdOJI/x4vxjMrmZ9vs3uZ8X8foC2Ywf6Q9mkd1e
9Idp5AtenNe9Qh5G/y4if+fF+fYScrIX50fL9Hqkv1tJHuWFPuTo6yX+3iL3
8SI/Lfr7ondO5Q8v+jkPuT3zvYic5kV++MlTCqBfAXJ0AepHNbmbF/1bHTne
Cz3eTE4qgL/eI/egvz4gL6F9m/R6JN53k3MKUI+/IGcVIH++JOcVwB4HyMO9
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
6NlT5Fbq1TPkRCf66ynkIO07jdzM/HhR20v61Ze1vWV++w/Z7E/kvH+Bfr70
Z4vJsYyH17U9Jb6Xqec5oZ/Zan0O5HOOtrfY7y1lbwfqqYU8hvXMSe7jhH55
9P6knhSRzfoj/WYpucEO/akgD3PgPClITuV6Qjo+RI/fUfdzoH5vJYccsM8O
fT+xz06yGe+SL7vIaQ7Up89VPDgQX//Vn4u/msl5rA+HVLzb0W98S57Cev+9
Xr/U45+0PSR+Tur1y3z0K3kW693vOh5lXviT3OjA73+iVkf8I/nXnjzFjv73
MnKzHfp4Bfm8HfW7Gzlgx7x2LTmKet9jdcSfMu/fRI5h/btldcRekj9x5CY7
/B9PNuNF4nEQOY72HkJuseP8fijZa8e8NFzvT853RpLj7ei/RpN7OfB7orHk
LMZbEjnE5yWTW+3IxxRyBp83iZxuR7/7HHm9HfubTjbjQeaVmeSzdsyvc/Tn
Ys95ev2irwu1faQ+ZpDn25FPmdr+Er/LyWY+it6vUvtn/VpLHmxHvKwj2+04
D7aS99ih1y7yETvO9wq0vUXfipV/7egf/MoerIcBst+OfKgmm/Ev9b2OnGfH
/LRZx5/Ya5v2l8TfB2QzP+X940fkVDvifZdajwP5vkfbT/rtfTp+Jb++Jmfb
sP5vyMl2zMvfav9KfTuu/S/+/omcZIee/aJZ5tdf1f5s6KfOK//Ycd7epuzv
wPueqDXgWAf6ww7kYXbUl8vIfZgfXcgJNsRPtzWR+0u/cS15hh326ElOtcGf
N5FDNtTXPuSBduh/HNlg/MeTm23ofweRs+zQ0yFkU59lHr+P3GhHPzWcvNsG
+44kz2I+jV4Tsb/U27HkMXbMN0l6faKHyeRTrAcp5Bwb4m2Sso8d+vOcsq8d
+TJdPx+/nySn2fF+Z7a+Xu43j3yI91tIbrXhfhnqcxvul6ntI+vLIrdnPK0i
T7FhXs0lF3O/68hmPMl5ipWcbUd+OdX+begnC7T/RR+KyH4b/OEn77Nh/gr8
P/8G1fXUmzodH9JPvKOfL/GyjdzdDr3coexpw/vQnWSzfsh52C6yqcfSn39O
brMhnvdp/0p+N5MzbOjPDpHN/JXzkm/JXhv04nuyqUeSbz+RzfyVfuWk3o/U
hzPkXjbUv9/JZ22Irz+1fyVeL5KP2VDf2ueA02yY36LJ0cynK8hm/Mrv767K
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
6A==
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Thickness[Tiny], "LineColor" -> RGBColor[
            Rational[2, 3], 0, 
            Rational[2, 3]], 
          AbsoluteThickness[1]]}, {}}}, {{}, {}}}}, {
    PlotLabel -> FormBox["\"\"", TraditionalForm], LabelStyle -> {10, 
       GrayLevel[0], Bold}, ImageSize -> Large, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], FrameLabel -> {
       FormBox["\"Wavelength [nm]\"", TraditionalForm], 
       FormBox["\"Counts\"", TraditionalForm]}, Frame -> True, 
     LabelStyle -> (FontFamily -> "Helvetica"), DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\" wavelength [nm]\"", TraditionalForm], 
       FormBox["\" counts\"", TraditionalForm]}, AxesOrigin -> {510., 800.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.01]], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {10, 
       GrayLevel[0], Bold}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{510, 550}, {800, 6500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Theta]=0\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=10\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Medium], "LineColor" -> RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Medium], "LineColor" -> RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Medium", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=20\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.6666666666666666, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", "1", ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=30\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4444444444444444, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.6666666666666666`", ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.6666666666666666, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=40\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"1", ",", "0.6666666666666666`", ",", 
                    "0.6666666666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    Editable -> False, Selectable -> False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=50\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6666666666666666`", ",", "0.6666666666666666`",
                     ",", "0.6666666666666666`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=60\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 1], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[1, 3], 1, 1], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", "1", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 1, 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=70\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.2222222222222222, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6666666666666666`", ",", 
                    FractionBox["1", "3"], ",", "0.6666666666666666`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6666666666666666, 
                    Rational[1, 3], 0.6666666666666666], Editable -> False, 
                    Selectable -> False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=80\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4888888888888889, 0.4, 0.3111111111111111], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.7333333333333333`", ",", "0.6`", ",", 
                    "0.4666666666666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
                    Editable -> False, Selectable -> False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=90\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 1], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 
                    Rational[1, 3], 1], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["1", "3"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=100\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 1, 
                    Rational[1, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=110\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 0, 0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=120\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]
                    ], BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=130\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 1], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=140\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> GrayLevel[0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> GrayLevel[0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=150\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=160\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[1, 0.5, 0.5], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=230\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0.6, 0.4, 0.2], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=240\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> GrayLevel[0.5], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=250\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 1, 1], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=260\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=270\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=280\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
                    Rational[2, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 0, 
                    Rational[2, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=290\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2666666666666667, 0.1777777777777778, 
                    0.0888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.4`", ",", "0.2666666666666667`", ",", 
                    "0.13333333333333336`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    Editable -> False, Selectable -> False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=300\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=310\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4444444444444444, 0.22222222222222227`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0.33333333333333337`", ",", 
                    "0"}], "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0], Editable -> 
                    False, Selectable -> False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=320\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0.33333333333333337`", ",", 
                    "0.33333333333333337`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=330\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4444444444444444, 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=340\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> 
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.22222222222222227`, 0., 0.22222222222222227`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", "0", ",", 
                    "0.33333333333333337`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], 
                    Editable -> False, Selectable -> False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=350\[SmallCircle]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Tiny], "LineColor" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                Baseline, ColumnAlignments -> Left], 
               Function[BoxForm`e$, 
                TableForm[
                BoxForm`e$, TableAlignments -> Left, 
                 TableSpacing -> {1, 1}]]], Alignment -> Left, 
              AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
              ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, 
             StripOnInput -> False], {FontSize -> 10, 
             GrayLevel[0], FontWeight -> Bold, FontFamily -> "Arial"}, 
            Background -> Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"\"LineColor\"", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4444444444444444, 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "table"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7798264681518993`*^9, 3.7798264845110617`*^9}, {
   3.7798265703374662`*^9, 3.77982659100121*^9}, 3.7798269358586035`*^9, 
   3.7798272539509745`*^9, 3.7798973159297314`*^9, 3.7798974023046665`*^9, {
   3.7798974494471445`*^9, 3.779897473487179*^9}, {3.7798975922165713`*^9, 
   3.779897643976652*^9}, 3.7798977260565147`*^9, 3.7798979242813554`*^9, 
   3.779898016675869*^9, 3.7798980509099865`*^9, 3.7798981024913836`*^9, 
   3.779898669788503*^9, 3.779898704104931*^9, 3.7798989051573668`*^9, 
   3.7799006594368763`*^9, 3.779900696728619*^9, 3.779900730787899*^9},
 CellLabel->
  "Out[414]=",ExpressionUUID->"12aa1363-d2e1-4098-a69c-e14b77dd4f00"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7731785081784563`*^9, 3.773178510246563*^9}, {
   3.7735678142378483`*^9, 3.7735678388414736`*^9}, {3.7735765875007453`*^9, 
   3.773576732656821*^9}, {3.7735767823470283`*^9, 3.7735768711402674`*^9}, {
   3.773576904390778*^9, 3.773577030962102*^9}, {3.7798220908591557`*^9, 
   3.779822091839243*^9}, 3.7798256367029343`*^9, 3.77989931594187*^9, 
   3.779900738328528*^9},ExpressionUUID->"c2afd716-b971-4d3f-9434-\
2801c0436266"],

Cell[BoxData[
 RowBox[{"\n", "\n", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.779899307244051*^9, 3.779899307258918*^9}, 
   3.7798994124190717`*^9, 3.7798994720375905`*^9, 
   3.7798995302432346`*^9},ExpressionUUID->"32166037-96e8-421b-86d0-\
66e64c6a5fed"]
},
WindowSize->{1280, 941},
WindowMargins->{{-1288, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3590, 66, 90, "Input",ExpressionUUID->"cee2bac7-e74d-43b7-bb8d-320fa5429f83"],
Cell[4151, 88, 154, 3, 28, "Input",ExpressionUUID->"96e364e5-e2b1-4f82-84f5-1db016c38680"],
Cell[4308, 93, 4615, 100, 219, "Input",ExpressionUUID->"684788ba-b513-4283-871c-ac5dd03a14cc"],
Cell[8926, 195, 385, 6, 67, "Input",ExpressionUUID->"6f8da060-29cb-4688-92ee-7b9ef3766f9c"],
Cell[CellGroupData[{
Cell[9336, 205, 5241, 98, 151, "Input",ExpressionUUID->"dc386805-457a-44d5-ac6b-ad1c98fe4116"],
Cell[14580, 305, 15471, 322, 334, "Output",ExpressionUUID->"454cf25f-3511-4063-8ba3-9971d92a4f2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30088, 632, 3774, 61, 48, "Input",ExpressionUUID->"52ad5591-c08f-4135-9231-c53edfa88f1c"],
Cell[33865, 695, 3533, 65, 77, "Output",ExpressionUUID->"32c2d3b0-bc21-421a-9efc-adb0edd7bbb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37435, 765, 177, 3, 28, "Input",ExpressionUUID->"f1a26bb7-d1a4-4d29-930e-3db3445eb2d4"],
Cell[37615, 770, 1214, 25, 115, "Output",ExpressionUUID->"58fd6224-398e-45fd-82d4-1425cef99c9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38866, 800, 179, 3, 28, "Input",ExpressionUUID->"cbeeada4-91fe-4322-bc7e-bfc917433a44"],
Cell[39048, 805, 169, 2, 32, "Output",ExpressionUUID->"44188dfa-4447-418a-ac62-09181722f3aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39254, 812, 912, 24, 52, "Input",ExpressionUUID->"58a45fc1-c7ba-4458-9a64-2de21c8ccdaa"],
Cell[40169, 838, 4070, 84, 233, "Output",ExpressionUUID->"4058dfc5-a80d-4008-bdc0-762e89b124ff"]
}, Open  ]],
Cell[44254, 925, 156, 3, 28, "Input",ExpressionUUID->"cb852a00-4789-4b1e-ad4c-4576a321cb50"],
Cell[CellGroupData[{
Cell[44435, 932, 3369, 73, 171, "Input",ExpressionUUID->"396a3997-7be5-4de0-9b62-19ad530045d4"],
Cell[47807, 1007, 24976, 476, 334, "Output",ExpressionUUID->"342bddef-b84e-4060-b163-d575f41e560b"]
}, Open  ]],
Cell[72798, 1486, 152, 3, 28, "Input",ExpressionUUID->"4355c57f-5f44-463b-9ee0-ce7900e72469"],
Cell[CellGroupData[{
Cell[72975, 1493, 3487, 75, 190, "Input",ExpressionUUID->"20f3b72c-475d-4eda-afe6-8f8f63d50d83"],
Cell[76465, 1570, 24928, 476, 334, "Output",ExpressionUUID->"af754b61-d0a9-4ea2-b5d2-684734754fa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101430, 2051, 3231, 71, 171, "Input",ExpressionUUID->"940d9223-99c1-4f84-bb71-7bbc95e8ac7f"],
Cell[104664, 2124, 24910, 472, 334, "Output",ExpressionUUID->"cc36a5c9-eb7a-49ef-868d-3725f7c3a51b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129611, 2601, 3332, 73, 190, "Input",ExpressionUUID->"a7ba70c8-992c-4ca8-bf54-e9c1fd855e30"],
Cell[132946, 2676, 25094, 471, 334, "Output",ExpressionUUID->"6e796413-c95f-4e0d-8b2c-63d8e468bc9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158077, 3152, 3406, 74, 170, "Input",ExpressionUUID->"164f70cc-1b34-4eee-a29c-cebc4d4489da"],
Cell[161486, 3228, 25285, 479, 334, "Output",ExpressionUUID->"e37ea744-05e8-45a4-a7cc-c971b92cb75c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186808, 3712, 3533, 75, 228, "Input",ExpressionUUID->"f0d9d08d-3844-4ab1-a248-f9e45d0a941c"],
Cell[190344, 3789, 24683, 468, 334, "Output",ExpressionUUID->"5895b784-f82a-4c4a-bb16-1f7aefe06411"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215064, 4262, 3475, 75, 170, "Input",ExpressionUUID->"4b0bad2e-64d9-4424-a1b5-42934d9c8d2d"],
Cell[218542, 4339, 25008, 470, 334, "Output",ExpressionUUID->"e864a7a8-a2ca-49c1-bb3f-f9a73b852249"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243587, 4814, 3471, 75, 170, "Input",ExpressionUUID->"8bdecdfc-8772-4a13-840a-5d6491a213e9"],
Cell[247061, 4891, 24601, 461, 334, "Output",ExpressionUUID->"0cc124a7-f261-41df-ae5f-68c38fdf0624"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271699, 5357, 3478, 75, 189, "Input",ExpressionUUID->"ca5a76f3-4db1-44a6-b30c-74ec5438a7e1"],
Cell[275180, 5434, 24419, 463, 334, "Output",ExpressionUUID->"09d55c64-7c2d-48d6-bd80-50284123ca94"]
}, Open  ]],
Cell[299614, 5900, 259, 5, 67, "Input",ExpressionUUID->"ff7333ac-73a5-47e9-8516-a77d3a75c207"],
Cell[CellGroupData[{
Cell[299898, 5909, 3459, 75, 170, "Input",ExpressionUUID->"9d4bf7b3-ac4a-49b1-9253-5547be854eb6"],
Cell[303360, 5986, 24243, 461, 334, "Output",ExpressionUUID->"9385cace-d9b6-4687-9cfe-dfa0f266ac88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327640, 6452, 3323, 72, 170, "Input",ExpressionUUID->"49827863-c40d-40a4-828e-86e0120516b5"],
Cell[330966, 6526, 23780, 447, 334, "Output",ExpressionUUID->"415d67c4-99cf-401a-9c23-777ff33971e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354783, 6978, 3406, 73, 189, "Input",ExpressionUUID->"0b859470-e59b-42b2-88c1-8cfb50f36e6a"],
Cell[358192, 7053, 23954, 450, 334, "Output",ExpressionUUID->"7baec4a7-a860-46da-ac4a-79d28b04c2e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382183, 7508, 3326, 72, 170, "Input",ExpressionUUID->"e4fb2bda-a674-4897-bb49-203ea7269fe2"],
Cell[385512, 7582, 24021, 451, 334, "Output",ExpressionUUID->"5473d482-eb65-4133-809f-421b97c0ad22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409570, 8038, 3351, 72, 189, "Input",ExpressionUUID->"04f701a3-c8bf-46e9-9171-a471eccc371b"],
Cell[412924, 8112, 24006, 452, 334, "Output",ExpressionUUID->"2075b19c-7e67-4ee2-a27c-6818bd30655f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436967, 8569, 3322, 72, 170, "Input",ExpressionUUID->"79bf2d80-4606-40e4-b115-ee24e8c35e2c"],
Cell[440292, 8643, 24272, 455, 334, "Output",ExpressionUUID->"30ab52ed-7e13-4bbc-8885-fa42707fe67c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464601, 9103, 3194, 70, 171, "Input",ExpressionUUID->"c08cab41-38e9-4f56-83cb-cdedfe381f11"],
Cell[467798, 9175, 24420, 459, 334, "Output",ExpressionUUID->"d847cfdc-77d0-43e9-a2b7-09c3514cbeb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492255, 9639, 3333, 73, 170, "Input",ExpressionUUID->"168205a4-6db2-4976-8051-c3027429ced6"],
Cell[495591, 9714, 24447, 458, 334, "Output",ExpressionUUID->"d353e293-2a8b-4368-a7ea-7e2c14d4fe8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520075, 10177, 3228, 71, 170, "Input",ExpressionUUID->"410431aa-3ce2-4b72-82ec-37b442a3c0f6"],
Cell[523306, 10250, 24052, 452, 334, "Output",ExpressionUUID->"4a71ab5b-3f08-49f4-89f4-69a85d13d83c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547395, 10707, 3883, 85, 227, "Input",ExpressionUUID->"93bd604f-74b8-4c44-809e-b9ea8e5d5386"],
Cell[551281, 10794, 24810, 463, 334, "Output",ExpressionUUID->"b95f65bf-7453-4299-b11a-db7a7c8b28d9"]
}, Open  ]],
Cell[576106, 11260, 129, 3, 28, "Input",ExpressionUUID->"3c77b3a6-54fe-4240-aaba-f8d58f39dd35"],
Cell[CellGroupData[{
Cell[576260, 11267, 3270, 72, 170, "Input",ExpressionUUID->"7e78ed74-ba33-4e96-9f5d-8157ef841352"],
Cell[579533, 11341, 24262, 460, 334, "Output",ExpressionUUID->"de0f6d2f-5075-4cad-8f1f-9da37e0f847c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603832, 11806, 3236, 71, 189, "Input",ExpressionUUID->"a3b16936-21b5-4501-908e-a2c774a762bb"],
Cell[607071, 11879, 24197, 458, 334, "Output",ExpressionUUID->"a25f8e3a-9e27-4b46-a72f-8abcc311f9ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631305, 12342, 3239, 72, 189, "Input",ExpressionUUID->"7891a1b9-2594-4241-b1cc-82b438147dd2"],
Cell[634547, 12416, 24048, 457, 334, "Output",ExpressionUUID->"7d70adf9-50f2-40af-9853-f5401e2ea818"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658632, 12878, 3246, 71, 189, "Input",ExpressionUUID->"06381212-acc0-40bd-9cf1-c2e957a9a783"],
Cell[661881, 12951, 24318, 458, 334, "Output",ExpressionUUID->"597fd9f4-80da-49d0-a319-8d837847f356"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686236, 13414, 3248, 72, 189, "Input",ExpressionUUID->"93ecc372-1b5d-4d76-9188-8b36016faba7"],
Cell[689487, 13488, 24486, 468, 334, "Output",ExpressionUUID->"f0a3e51f-351b-41b2-b339-3a8243b011fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[714010, 13961, 3216, 71, 170, "Input",ExpressionUUID->"2fcf5f6f-a494-4724-92a0-6cabf4463504"],
Cell[717229, 14034, 24455, 461, 334, "Output",ExpressionUUID->"572630e4-478a-4f74-88e9-f76b90430672"]
}, Open  ]],
Cell[741699, 14498, 530, 9, 162, "Input",ExpressionUUID->"6217008f-8b18-49fa-92e4-554d2f64db93"],
Cell[CellGroupData[{
Cell[742254, 14511, 3212, 71, 170, "Input",ExpressionUUID->"b39ba7f0-6ab9-4b36-ad03-797b4d40a347"],
Cell[745469, 14584, 24944, 470, 334, "Output",ExpressionUUID->"74c4bb0c-278a-4b57-9df2-2098551e359f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[770450, 15059, 3088, 68, 151, "Input",ExpressionUUID->"1a28ef6c-d9fe-44cd-a411-32f7704b9307"],
Cell[773541, 15129, 24842, 474, 334, "Output",ExpressionUUID->"c619e9a3-fc96-4674-aa45-66b3e9e72518"]
}, Open  ]],
Cell[798398, 15606, 607, 9, 28, "Input",ExpressionUUID->"96deaae9-6890-4a4d-930e-7d9662558bdd"],
Cell[CellGroupData[{
Cell[799030, 15619, 3236, 71, 151, "Input",ExpressionUUID->"68957e7a-4051-4375-b77d-164ef8bc5510"],
Cell[802269, 15692, 24739, 464, 334, "Output",ExpressionUUID->"f00205c3-ee99-4a3c-81e9-d50c44cabe2d"]
}, Open  ]],
Cell[827023, 16159, 168, 2, 28, "Input",ExpressionUUID->"c1c13400-a6ff-4cab-8bf8-e197e78ac279"],
Cell[CellGroupData[{
Cell[827216, 16165, 3791, 79, 209, "Input",ExpressionUUID->"23d11fa3-3264-4b98-a87d-966eb01efabb"],
Cell[831010, 16246, 25056, 478, 334, "Output",ExpressionUUID->"50991c20-b86d-466f-bafe-2b36ff1c2750"]
}, Open  ]],
Cell[856081, 16727, 154, 3, 28, "Input",ExpressionUUID->"3314c936-1e4a-4944-b6fd-e333a43f001c"],
Cell[856238, 16732, 154, 3, 28, "Input",ExpressionUUID->"cd5b48af-8ebd-4a2e-aa85-4294167865d5"],
Cell[CellGroupData[{
Cell[856417, 16739, 3610, 59, 143, "Input",ExpressionUUID->"433ba41c-4083-44d1-9481-c3f20f41d8f6"],
Cell[860030, 16800, 674262, 12469, 885, "Output",ExpressionUUID->"12aa1363-d2e1-4098-a69c-e14b77dd4f00"]
}, Open  ]],
Cell[1534307, 29272, 480, 7, 28, "Input",ExpressionUUID->"c2afd716-b971-4d3f-9434-2801c0436266"],
Cell[1534790, 29281, 272, 5, 86, "Input",ExpressionUUID->"32166037-96e8-421b-86d0-66e64c6a5fed"]
}
]
*)

